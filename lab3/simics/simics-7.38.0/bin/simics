#!/bin/bash

# Â© 2010 Intel Corporation
#
# This software and the related documents are Intel copyrighted materials, and
# your use of them is governed by the express license under which they were
# provided to you ("License"). Unless the License provides otherwise, you may
# not use, modify, copy, publish, distribute, disclose or transmit this software
# or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or
# implied warranties, other than those that are expressly stated in the License.

# PROJECT_SETUP_PROJECT_ARGUMENT
# PROJECT_SETUP_ROOT_SCRIPT
# PROJECT_SETUP_PYTHON_ARGUMENT

# ignore any user startup code that may not work without Python version
unset PYTHONSTARTUP

DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
_base="$DIR/.."

# Override if SIMICS_LD_LIBRARY_PATH is set (but maybe empty!)
if [ ! -z ${SIMICS_LD_LIBRARY_PATH+x} ]; then
    unset LD_LIBRARY_PATH
    export LD_LIBRARY_PATH=$SIMICS_LD_LIBRARY_PATH
fi

. "$_base/scripts/python-path.sh"
. "$_base/scripts/simics-python.sh"

if ! [ -z "${SIMICS_PYTHON_PACKAGE+x}" ]; then
    _PYTHON_PKG="$(realpath ${SIMICS_PYTHON_PACKAGE})"
    _BASE_PKG="$(realpath ${SIMICS_BASE_PACKAGE})"
    # Check if Python package lookup resolved to Simics-Base, i.e. it is
    # not installed
    if [ "${_PYTHON_PKG}" = "${_BASE_PKG}" ]; then
        echo "Warning: package 1033 not found." >&2
        echo "This package will soon become mandatory." >&2
    fi
fi

exec "$_MINI_PYTHON" "$_base/linux64/simics" "$@"
