#!/bin/bash

# Â© 2012 Intel Corporation
#
# This software and the related documents are Intel copyrighted materials, and
# your use of them is governed by the express license under which they were
# provided to you ("License"). Unless the License provides otherwise, you may
# not use, modify, copy, publish, distribute, disclose or transmit this software
# or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or
# implied warranties, other than those that are expressly stated in the License.


# The script unloads and uninstalls VMXMON from the system.
# Please follow this style guide when updating the script:
# https://google.github.io/styleguide/shellguide.html

set -u  # To catch errors early let's treat unset variables as errors.


DRY_RUN=""
if [[ -n "${1:-}" ]]; then
    case "$1" in
        --dry-run|-n) DRY_RUN=y ;;
        --help|-h|*) echo "Usage: $0 [--dry-run]" ; exit 0 ;;
    esac
fi
readonly DRY_RUN

SUDO="sudo"
if [[ "${UID}" == "0" ]]; then
    SUDO=""
fi
readonly SUDO

function verbose() { echo "$*" ; [[ -n "${DRY_RUN}" ]] || "$@" ; }
function remove() { [[ -f "$1" ]] && verbose "${SUDO}" /bin/rm -f "$1" ; }

# uninstall kernel module
VMXMON_KO="/lib/modules/$(uname -r)/extra/vmxmon.ko"
[[ -f "${VMXMON_KO}" ]] && verbose "${SUDO}" /bin/rm -f "${VMXMON_KO}"

# uninstall udev rules
VMXMON_UDEV=/etc/udev/rules.d/99-vmxmon.rules
[[ -f "${VMXMON_UDEV}" ]] && verbose "${SUDO}" /bin/rm -f "${VMXMON_UDEV}"

# uninstall systemd module loader
SYSTEMD_VMXMON=/etc/modules-load.d/vmxmon.conf
[[ -f "${SYSTEMD_VMXMON}" ]] && verbose "${SUDO}" /bin/rm -f "${SYSTEMD_VMXMON}"

INIT_D=""
if [[ -d /etc/init.d ]]; then
    INIT_D=/etc/init.d
elif [[ -d /etc/rc.d/init.d ]]; then
    INIT_D=/etc/rc.d/init.d
fi

RDIR=""
RUNLEVEL=$(/sbin/runlevel | sed 's/[^0-9]*//' 2> /dev/null)
if [[ -n "${RUNLEVEL}" ]]; then
    RDIR="rc${RUNLEVEL}.d"
fi

# remove from rc.d using chkconfig if available
if [[ -x /sbin/chkconfig && -n "${INIT_D}" && -f "${INIT_D}/vmxmon" ]]; then
    verbose "${SUDO}" /sbin/chkconfig --del vmxmon
fi

# remove rc files which we may have installed by hand
remove "/etc/init.d/vmxmon"
remove "/etc/rc.d/init.d/vmxmon"
if [[ -n "${RDIR}" ]]; then
    remove "/etc/${RDIR}/S98vmxmon"
    remove "/etc/rc.d/${RDIR}/S98vmxmon"
fi

/sbin/lsmod | grep vmxmon >& /dev/null && \
    verbose "${SUDO}" /sbin/rmmod vmxmon

# Remove all DKMS installed vmxmon versions
if [[ -x "$(command -v dkms)" ]]; then
    function remove_all_vmxmons_dkms() {  # TODO: reuse code from install script
        # dkms status lines that we parse below can have these formats:
        # a.) output starting from 2.8.6 version of dkms:
        #   "vmxmon/1.16.5, 6.5.11-200.fc38.x86_64, x86_64: installed"
        # b). earlier dkms versions:
        #   "vmxmon, 1.15.48, 5.0.8-100.fc28.x86_64, x86_64: installed"

        local i
        while read -r i; do
            if [[ -z "${i}" ]]; then
                continue
            fi
            echo "Removing *${i}*"
            verbose "${SUDO}" /sbin/dkms remove "${i}" --all
            VMXMON_DIR=/usr/src/${i/\//-}
            if [[ -d "${VMXMON_DIR}" ]]; then
                verbose "${SUDO}" /bin/rm -rf "${VMXMON_DIR}"
            fi
        done < <("${SUDO}" /sbin/dkms status vmxmon \
                     | sed -e 's:^vmxmon, :vmxmon/:' \
                           -e 's:\(^vmxmon/[[:alnum:].]\+\)\?.*:\1:')

        # Sanity check that nothing was left behind:
        local VMXMONS_AFTER
        VMXMONS_AFTER=$("${SUDO}" /sbin/dkms status vmxmon)
        if [[ -n "${VMXMONS_AFTER}" ]]; then
            echo -e "*** Failed to uninstall vmxmon." \
                    "Please report:\n${VMXMONS_AFTER}"
        fi
    }
    remove_all_vmxmons_dkms
fi

