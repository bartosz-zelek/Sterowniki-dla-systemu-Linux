#!/bin/bash

# Â© 2012 Intel Corporation
#
# This software and the related documents are Intel copyrighted materials, and
# your use of them is governed by the express license under which they were
# provided to you ("License"). Unless the License provides otherwise, you may
# not use, modify, copy, publish, distribute, disclose or transmit this software
# or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or
# implied warranties, other than those that are expressly stated in the License.

# rc file for automatic loading of Simics vmxmon kernel module
#
# chkconfig: 2345 8 72
# description: Loads Simics VMP kernel modules
#
### BEGIN INIT INFO
# Provides: vmxmon
# Required-Start: $syslog
# Required-Stop: $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Loads Simics VMP kernel modules
# Description: Loads Simics VMP kernel modules
### END INIT INFO

#if [ -r $initdir/functions ]; then
#        . $initdir/functions
#fi

function modprobe_wrapper() {
    $SUDO /sbin/modprobe "$@" >& /dev/null
    RETCODE=$?
    if [ $RETCODE -eq 2 ] ; then
	# Return code 2 means that the module is not supported, so we
	# retry with --allow-unsupported.
	if ! modprobe_wrapper --allow-unsupported "$@" ; then
	    return 1
	fi
    elif [ $RETCODE -ne 0 ] ; then
	# Module load failed, but error was suppressed. Run it again
	# to get the error message.
	$SUDO /sbin/modprobe "$@"
	return $RETCODE
    fi
}

function start() {
    if ! modprobe_wrapper vmxmon ; then return 1 ; fi
}

function stop() {
    /sbin/modprobe -r vmxmon >& /dev/null 
    return 0
}

function restart() {
    stop
    start
}

function status() {
    /sbin/lsmod | grep vmxmon >& /dev/null \
        && { echo "vmxmon is started" ; return 0 ; }
    echo "vmxmon is stopped"
    return 3
}

# need root privileges
if [ "$1" != "status" ] && [ "$(id -u)" -ne 0 ] ; then
    echo "must be run as root"
    exit 4
fi

case "$1" in
    start) start ;;
    stop) stop ;;
    status) status ;;
    restart) restart ;;
    *) echo "usage: $0 {start|stop|status|restart}" ; exit 2 ;;
esac
