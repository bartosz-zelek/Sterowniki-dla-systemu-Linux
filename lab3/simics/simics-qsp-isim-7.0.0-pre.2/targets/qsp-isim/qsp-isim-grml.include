log-setup -overwrite qsp_isim.log

$num_cores = 3

run-script "%simics%/targets/qsp-x86/firststeps.target.yml" namespace=qsp machine:hardware:processor:num_cores=$num_cores machine:software:linux:grml:configure_root=FALSE

$system = board
$machine_name = ($system)
$system->system_info = "QSP ISIM Tutorial"

@def get_first_processor():
    all_processors = SIM_get_all_processors()
    if len(all_processors) < 1:
        return None
    else:
        return all_processors[0]


script-branch {
    board.serconsole.con.capture-start filename=qsp_serconsole_output.txt

    @simics.SIM_log_info(1, conf.sim, 0, "Waiting for login")   
    bp.console_string.wait-for board.serconsole.con -regexp "root.*@grml.*#.*"

    @simics.SIM_log_info(1, conf.sim, 0, "Load performance, power and thermal models")
    run-python-file "%simics%/targets/qsp-isim/common/isim-set-up.py"

    ## Add mini-performance model
    $mp=(new-sample-core-timing-tool parent=$system name=($machine_name + ".sample_core_timing"))

    $mp.set-background-activity-per-cycle 8.2

    $mp.set-base-activity-per-instruction 473
    $mp.set-base-cycles-per-instruction 0.46

    $mp.set-activity-per-read 246
    $mp.set-cycles-per-read 0.01

    $mp.set-activity-per-write 567
    $mp.set-cycles-per-write 0.1

    $mp.add-instruction-class "nop" -0.20 -356
    $mp.add-instruction-class "div" 0.55 833
    $mp.add-instruction-class "mul" 0.25 321
    $mp.add-instruction-class "mla" 0.35 401
    $mp.add-instruction-class "xmm" 0.2  633
    $mp.add-instruction-class "rdtsc" 350 400
    $mp.add-instruction-class "rep stosb" 20.0 1234.0

    $mp.list-instruction-classes

    load-module docea_physical_model
    load-module power_manager
    @from itertools import product
    @signals_to_observe = [prod[0] + f"{prod[1]}" for prod in product(["T_core", "IPC_core", "F_core", "P_core", "Energy_Per_Instruction_core", "Cdyn_core"], range(simenv.num_cores))]
    @path_to_metadata = f"metadata_{simenv.machine_name}.json"

    @thermal_R = 40.0
    @leakage_parameter = 0.069
    @thermal_C = 0.1
    @thermal_throt_limit = 95.0
    @thermal_hysteresis = [0.0, 3.0]
    @ambient = 40.0
    @reference_temp = 40.0
    @workpoints = [[1.2, 4.0e9], [1.16, 3.8e9], [1.1, 3.6e9], [1.06, 3.2e9], [1.0, 3e9], [0.97, 2.7e9], [0.90, 2e9], [0.88, 1.7e9], [0.85, 1e9]]
    @cdyn_virus = 1.05e-9
    @cdyn_idle = 1.6e-11
    @governor = "ondemand"

    @kdict = {'Kp': 1.0, 'Ki': 0.0, 'Kd': 0.001}

    $logs_folder = (sim->project + "/logs")
    @if not os.path.exists(simenv.logs_folder):
        os.makedirs(simenv.logs_folder)

    @isim_setter = Isim_Setter(simenv.machine_name, simenv.logs_folder)
    $trace_file = "tracer.csv"
    @isim_setter.set_behavioral_module(simenv.trace_file, signals_to_observe, thermal_C, thermal_R, leakage_parameter, ambient, reference_temp, cdyn_idle)
    @isim_setter.set_interface_modules(path_to_metadata, get_first_processor())

    @isim_setter.set_perf_to_docea()
    @isim_setter.set_power_managers(thermal_throt_limit, thermal_hysteresis, kdict, governor, workpoints, cdyn_virus)

    bp.console_string.wait-for board.serconsole.con -regexp "root.*@grml.*#.*"
    @simics.SIM_log_info(1, conf.sim, 0, "Starting workload")
    board.serconsole.con.input "time zip -v -9 zipped2 /bin/a*\n"

    @simics.SIM_log_info(1, conf.sim, 0, "Waiting for workload to complete")
    bp.console_string.wait-for board.serconsole.con "total bytes"
    @simics.SIM_log_info(1, conf.sim, 0, "Workload completed")
    stop

    ptime -all

    board.serconsole.con.capture-stop
    @launch_viewer(simenv.logs_folder + "/sim_result/" + simenv.trace_file)
}
