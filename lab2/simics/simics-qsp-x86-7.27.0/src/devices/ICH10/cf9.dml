/*
  © 2013 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

device ich10_cf9;

parameter desc = "model of Intel® ICH10 reset register";
parameter documentation = "Intel® ICH10 Reset Register.";

import "io-memory.dml";
import "utility.dml";
import "simics/devs/signal.dml";

connect reset_signal {
    interface signal;
    parameter configuration = "required";
    parameter documentation = "This attribute must connect to a device" +
                              " that implements the signal interface. ";
}

connect init_signal {
    interface signal;
    parameter configuration = "optional";
    parameter documentation = "This attribute must connect to a device" +
                              " that implements the signal interface. ";
}

port SYS_RESET {
    implement signal {
        method signal_raise() {
            log "info", 3: "external system reset";
            $reset_signal.signal.signal_raise();
            $reset_signal.signal.signal_lower();
        }

        method signal_lower() {
        }
    }
}

parameter CF9_FULL_RST = 0x8;
parameter CF9_RST_CPU  = 0x4;
parameter CF9_SYS_RST  = 0x2;

bank regs {
    parameter function = 0;
    register cf9 size 1 @ 0 {
        parameter configuration = "none";
        method write(value) {
            log "info", 3: "cf9 reset";
            $this = value;
            if ((value & $CF9_RST_CPU) != 0) {
                if ((value & $CF9_SYS_RST) != 0) {
                    log "info", 3: "triggering HARD reset";
                    $reset_signal.signal.signal_raise();
                    $reset_signal.signal.signal_lower();
                } else {
                    log "info", 3: "triggering SOFT reset";
                    if ($init_signal.obj) {
                        $init_signal.signal.signal_raise();
                        $init_signal.signal.signal_lower();
                    } else {
                        log "info", 1: "Reset lost, init_signal not" +
			    "connected. You need to update your component.";
                    }
                }
            }
        }
    }
}
