# Â© 2024 Intel Corporation
#
# This software and the related documents are Intel copyrighted materials, and
# your use of them is governed by the express license under which they were
# provided to you ("License"). Unless the License provides otherwise, you may
# not use, modify, copy, publish, distribute, disclose or transmit this software
# or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or
# implied warranties, other than those that are expressly stated in the License.

import testparams as tp
from doc_test.outer_run_test import *
from pathlib import Path

def run_testfun_always(testfun, args=[], name=None):
    """Call run_testfun and bypass test pattern filter."""
    return tp.run_testfun(testfun, args=args, name=name,
                          ignore_test_pattern=True)

def test(repo_root, scratch):
    doc_root = Path(repo_root) / 'src' / 'docs' / 'app-notes' / 'blueprints'
    proj_dir = Path(scratch) / "proj"

    run_testfun_always(setup_project, [proj_dir, []])
    run_testfun_always(generate_test_scripts, [proj_dir, doc_root])

    # Tests generated by extract_doc_test
    tests = [p.name for p in proj_dir.glob("*.test-script")]
    assert len(tests) > 0, "Sanity check that we found something"
    add_generated_tests(proj_dir, sorted(tests))
