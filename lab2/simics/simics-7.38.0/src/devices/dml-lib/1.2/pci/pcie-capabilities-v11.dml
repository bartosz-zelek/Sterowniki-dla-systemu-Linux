/*
  Â© 2010 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

// TODO(ah): deprecate this template
template defining_pcie_capability_v11 {
    is defining_pcie_capability_root_ports_v11;
}

template defining_pcie_capability_devices_v11 {
    is _defining_pcie_capability_devices_common;

    register exp_dev_control {
        field bcre [15:15] is (read_write) "Bridge Configuration Retry Enable";
    }
}

template defining_pcie_capability_links_v11 {
    is defining_pcie_capability_devices_v11;
    is _defining_pcie_capability_links_common;

    register exp_link_cap {
        field cpm    [18:18] is (read_only) "Clock Power Management";
        field sder   [19:19] is (read_only) "Surprise Down Error Reporting Capable";
        field dlllar [20:20] is (read_only) "Data Link Layer Link Active Reporting Capable";
    }
    register exp_link_control {
        field ecpm  [8:8]   is (read_write) "Enable Clock Power Management";
    }
    register exp_link_status {
        field dllla [13:13] is (ignore_write) "Data Link Layer Link Active";
    }
}

template defining_pcie_capability_slots_v11 {
    is defining_pcie_capability_links_v11;
    is _defining_pcie_capability_slots_common;

    register exp_slot_cap {
        field eip  [17:17] is (read_only) "Electromechanical Interlock Present";
        field nccs [18:18] is (read_only) "No Command Completed Support";
    }
    register exp_slot_control {
        field eic    [11:11] is (read_write) "Electromechanical Interlock Control";
        field dllsce [12:12] is (read_write) "Data Link Layer State Changed Enable";
    }
    register exp_slot_status {
        field eis   [7:7] is (ignore_write) "Electromechanical Interlock Status";
        field dllsc [8:8] is (write_1_clears) "Data Link Layer State Changed";
    }
}

template defining_pcie_capability_root_ports_v11 {
    is defining_pcie_capability_slots_v11;
    is _defining_pcie_capability_root_ports_common;

    register exp_root_control {
        field crssve [4:4] is (read_write) "CRS Software Visibility Enable";
    }
    register exp_root_cap {
        field csv [0:0]  is (read_only) "CRS Software Visibility";
    }
}

template defining_pcie_aer_capability_v11 {
    is _defining_pcie_aer_capability_common;

    register aer_capability_header {
        field version {
            parameter value = 0x1;
        }
    }
    register aer_unc_error_mask {
        field sdes  [5:5]   is (read_write) "Surprise Down Error Mask";
    }
    register aer_unc_error_severity {
        field sdes  [5:5]   is (read_write) "Surprise Down Error Severity" {
            parameter hard_reset_value = 0x1;
        }
    }
    register aer_corr_error_status {
        field anfes [13:13] is (write_1_clears) "Advisory Non-Fatal Error Status";
    }
    register aer_corr_error_mask {
        field anfem [13:13] is (read_write) "Advisory Non-Fatal Error Mask" {
            parameter hard_reset_value = 1;
        }
    }
}

template defining_pcie_vc_capability_v11 {
    is _defining_pcie_vc_capability_common;
}

template defining_pcie_dsn_capability_v11 {
    is defining_pcie_dsn_capability_v1;
}

template defining_pcie_rcld_capability_v11 {
    is _defining_pcie_rcld_capability_common;
}

template defining_pcie_rcilc_capability_v11 {
    is _defining_pcie_rcilc_capability_common;
    register rcilc_capabilities {
        field mls  [3:0]   is (read_only) "Max Link Speed";
    }
}

template defining_pcie_dpb_capability_v11 {
    is defining_pcie_dpb_capability_v1;
}

template defining_pcie_rcecea_capability_v11 {
    is _defining_pcie_rcecea_capability_common;
} 

template defining_pcie_mfvc_capability_v11 {
    is _defining_pcie_mfvc_capability_common;
}

template defining_pcie_vsec_capability_v11 {
    is _defining_pcie_vsec_capability_common;
}

template defining_pcie_rcrb_capability_v11 {
    is _defining_pcie_rcrb_capability_common;
}
