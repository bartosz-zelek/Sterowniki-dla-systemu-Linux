// -*- mode: C++; c-file-style: "virtutech-c++" -*-

/*
  Â© 2024 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

// This file is generated by the script bin/gen-cc-interface

#ifndef EXTENSIONS_TDX_RESTRICTIONS_INTERFACE_TDX_RESTRICTIONS_INTERFACE_CC_H
#define EXTENSIONS_TDX_RESTRICTIONS_INTERFACE_TDX_RESTRICTIONS_INTERFACE_CC_H

#include "tdx-restrictions-interface.h"

#include <simics/iface/interface-info.h>
#include <simics/utility.h>  // get_interface

namespace simics {
namespace iface {

class TdxRestrictionsInterface {
  public:
    using ctype = tdx_restrictions_interface_t;

    // Function override and implemented by user
    virtual bool is_address_seam_safe(uint64 addr) = 0;

    // Function convert C interface call to C++ interface call
    class FromC {
      public:
        static bool is_address_seam_safe(conf_object_t *obj, uint64 addr) {
            return get_interface<TdxRestrictionsInterface>(obj)->is_address_seam_safe(addr);
        }
    };

    // Function convert C++ interface call to C interface call
    class ToC {
      public:
        ToC() : obj_(nullptr), iface_(nullptr) {}
        ToC(conf_object_t *obj, const TdxRestrictionsInterface::ctype *iface)
            : obj_(obj), iface_(iface) {}

        bool is_address_seam_safe(uint64 addr) const {
            return iface_->is_address_seam_safe(obj_, addr);
        }

        const TdxRestrictionsInterface::ctype *get_iface() const {
            return iface_;
        }

      private:
        conf_object_t *obj_;
        const TdxRestrictionsInterface::ctype *iface_;
    };

    class Info : public InterfaceInfo {
      public:
        // InterfaceInfo
        std::string name() const override { return TDX_RESTRICTIONS_INTERFACE; }
        const interface_t *cstruct() const override {
            static constexpr TdxRestrictionsInterface::ctype funcs {
                FromC::is_address_seam_safe,
            };
            return &funcs;
        }
    };
};

}  // namespace iface
}  // namespace simics

#endif
