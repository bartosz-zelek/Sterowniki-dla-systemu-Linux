// -*- mode: C++; c-file-style: "virtutech-c++" -*-

/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

// This file is generated by the script bin/gen-cc-interface

#ifndef SIMICS_CPP_SIMULATOR_IFACE_LINK_ENDPOINT_H
#define SIMICS_CPP_SIMULATOR_IFACE_LINK_ENDPOINT_H

#include "simics/simulator-iface/link-endpoint.h"

#include <simics/detail/conf-object-util.h>  // get_interface
#include <simics/iface/interface-info.h>

namespace simics {
namespace iface {

class LinkEndpointV2Interface {
  public:
    using ctype = link_endpoint_v2_interface_t;

    // Function override and implemented by user
    virtual follower_time_t delivery_time() = 0;
    virtual uint64 delivery_skey() = 0;

    // Function convert C interface call to C++ interface call
    class FromC {
      public:
        static follower_time_t delivery_time(conf_object_t *obj) {
            return detail::get_interface<LinkEndpointV2Interface>(obj)->delivery_time();
        }
        static uint64 delivery_skey(conf_object_t *obj) {
            return detail::get_interface<LinkEndpointV2Interface>(obj)->delivery_skey();
        }
    };

    // Function convert C++ interface call to C interface call
    class ToC {
      public:
        ToC() : obj_(nullptr), iface_(nullptr) {}
        ToC(conf_object_t *obj, const LinkEndpointV2Interface::ctype *iface)
            : obj_(obj), iface_(iface) {}

        follower_time_t delivery_time() const {
            return iface_->delivery_time(obj_);
        }
        uint64 delivery_skey() const {
            return iface_->delivery_skey(obj_);
        }

        const LinkEndpointV2Interface::ctype *get_iface() const {
            return iface_;
        }

      private:
        conf_object_t *obj_;
        const LinkEndpointV2Interface::ctype *iface_;
    };

    class Info : public InterfaceInfo {
      public:
        // InterfaceInfo
        std::string name() const override { return LINK_ENDPOINT_V2_INTERFACE; }
        const interface_t *cstruct() const override {
            static constexpr LinkEndpointV2Interface::ctype funcs {
                FromC::delivery_time,
                FromC::delivery_skey,
            };
            return &funcs;
        }
    };
};

}  // namespace iface
}  // namespace simics

#endif
