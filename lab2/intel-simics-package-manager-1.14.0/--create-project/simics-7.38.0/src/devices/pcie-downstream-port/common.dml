/*
  common.dml

  Â© 2021 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

import "simics/devs/map-demap.dml";

template mt is map_target {
    method set(conf_object_t *obj) {
        /* First we flush any cached mappings... */
        SIM_translation_changed(dev.obj);
        /* ... then we apply a new value. */
        default(obj);
    }
}

template ms is (connect, init_as_subobj, mt) {
    param classname = "memory-space";
    interface map_demap;
}

method pcie_type_to_name(int id) -> (const char *) {
    switch (id) {
    case PCIE_Type_Not_Set:
        return "Not Set";
    case PCIE_Type_Mem:
        return "Memory";
    case PCIE_Type_Cfg:
        return "Configuration";
    case PCIE_Type_IO:
        return "I/O";
    case PCIE_Type_Msg:
        return "Message";
    default:
        return "Unknown";
    }
}

method pcie_route_to_name(int id) -> (const char *) {
    switch (id) {
    case PCIE_Msg_Route_Not_Set:
        return "Not Set";
    case PCIE_Msg_Route_Upstream:
        return "Upstream";
    case PCIE_Msg_Route_Address:
        return "Address";
    case PCIE_Msg_Route_ID:
        return "ID";
    case PCIE_Msg_Route_Broadcast:
        return "Broadcast";
    case PCIE_Msg_Route_Terminate:
        return "Terminate";
    case PCIE_Msg_Route_Gather:
        return "Gather";
    default:
        return "Unknown";
    }
}
