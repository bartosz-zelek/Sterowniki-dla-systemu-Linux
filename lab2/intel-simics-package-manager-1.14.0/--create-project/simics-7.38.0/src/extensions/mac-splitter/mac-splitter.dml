/*
  Â© 2020 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

/*
  mac-splitter.dml - split data from one PHY to several MACs

*/

dml 1.2;
device mac_splitter;

parameter desc = "a PHY-to-MAC demultiplexer";
parameter documentation =
    "This object splits incoming access from one PHY to several MACs.";

import "simics/devs/ieee_802_3.dml";

parameter NUM_MACS = 2;

implement ieee_802_3_mac_v3 {
    method receive_frame(int phy_addr, const frags_t *frame, int crc_ok) {
        local int i;
        for (i = 0; i < $NUM_MACS; i++)
            $mac[i].ieee_802_3_mac_v3.receive_frame(phy_addr, frame, crc_ok);
    }
    method tx_bandwidth_available(int phy_addr) {
        local int i;
        for (i = 0; i < $NUM_MACS; i++)
            $mac[i].ieee_802_3_mac_v3.tx_bandwidth_available(phy_addr);
    }
    method link_status_changed(int phy_addr, ieee_802_3_link_status_t status) {
        local int i;
        for (i = 0; i < $NUM_MACS; i++)
            $mac[i].ieee_802_3_mac_v3.link_status_changed(phy_addr, status);
    }
}

connect mac[$NUM_MACS] {
    parameter documentation = "The MACs connected to the splitter.";
    parameter configuration = "required";
    interface ieee_802_3_mac_v3;
}
