/*
  Â© 2023 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include "eri-v1-iface.h"
%}

import "simics/base/types.dml";

// Registers number
param DCRA_ERI_PMA_RESOLUTION_CONTROL = 0x0;
param ERI_PMA_CORE_TTT_L32            = 0x1;
param ERI_PMA_CORE_TTT_H32            = 0x2;
param DCRA_ERI_PMA_CORE_STATUS        = 0x3;
param DCRA_PMA_ACODE_TO_UCODE_CFG     = 0x4;
param DCRA_PMA_ARAT_TTT               = 0x5;
param DCRA_ERI_PMA_CSTT_THRESHOLD     = 0x6;
param ERI_PMA_CR_UCODE_ASSIST_INFO    = 0x7;

extern typedef struct {
        uint64 val;   // Read or Write value
        bool   valid; // Valid or not data in val field
} eri_transaction_t;

extern typedef struct
{
        void (*read)(conf_object_t *listener,
                uint64 reg_num, eri_transaction_t *data);
        void (*write)(conf_object_t *listener,
                uint64 reg_num, eri_transaction_t *data);
} x86_eri_v1_interface_t;
