{
 "ATOM_arm_device_id": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_arm_device_id(uint64 val);"
   ]
  ],
  "f"
 ],
 "ATOM_arm_memory_attributes": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_arm_memory_attributes(uint64 val);"
   ]
  ],
  "f"
 ],
 "ATOM_arm_nonsecure": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_arm_nonsecure(bool val);"
   ]
  ],
  "f"
 ],
 "ATOM_arm_nsaid": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_arm_nsaid(uint64 val);"
   ]
  ],
  "f"
 ],
 "ATOM_arm_privileged": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_arm_privileged(bool val);"
   ]
  ],
  "f"
 ],
 "ATOM_arm_smmu_attributes": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_arm_smmu_attributes(uint64 val);"
   ]
  ],
  "f"
 ],
 "ATOM_bytemap": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_bytemap(transaction_bytemap_t *val);"
   ]
  ],
  "f"
 ],
 "ATOM_completion": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_completion(transaction_completion_t val);"
   ]
  ],
  "f"
 ],
 "ATOM_cxl_type": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_cxl_type(cxl_type_t val);"
   ]
  ],
  "f"
 ],
 "ATOM_data": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_data(uint8 *val);"
   ]
  ],
  "f"
 ],
 "ATOM_fill_value": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_fill_value(uint8 val);"
   ]
  ],
  "f"
 ],
 "ATOM_flags": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_flags(transaction_flags_t val);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_arm_device_id": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 ATOM_get_transaction_arm_device_id(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_arm_memory_attributes": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 ATOM_get_transaction_arm_memory_attributes(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_arm_nonsecure": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool ATOM_get_transaction_arm_nonsecure(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_arm_nsaid": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 ATOM_get_transaction_arm_nsaid(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_arm_privileged": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool ATOM_get_transaction_arm_privileged(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_arm_smmu_attributes": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 ATOM_get_transaction_arm_smmu_attributes(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_cxl_type": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline cxl_type_t ATOM_get_transaction_cxl_type(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_memop": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline generic_transaction_t *ATOM_get_transaction_memop(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_at": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_at_t ATOM_get_transaction_pcie_at(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_ats_invalidate_completion_count": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 ATOM_get_transaction_pcie_ats_invalidate_completion_count(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_ats_invalidate_completion_itag_vector": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 ATOM_get_transaction_pcie_ats_invalidate_completion_itag_vector(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_ats_invalidate_request_itag": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 ATOM_get_transaction_pcie_ats_invalidate_request_itag(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_ats_translation_request_cxl_src": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool ATOM_get_transaction_pcie_ats_translation_request_cxl_src(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_ats_translation_request_no_write": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool ATOM_get_transaction_pcie_ats_translation_request_no_write(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_byte_count_ret": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_byte_count_ret_t *ATOM_get_transaction_pcie_byte_count_ret(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_destination_segment": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 ATOM_get_transaction_pcie_destination_segment(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_device_id": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 ATOM_get_transaction_pcie_device_id(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_ecs": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_ecs_t ATOM_get_transaction_pcie_ecs(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_error_ret": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_error_ret_t *ATOM_get_transaction_pcie_error_ret(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_ide_secured": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_ide_secured_t *ATOM_get_transaction_pcie_ide_secured(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_link_negotiation": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_link_negotiation_t *ATOM_get_transaction_pcie_link_negotiation(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_msg_route": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_msg_route_t ATOM_get_transaction_pcie_msg_route(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_msg_type": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_message_type_t ATOM_get_transaction_pcie_msg_type(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_pasid": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 ATOM_get_transaction_pcie_pasid(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_prs_page_group_response": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 ATOM_get_transaction_pcie_prs_page_group_response(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_prs_page_request": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 ATOM_get_transaction_pcie_prs_page_request(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_prs_stop_marker": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool ATOM_get_transaction_pcie_prs_stop_marker(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_requester_id": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 ATOM_get_transaction_pcie_requester_id(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_requester_segment": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 ATOM_get_transaction_pcie_requester_segment(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_pcie_type": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_type_t ATOM_get_transaction_pcie_type(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_riscv_device_id": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 ATOM_get_transaction_riscv_device_id(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_riscv_io_error_ret": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline riscv_io_error_ret_t *ATOM_get_transaction_riscv_io_error_ret(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_riscv_process_id": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 ATOM_get_transaction_riscv_process_id(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_riscv_wg_wid": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 ATOM_get_transaction_riscv_wg_wid(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_get_transaction_target_type": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline transaction_target_type_ret_t *ATOM_get_transaction_target_type(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_initiator": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_initiator(conf_object_t *val);"
   ]
  ],
  "f"
 ],
 "ATOM_list_end": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_list_end(int val);"
   ]
  ],
  "f"
 ],
 "ATOM_memop": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_memop(generic_transaction_t *val);"
   ]
  ],
  "f"
 ],
 "ATOM_owner": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_owner(conf_object_t *val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_at": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_at(pcie_at_t val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_ats_invalidate_completion_count": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_ats_invalidate_completion_count(uint8 val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_ats_invalidate_completion_itag_vector": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_ats_invalidate_completion_itag_vector(uint32 val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_ats_invalidate_request_itag": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_ats_invalidate_request_itag(uint8 val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_ats_translation_request_cxl_src": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_ats_translation_request_cxl_src(bool val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_ats_translation_request_no_write": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_ats_translation_request_no_write(bool val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_byte_count_ret": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_byte_count_ret(pcie_byte_count_ret_t *val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_destination_segment": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_destination_segment(uint8 val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_device_id": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_device_id(uint16 val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_ecs": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_ecs(pcie_ecs_t val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_error_ret": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_error_ret(pcie_error_ret_t *val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_ide_secured": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_ide_secured(pcie_ide_secured_t *val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_link_negotiation": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_link_negotiation(pcie_link_negotiation_t *val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_msg_route": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_msg_route(pcie_msg_route_t val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_msg_type": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_msg_type(pcie_message_type_t val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_pasid": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_pasid(uint32 val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_prs_page_group_response": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_prs_page_group_response(uint16 val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_prs_page_request": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_prs_page_request(uint64 val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_prs_stop_marker": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_prs_stop_marker(bool val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_requester_id": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_requester_id(uint16 val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_requester_segment": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_requester_segment(uint8 val);"
   ]
  ],
  "f"
 ],
 "ATOM_pcie_type": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_pcie_type(pcie_type_t val);"
   ]
  ],
  "f"
 ],
 "ATOM_riscv_device_id": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_riscv_device_id(uint64 val);"
   ]
  ],
  "f"
 ],
 "ATOM_riscv_io_error_ret": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_riscv_io_error_ret(riscv_io_error_ret_t *val);"
   ]
  ],
  "f"
 ],
 "ATOM_riscv_process_id": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_riscv_process_id(uint64 val);"
   ]
  ],
  "f"
 ],
 "ATOM_riscv_wg_wid": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_riscv_wg_wid(uint64 val);"
   ]
  ],
  "f"
 ],
 "ATOM_size": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_size(uint32 val);"
   ]
  ],
  "f"
 ],
 "ATOM_target_type": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_target_type(transaction_target_type_ret_t *val);"
   ]
  ],
  "f"
 ],
 "ATOM_trace_atom_access": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_trace_atom_access(transaction_trace_atom_access_t *val);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_arm_device_id": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint64 *ATOM_transaction_arm_device_id(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_arm_memory_attributes": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint64 *ATOM_transaction_arm_memory_attributes(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_arm_nonsecure": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const bool *ATOM_transaction_arm_nonsecure(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_arm_nsaid": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint64 *ATOM_transaction_arm_nsaid(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_arm_privileged": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const bool *ATOM_transaction_arm_privileged(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_arm_smmu_attributes": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint64 *ATOM_transaction_arm_smmu_attributes(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_cxl_type": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const cxl_type_t *ATOM_transaction_cxl_type(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_memop": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const generic_transaction_t **ATOM_transaction_memop(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_at": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const pcie_at_t *ATOM_transaction_pcie_at(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_ats_invalidate_completion_count": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint8 *ATOM_transaction_pcie_ats_invalidate_completion_count(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_ats_invalidate_completion_itag_vector": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint32 *ATOM_transaction_pcie_ats_invalidate_completion_itag_vector(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_ats_invalidate_request_itag": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint8 *ATOM_transaction_pcie_ats_invalidate_request_itag(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_ats_translation_request_cxl_src": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const bool *ATOM_transaction_pcie_ats_translation_request_cxl_src(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_ats_translation_request_no_write": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const bool *ATOM_transaction_pcie_ats_translation_request_no_write(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_byte_count_ret": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const pcie_byte_count_ret_t **ATOM_transaction_pcie_byte_count_ret(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_destination_segment": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint8 *ATOM_transaction_pcie_destination_segment(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_device_id": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint16 *ATOM_transaction_pcie_device_id(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_ecs": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const pcie_ecs_t *ATOM_transaction_pcie_ecs(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_error_ret": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const pcie_error_ret_t **ATOM_transaction_pcie_error_ret(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_ide_secured": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const pcie_ide_secured_t **ATOM_transaction_pcie_ide_secured(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_link_negotiation": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const pcie_link_negotiation_t **ATOM_transaction_pcie_link_negotiation(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_msg_route": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const pcie_msg_route_t *ATOM_transaction_pcie_msg_route(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_msg_type": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const pcie_message_type_t *ATOM_transaction_pcie_msg_type(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_pasid": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint32 *ATOM_transaction_pcie_pasid(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_prs_page_group_response": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint16 *ATOM_transaction_pcie_prs_page_group_response(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_prs_page_request": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint64 *ATOM_transaction_pcie_prs_page_request(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_prs_stop_marker": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const bool *ATOM_transaction_pcie_prs_stop_marker(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_requester_id": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint16 *ATOM_transaction_pcie_requester_id(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_requester_segment": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint8 *ATOM_transaction_pcie_requester_segment(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_pcie_type": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const pcie_type_t *ATOM_transaction_pcie_type(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_riscv_device_id": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint64 *ATOM_transaction_riscv_device_id(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_riscv_io_error_ret": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const riscv_io_error_ret_t **ATOM_transaction_riscv_io_error_ret(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_riscv_process_id": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint64 *ATOM_transaction_riscv_process_id(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_riscv_wg_wid": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint64 *ATOM_transaction_riscv_wg_wid(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_transaction_target_type": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const transaction_target_type_ret_t **ATOM_transaction_target_type(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "ATOM_user_data": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t ATOM_user_data(lang_void *val);"
   ]
  ],
  "f"
 ],
 "CORE_object_iterator": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "SIM_PYOBJECT *CORE_object_iterator(conf_object_t *obj);"
   ]
  ],
  "f"
 ],
 "CORE_object_iterator_for_class": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "SIM_PYOBJECT *CORE_object_iterator_for_class(conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "CORE_object_iterator_for_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "SIM_PYOBJECT *CORE_object_iterator_for_interface(attr_value_t ifaces);"
   ]
  ],
  "f"
 ],
 "CORE_shallow_object_iterator": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "SIM_PYOBJECT *CORE_shallow_object_iterator(conf_object_t *obj, bool expand_arrays);"
   ]
  ],
  "f"
 ],
 "DBG_check_typing_system": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int DBG_check_typing_system(const char *type, attr_value_t *NOTNULL val);"
   ]
  ],
  "f"
 ],
 "DBG_get_pending_exception": [
  "base/sim-exception.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "sim_exception_t DBG_get_pending_exception(void);"
   ]
  ],
  "f"
 ],
 "OLD_copyright": [
  "base/version.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void OLD_copyright(void);"
   ]
  ],
  "f"
 ],
 "PyObject": [
  "python-header.h",
  "python-header.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct _object PyObject;"
   ]
  ],
  "s:PyObject"
 ],
 "PyTypeObject": [
  "python-header.h",
  "python-header.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct _typeobject PyTypeObject;"
   ]
  ],
  "s:PyTypeObject"
 ],
 "SIMLINK_config_remove_value": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_config_remove_value(conf_object_t *link, const char *key);"
   ]
  ],
  "f"
 ],
 "SIMLINK_config_update_value": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_config_update_value(conf_object_t *link, const char *key, const frags_t *value);"
   ]
  ],
  "f"
 ],
 "SIMLINK_endpoint_clock": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIMLINK_endpoint_clock(const conf_object_t *ep);"
   ]
  ],
  "f"
 ],
 "SIMLINK_endpoint_dev_name": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIMLINK_endpoint_dev_name(const conf_object_t *ep, buffer_t scratch);"
   ]
  ],
  "f"
 ],
 "SIMLINK_endpoint_device": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIMLINK_endpoint_device(const conf_object_t *ep);"
   ]
  ],
  "f"
 ],
 "SIMLINK_endpoint_disconnect": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_endpoint_disconnect(conf_object_t *ep);"
   ]
  ],
  "f"
 ],
 "SIMLINK_endpoint_finalize": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_endpoint_finalize(conf_object_t *ep);"
   ]
  ],
  "f"
 ],
 "SIMLINK_endpoint_id": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint64 SIMLINK_endpoint_id(const conf_object_t *ep);"
   ]
  ],
  "f"
 ],
 "SIMLINK_endpoint_init": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_endpoint_init(conf_object_t *ep_obj, bool snoop);"
   ]
  ],
  "f"
 ],
 "SIMLINK_endpoint_is_device": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIMLINK_endpoint_is_device(const conf_object_t *ep);"
   ]
  ],
  "f"
 ],
 "SIMLINK_endpoint_link": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIMLINK_endpoint_link(const conf_object_t *ep);"
   ]
  ],
  "f"
 ],
 "SIMLINK_endpoint_port": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIMLINK_endpoint_port(const conf_object_t *ep);"
   ]
  ],
  "f"
 ],
 "SIMLINK_finalize": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_finalize(conf_object_t *link);"
   ]
  ],
  "f"
 ],
 "SIMLINK_find_endpoint_by_id": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIMLINK_find_endpoint_by_id(conf_object_t *link, uint64 id);"
   ]
  ],
  "f"
 ],
 "SIMLINK_init": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_init(conf_object_t *obj, const link_type_t *type);"
   ]
  ],
  "f"
 ],
 "SIMLINK_init_library": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_init_library(void);"
   ]
  ],
  "f"
 ],
 "SIMLINK_init_message": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_init_message(link_message_t *msg);"
   ]
  ],
  "f"
 ],
 "SIMLINK_pre_delete": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_pre_delete(conf_object_t *obj);"
   ]
  ],
  "f"
 ],
 "SIMLINK_register_class": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_register_class(conf_class_t *cls);"
   ]
  ],
  "f"
 ],
 "SIMLINK_register_endpoint_class": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_register_endpoint_class(conf_class_t *cls, const char *msg_type);"
   ]
  ],
  "f"
 ],
 "SIMLINK_register_snoop_endpoint_class": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_register_snoop_endpoint_class(conf_class_t *cls);"
   ]
  ],
  "f"
 ],
 "SIMLINK_send_message": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_send_message(conf_object_t *src_ep, uint64 dst_id, link_message_t *msg);"
   ]
  ],
  "f"
 ],
 "SIMLINK_send_message_multi": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIMLINK_send_message_multi(conf_object_t *src_ep, unsigned num_dsts, const uint64 *dst_ids, link_message_t *msg);"
   ]
  ],
  "f"
 ],
 "SIMLINK_snoop_endpoint_create": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIMLINK_snoop_endpoint_create(conf_class_t *cls, conf_object_t *link, conf_object_t *clock, attr_value_t attrs);"
   ]
  ],
  "f"
 ],
 "SIM_PYOBJECT": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef PyObject SIM_PYOBJECT;"
   ]
  ],
  "s:PyObject"
 ],
 "SIM_PYTYPEOBJECT": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef PyTypeObject SIM_PYTYPEOBJECT;"
   ]
  ],
  "s:PyTypeObject"
 ],
 "SIM_STC_flush_cache": [
  "processor/stc.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_STC_flush_cache(conf_object_t *NOTNULL cpu);"
   ]
  ],
  "f"
 ],
 "SIM_acquire_cell": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "domain_lock_t *SIM_acquire_cell(conf_object_t *NOTNULL obj, const char *NOTNULL function_name, const char *NOTNULL source_location);"
   ]
  ],
  "f"
 ],
 "SIM_acquire_object": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "domain_lock_t *SIM_acquire_object(conf_object_t *NOTNULL obj, const char *NOTNULL function_name, const char *NOTNULL source_location);"
   ]
  ],
  "f"
 ],
 "SIM_acquire_object_for_execution": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "domain_lock_t *SIM_acquire_object_for_execution(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_acquire_target": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "domain_lock_t *SIM_acquire_target(conf_object_t *NOTNULL obj, const char *NOTNULL function_name, const char *NOTNULL source_location);"
   ]
  ],
  "f"
 ],
 "SIM_add_configuration": [
  "simulator/configuration.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_add_configuration(pre_conf_object_set_t *NOTNULL object_list, const char *file);"
   ]
  ],
  "f"
 ],
 "SIM_add_directory": [
  "simulator/paths.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_add_directory(const char *NOTNULL directory, bool prepend);"
   ]
  ],
  "f"
 ],
 "SIM_add_global_notifier": [
  "base/global-notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "global_notifier_callback_t *SIM_add_global_notifier(global_notifier_type_t what, conf_object_t *subscriber, void (*NOTNULL callback)(conf_object_t *subscriber, lang_void *data), lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_add_global_notifier_once": [
  "base/global-notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "global_notifier_callback_t *SIM_add_global_notifier_once(global_notifier_type_t what, conf_object_t *subscriber, void (*NOTNULL callback)(conf_object_t *subscriber, lang_void *data), lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_add_module_dir": [
  "simulator/modules.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_add_module_dir(const char *NOTNULL path);"
   ]
  ],
  "f"
 ],
 "SIM_add_notifier": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "notifier_handle_t *SIM_add_notifier(conf_object_t *NOTNULL obj, notifier_type_t what, conf_object_t *subscriber, void (*callback)(conf_object_t *subscriber, conf_object_t *NOTNULL notifier, lang_void *data), lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_add_output_handler": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_add_output_handler(NOTNULL output_handler_t func, lang_void *user_data);"
   ]
  ],
  "f"
 ],
 "SIM_add_profiling_area": [
  "simulator/host-profiling.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "profile_area_t *SIM_add_profiling_area(const char *NOTNULL name, uintptr_t start, uintptr_t end);"
   ]
  ],
  "f"
 ],
 "SIM_alloc_attr_dict": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_alloc_attr_dict(unsigned length);"
   ]
  ],
  "f"
 ],
 "SIM_alloc_attr_list": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_alloc_attr_list(unsigned length);"
   ]
  ],
  "f"
 ],
 "SIM_arm_mem_trans_from_generic": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "arm_memory_transaction_t *SIM_arm_mem_trans_from_generic(generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_ascanf": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_ascanf(attr_value_t *NOTNULL list, const char *NOTNULL fmt, ...);"
   ]
  ],
  "f"
 ],
 "SIM_attr_boolean": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_boolean(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_copy": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_attr_copy(attr_value_t val);"
   ]
  ],
  "f"
 ],
 "SIM_attr_data": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint8 *SIM_attr_data(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_data_size": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline unsigned SIM_attr_data_size(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_dict_key": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_attr_dict_key(attr_value_t attr, unsigned index);"
   ]
  ],
  "f"
 ],
 "SIM_attr_dict_resize": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_attr_dict_resize(attr_value_t *NOTNULL attr, unsigned newsize);"
   ]
  ],
  "f"
 ],
 "SIM_attr_dict_set_item": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_attr_dict_set_item(attr_value_t *NOTNULL attr, unsigned index, attr_value_t key, attr_value_t value);"
   ]
  ],
  "f"
 ],
 "SIM_attr_dict_size": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline unsigned SIM_attr_dict_size(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_dict_value": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_attr_dict_value(attr_value_t attr, unsigned index);"
   ]
  ],
  "f"
 ],
 "SIM_attr_floating": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline double SIM_attr_floating(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_free": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_attr_free(attr_value_t *NOTNULL value);"
   ]
  ],
  "f"
 ],
 "SIM_attr_integer": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int64 SIM_attr_integer(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_boolean": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_boolean(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_data": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_data(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_dict": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_dict(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_floating": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_floating(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_int64": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_int64(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_integer": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_integer(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_invalid": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_invalid(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_list": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_list(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_nil": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_nil(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_object": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_object(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_string": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_string(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_is_uint64": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_attr_is_uint64(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_list": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t *SIM_attr_list(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_list_item": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_attr_list_item(attr_value_t attr, unsigned index);"
   ]
  ],
  "f"
 ],
 "SIM_attr_list_resize": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_attr_list_resize(attr_value_t *NOTNULL attr, unsigned newsize);"
   ]
  ],
  "f"
 ],
 "SIM_attr_list_set_item": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_attr_list_set_item(attr_value_t *NOTNULL attr, unsigned index, attr_value_t elem);"
   ]
  ],
  "f"
 ],
 "SIM_attr_list_size": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline unsigned SIM_attr_list_size(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_object": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline conf_object_t *SIM_attr_object(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_object_or_nil": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline conf_object_t *SIM_attr_object_or_nil(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_scanf": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_attr_scanf(attr_value_t *NOTNULL list, const char *NOTNULL fmt, ...);"
   ]
  ],
  "f"
 ],
 "SIM_attr_string": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const char *SIM_attr_string(attr_value_t attr);"
   ]
  ],
  "f"
 ],
 "SIM_attr_string_detach": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline char *SIM_attr_string_detach(attr_value_t *attr);"
   ]
  ],
  "f"
 ],
 "SIM_attribute_error": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_attribute_error(const char *NOTNULL msg);"
   ]
  ],
  "f"
 ],
 "SIM_break_cycle": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_break_cycle(conf_object_t *NOTNULL obj, int64 cycles);"
   ]
  ],
  "f"
 ],
 "SIM_break_message": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_break_message(const char *msg);"
   ]
  ],
  "f"
 ],
 "SIM_break_simulation": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_break_simulation(const char *msg);"
   ]
  ],
  "f"
 ],
 "SIM_break_step": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_break_step(conf_object_t *NOTNULL obj, int64 steps);"
   ]
  ],
  "f"
 ],
 "SIM_breakpoint": [
  "simulator/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "breakpoint_id_t SIM_breakpoint(conf_object_t *NOTNULL obj, breakpoint_kind_t type, access_t access, uint64 address, uint64 length, breakpoint_flag_t flags);"
   ]
  ],
  "f"
 ],
 "SIM_breakpoint_remove": [
  "simulator/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_breakpoint_remove(breakpoint_id_t id, access_t access, generic_address_t address, generic_address_t length);"
   ]
  ],
  "f"
 ],
 "SIM_c_attribute_error": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_c_attribute_error(const char *NOTNULL msg, ...);"
   ]
  ],
  "f"
 ],
 "SIM_c_get_class_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const class_interface_t *SIM_c_get_class_interface(const conf_class_t *NOTNULL cls, const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_c_get_class_port_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const class_interface_t *SIM_c_get_class_port_interface(const conf_class_t *NOTNULL cls, const char *NOTNULL name, const char *portname);"
   ]
  ],
  "f"
 ],
 "SIM_c_get_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const interface_t *SIM_c_get_interface(const conf_object_t *NOTNULL obj, const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_c_get_mem_op_value_buf": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_c_get_mem_op_value_buf(const generic_transaction_t *NOTNULL mop, uint8 *NOTNULL dst);"
   ]
  ],
  "f"
 ],
 "SIM_c_get_port_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const interface_t *SIM_c_get_port_interface(const conf_object_t *NOTNULL obj, const char *NOTNULL name, const char *portname);"
   ]
  ],
  "f"
 ],
 "SIM_c_hap_occurred": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_c_hap_occurred(hap_type_t hap, conf_object_t *obj, int64 value, ...);"
   ]
  ],
  "f"
 ],
 "SIM_c_hap_occurred_always": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_c_hap_occurred_always(hap_type_t hap, conf_object_t *obj, int64 value, ...);"
   ]
  ],
  "f"
 ],
 "SIM_c_hap_occurred_always_vararg": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_c_hap_occurred_always_vararg(hap_type_t hap, conf_object_t *obj, int64 value, va_list ap);"
   ]
  ],
  "f"
 ],
 "SIM_c_hap_occurred_vararg": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_c_hap_occurred_vararg(hap_type_t hap, conf_object_t *obj, int64 value, va_list ap);"
   ]
  ],
  "f"
 ],
 "SIM_c_set_mem_op_value_buf": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_c_set_mem_op_value_buf(generic_transaction_t *NOTNULL mop, const uint8 *NOTNULL src);"
   ]
  ],
  "f"
 ],
 "SIM_call_python_function": [
  "simulator/python.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_call_python_function(const char *NOTNULL func, attr_value_t *NOTNULL args);"
   ]
  ],
  "f"
 ],
 "SIM_cancel_realtime_event": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_cancel_realtime_event(int64 id);"
   ]
  ],
  "f"
 ],
 "SIM_cbdata_data": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void *SIM_cbdata_data(const cbdata_t *cbd);"
   ]
  ],
  "f"
 ],
 "SIM_cbdata_type": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const cbdata_type_t *SIM_cbdata_type(const cbdata_t *cbd);"
   ]
  ],
  "f"
 ],
 "SIM_class_has_attribute": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_class_has_attribute(conf_class_t *NOTNULL cls, const char *NOTNULL attr);"
   ]
  ],
  "f"
 ],
 "SIM_class_has_notifier": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_class_has_notifier(conf_class_t *NOTNULL cls, notifier_type_t what);"
   ]
  ],
  "f"
 ],
 "SIM_class_port": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_class_t *SIM_class_port(const conf_class_t *NOTNULL cls, const char *NOTNULL portname);"
   ]
  ],
  "f"
 ],
 "SIM_clear_augmentation_bit": [
  "processor/memory-augmentation.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_clear_augmentation_bit(uint8 *tag_page_data, unsigned pofs);"
   ]
  ],
  "f"
 ],
 "SIM_clear_directories": [
  "simulator/paths.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_clear_directories(void);"
   ]
  ],
  "f"
 ],
 "SIM_clear_exception": [
  "base/sim-exception.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "sim_exception_t SIM_clear_exception(void);"
   ]
  ],
  "f"
 ],
 "SIM_complete_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_complete_transaction(transaction_t *NOTNULL t, exception_type_t ex);"
   ]
  ],
  "f"
 ],
 "SIM_continue": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "pc_step_t SIM_continue(int64 steps);"
   ]
  ],
  "f"
 ],
 "SIM_copy_class": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_class_t *SIM_copy_class(const char *NOTNULL name, const conf_class_t *NOTNULL src_cls, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_copyright": [
  "base/version.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "char *SIM_copyright(void);"
   ]
  ],
  "f"
 ],
 "SIM_create_class": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_class_t *SIM_create_class(const char *NOTNULL name, const class_info_t *NOTNULL class_info);"
   ]
  ],
  "f"
 ],
 "SIM_create_object": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_create_object(conf_class_t *NOTNULL cls, const char *name, attr_value_t attrs);"
   ]
  ],
  "f"
 ],
 "SIM_current_checkpoint_dir": [
  "simulator/configuration.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "char *SIM_current_checkpoint_dir(void);"
   ]
  ],
  "f"
 ],
 "SIM_current_clock": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_current_clock(void);"
   ]
  ],
  "f"
 ],
 "SIM_current_processor": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "conf_object_t *SIM_current_processor(void);"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "f"
 ],
 "SIM_cycle_count": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "cycles_t SIM_cycle_count(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_defer_owned_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "transaction_t *SIM_defer_owned_transaction(transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_defer_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "transaction_t *SIM_defer_transaction(conf_object_t *obj, transaction_t *t);"
   ]
  ],
  "f"
 ],
 "SIM_delete_breakpoint": [
  "simulator/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_delete_breakpoint(breakpoint_id_t id);"
   ]
  ],
  "f"
 ],
 "SIM_delete_global_notifier": [
  "base/global-notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_delete_global_notifier(global_notifier_callback_t *NOTNULL handle);"
   ]
  ],
  "f"
 ],
 "SIM_delete_notifier": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_delete_notifier(conf_object_t *NOTNULL obj, notifier_handle_t *handle);"
   ]
  ],
  "f"
 ],
 "SIM_delete_object": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_delete_object(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_delete_objects": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_delete_objects(attr_value_t object_list);"
   ]
  ],
  "f"
 ],
 "SIM_delete_snapshot": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "snapshot_error_t SIM_delete_snapshot(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_describe_notifier": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_describe_notifier(notifier_type_t type, const char *NOTNULL generic_desc);"
   ]
  ],
  "f"
 ],
 "SIM_describe_pseudo_exception": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_describe_pseudo_exception(exception_type_t ex);"
   ]
  ],
  "f"
 ],
 "SIM_disable_breakpoint": [
  "simulator/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_disable_breakpoint(breakpoint_id_t id);"
   ]
  ],
  "f"
 ],
 "SIM_disassemble_address": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "tuple_int_string_t SIM_disassemble_address(conf_object_t *NOTNULL cpu, generic_address_t address, int logical, int sub);"
   ]
  ],
  "f"
 ],
 "SIM_drop_thread_domains": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "domain_lock_t *SIM_drop_thread_domains(void);"
   ]
  ],
  "f"
 ],
 "SIM_enable_breakpoint": [
  "simulator/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_enable_breakpoint(breakpoint_id_t id);"
   ]
  ],
  "f"
 ],
 "SIM_ensure_partial_attr_order": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_ensure_partial_attr_order(conf_class_t *NOTNULL cls, const char *NOTNULL attr1, const char *NOTNULL attr2);"
   ]
  ],
  "f"
 ],
 "SIM_event_cancel_step": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_event_cancel_step(conf_object_t *NOTNULL clock, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);"
   ]
  ],
  "f"
 ],
 "SIM_event_cancel_time": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_event_cancel_time(conf_object_t *NOTNULL clock, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);"
   ]
  ],
  "f"
 ],
 "SIM_event_class_flags": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "event_class_flag_t SIM_event_class_flags(event_class_t *NOTNULL ec);"
   ]
  ],
  "f"
 ],
 "SIM_event_find_next_cycle": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "cycles_t SIM_event_find_next_cycle(conf_object_t *NOTNULL clock, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);"
   ]
  ],
  "f"
 ],
 "SIM_event_find_next_step": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "pc_step_t SIM_event_find_next_step(conf_object_t *NOTNULL clock, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);"
   ]
  ],
  "f"
 ],
 "SIM_event_find_next_time": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "double SIM_event_find_next_time(conf_object_t *NOTNULL clock, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);"
   ]
  ],
  "f"
 ],
 "SIM_event_post_cycle": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_event_post_cycle(conf_object_t *NOTNULL clock, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, cycles_t cycles, lang_void *user_data);"
   ]
  ],
  "f"
 ],
 "SIM_event_post_step": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_event_post_step(conf_object_t *NOTNULL clock, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, pc_step_t steps, lang_void *user_data);"
   ]
  ],
  "f"
 ],
 "SIM_event_post_time": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_event_post_time(conf_object_t *NOTNULL clock, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, double seconds, lang_void *user_data);"
   ]
  ],
  "f"
 ],
 "SIM_extend_class": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_extend_class(conf_class_t *NOTNULL cls, conf_class_t *NOTNULL ext);"
   ]
  ],
  "f"
 ],
 "SIM_extension_data": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "lang_void *SIM_extension_data(conf_object_t *NOTNULL obj, conf_class_t *cls);"
   ]
  ],
  "f"
 ],
 "SIM_flush": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_flush(void);"
   ]
  ],
  "f"
 ],
 "SIM_flush_D_STC_logical": [
  "processor/stc.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_flush_D_STC_logical(conf_object_t *NOTNULL cpu, logical_address_t vaddr, logical_address_t length);"
   ]
  ],
  "f"
 ],
 "SIM_flush_D_STC_physical": [
  "processor/stc.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_flush_D_STC_physical(conf_object_t *NOTNULL cpu, physical_address_t paddr, physical_address_t length, read_or_write_t read_or_write);"
   ]
  ],
  "f"
 ],
 "SIM_flush_I_STC_logical": [
  "processor/stc.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_flush_I_STC_logical(conf_object_t *NOTNULL cpu, logical_address_t vaddr, logical_address_t length);"
   ]
  ],
  "f"
 ],
 "SIM_flush_I_STC_physical": [
  "processor/stc.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_flush_I_STC_physical(conf_object_t *NOTNULL cpu, physical_address_t paddr, physical_address_t length);"
   ]
  ],
  "f"
 ],
 "SIM_flush_all_caches": [
  "simulator/sim-caches.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_flush_all_caches(void);"
   ]
  ],
  "f"
 ],
 "SIM_flush_cell_caches": [
  "simulator/sim-caches.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_flush_cell_caches(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_free_attribute": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_free_attribute(attr_value_t value);"
   ]
  ],
  "f"
 ],
 "SIM_free_cbdata": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_free_cbdata(cbdata_t *cbd);"
   ]
  ],
  "f"
 ],
 "SIM_free_map_target": [
  "base/map-target.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_free_map_target(map_target_t *mt);"
   ]
  ],
  "f"
 ],
 "SIM_get_all_classes": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_all_classes(void);"
   ]
  ],
  "f"
 ],
 "SIM_get_all_failed_modules": [
  "simulator/modules.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_all_failed_modules(void);"
   ]
  ],
  "f"
 ],
 "SIM_get_all_hap_types": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_all_hap_types(void);"
   ]
  ],
  "f"
 ],
 "SIM_get_all_modules": [
  "simulator/modules.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_all_modules(void);"
   ]
  ],
  "f"
 ],
 "SIM_get_all_objects": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_all_objects(void);"
   ]
  ],
  "f"
 ],
 "SIM_get_all_processors": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_all_processors(void);"
   ]
  ],
  "f"
 ],
 "SIM_get_api_function": [
  "base/version.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "api_function_t SIM_get_api_function(const char *function);"
   ]
  ],
  "f"
 ],
 "SIM_get_attribute": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_attribute(conf_object_t *NOTNULL obj, const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_get_attribute_attributes": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_attr_t SIM_get_attribute_attributes(conf_class_t *NOTNULL cls, const char *NOTNULL attr);"
   ]
  ],
  "f"
 ],
 "SIM_get_attribute_idx": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_attribute_idx(conf_object_t *NOTNULL obj, const char *NOTNULL name, attr_value_t *NOTNULL index);"
   ]
  ],
  "f"
 ],
 "SIM_get_augmentation_bit": [
  "processor/memory-augmentation.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int SIM_get_augmentation_bit(uint8 *tag_page_data, unsigned pofs);"
   ]
  ],
  "f"
 ],
 "SIM_get_batch_mode": [
  "simulator/script.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_get_batch_mode(void);"
   ]
  ],
  "f"
 ],
 "SIM_get_class": [
  "simulator/sim-get-class.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_class_t *SIM_get_class(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_get_class_attribute": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_class_attribute(conf_class_t *NOTNULL cls, const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_get_class_attribute_idx": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_class_attribute_idx(conf_class_t *NOTNULL cls, const char *NOTNULL name, attr_value_t *NOTNULL index);"
   ]
  ],
  "f"
 ],
 "SIM_get_class_data": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "lang_void *SIM_get_class_data(conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "SIM_get_class_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const class_interface_t *SIM_get_class_interface(const conf_class_t *NOTNULL cls, const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_get_class_name": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_get_class_name(const conf_class_t *NOTNULL class_data);"
   ]
  ],
  "f"
 ],
 "SIM_get_class_port_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const class_interface_t *SIM_get_class_port_interface(const conf_class_t *NOTNULL cls, const char *NOTNULL name, const char *portname);"
   ]
  ],
  "f"
 ],
 "SIM_get_debugger": [
  "simulator/debugger.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_get_debugger(void);"
   ]
  ],
  "f"
 ],
 "SIM_get_directories": [
  "simulator/paths.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_directories(void);"
   ]
  ],
  "f"
 ],
 "SIM_get_event_class": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "event_class_t *SIM_get_event_class(conf_class_t *NOTNULL cl, const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_get_global_message": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_get_global_message(lang_void *NOTNULL ref);"
   ]
  ],
  "f"
 ],
 "SIM_get_init_arg_boolean": [
  "simulator/embed.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_get_init_arg_boolean(const char *NOTNULL name, bool default_value);"
   ]
  ],
  "f"
 ],
 "SIM_get_init_arg_string": [
  "simulator/embed.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_get_init_arg_string(const char *NOTNULL name, const char *default_value);"
   ]
  ],
  "f"
 ],
 "SIM_get_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const interface_t *SIM_get_interface(const conf_object_t *NOTNULL obj, const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_exception": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline exception_type_t SIM_get_mem_op_exception(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_ini_type": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline ini_type_t SIM_get_mem_op_ini_type(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_initiator": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline conf_object_t *SIM_get_mem_op_initiator(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_inquiry": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_get_mem_op_inquiry(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_page_cross": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline unsigned SIM_get_mem_op_page_cross(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_physical_address": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline physical_address_t SIM_get_mem_op_physical_address(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_size": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline unsigned SIM_get_mem_op_size(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_type": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline mem_op_type_t SIM_get_mem_op_type(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_type_name": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_get_mem_op_type_name(mem_op_type_t type);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_user_data": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void *SIM_get_mem_op_user_data(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_value_be": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint64 SIM_get_mem_op_value_be(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_value_buf": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_mem_op_value_buf(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_value_cpu": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint64 SIM_get_mem_op_value_cpu(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_value_le": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint64 SIM_get_mem_op_value_le(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_mem_op_virtual_address": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline logical_address_t SIM_get_mem_op_virtual_address(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_get_object": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_get_object(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_get_pending_exception": [
  "base/sim-exception.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "sim_exception_t SIM_get_pending_exception(void);"
   ]
  ],
  "f"
 ],
 "SIM_get_port_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const interface_t *SIM_get_port_interface(const conf_object_t *NOTNULL obj, const char *NOTNULL name, const char *portname);"
   ]
  ],
  "f"
 ],
 "SIM_get_processor": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_get_processor(int proc_no);"
   ]
  ],
  "f"
 ],
 "SIM_get_processor_number": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_get_processor_number(const conf_object_t *NOTNULL cpu);"
   ]
  ],
  "f"
 ],
 "SIM_get_python_interface_type": [
  "simulator/python.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "SIM_PYOBJECT *SIM_get_python_interface_type(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_get_quiet": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_get_quiet(void);"
   ]
  ],
  "f"
 ],
 "SIM_get_snapshot_info": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_get_snapshot_info(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_get_transaction_bytes": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_get_transaction_bytes(const transaction_t *NOTNULL t, buffer_t buf);"
   ]
  ],
  "f"
 ],
 "SIM_get_transaction_bytes_offs": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_get_transaction_bytes_offs(const transaction_t *NOTNULL t, unsigned offs, buffer_t buf, bool zerofill_holes);"
   ]
  ],
  "f"
 ],
 "SIM_get_transaction_id": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int64 SIM_get_transaction_id(transaction_t *t);"
   ]
  ],
  "f"
 ],
 "SIM_get_transaction_value_be": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint64 SIM_get_transaction_value_be(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_get_transaction_value_le": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint64 SIM_get_transaction_value_le(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_get_verbose": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_get_verbose(void);"
   ]
  ],
  "f"
 ],
 "SIM_hap_add_callback": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "hap_handle_t SIM_hap_add_callback(const char *NOTNULL hap, NOTNULL obj_hap_func_t func, lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_hap_add_callback_index": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "hap_handle_t SIM_hap_add_callback_index(const char *NOTNULL hap, NOTNULL obj_hap_func_t func, lang_void *data, int64 index);"
   ]
  ],
  "f"
 ],
 "SIM_hap_add_callback_obj": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "hap_handle_t SIM_hap_add_callback_obj(const char *NOTNULL hap, conf_object_t *NOTNULL obj, int flags, NOTNULL obj_hap_func_t func, lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_hap_add_callback_obj_index": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "hap_handle_t SIM_hap_add_callback_obj_index(const char *NOTNULL hap, conf_object_t *NOTNULL obj, int flags, NOTNULL obj_hap_func_t func, lang_void *data, int64 index);"
   ]
  ],
  "f"
 ],
 "SIM_hap_add_callback_obj_range": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "hap_handle_t SIM_hap_add_callback_obj_range(const char *NOTNULL hap, conf_object_t *NOTNULL obj, int flags, NOTNULL obj_hap_func_t func, lang_void *data, int64 start, int64 end);"
   ]
  ],
  "f"
 ],
 "SIM_hap_add_callback_range": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "hap_handle_t SIM_hap_add_callback_range(const char *NOTNULL hap, NOTNULL obj_hap_func_t func, lang_void *data, int64 start, int64 end);"
   ]
  ],
  "f"
 ],
 "SIM_hap_add_type": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "hap_type_t SIM_hap_add_type(const char *NOTNULL hap, const char *NOTNULL params, const char *param_desc, const char *index, const char *desc, int unused);"
   ]
  ],
  "f"
 ],
 "SIM_hap_delete_callback": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_hap_delete_callback(const char *NOTNULL hap, NOTNULL obj_hap_func_t func, lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_hap_delete_callback_id": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_hap_delete_callback_id(const char *NOTNULL hap, hap_handle_t handle);"
   ]
  ],
  "f"
 ],
 "SIM_hap_delete_callback_obj": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_hap_delete_callback_obj(const char *NOTNULL hap, conf_object_t *NOTNULL obj, NOTNULL obj_hap_func_t func, lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_hap_delete_callback_obj_id": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_hap_delete_callback_obj_id(const char *NOTNULL hap, conf_object_t *NOTNULL obj, hap_handle_t handle);"
   ]
  ],
  "f"
 ],
 "SIM_hap_get_name": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_hap_get_name(hap_type_t hap);"
   ]
  ],
  "f"
 ],
 "SIM_hap_get_number": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "hap_type_t SIM_hap_get_number(const char *NOTNULL hap);"
   ]
  ],
  "f"
 ],
 "SIM_hap_is_active": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_hap_is_active(hap_type_t hap);"
   ]
  ],
  "f"
 ],
 "SIM_hap_is_active_obj": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_hap_is_active_obj(hap_type_t hap, conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_hap_is_active_obj_idx": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_hap_is_active_obj_idx(hap_type_t hap, conf_object_t *NOTNULL obj, int64 index);"
   ]
  ],
  "f"
 ],
 "SIM_hap_occurred": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_hap_occurred(hap_type_t hap, conf_object_t *obj, int64 value, attr_value_t *NOTNULL list);"
   ]
  ],
  "f"
 ],
 "SIM_hap_occurred_always": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_hap_occurred_always(hap_type_t hap, conf_object_t *obj, int64 value, attr_value_t *NOTNULL list);"
   ]
  ],
  "f"
 ],
 "SIM_hap_remove_type": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_hap_remove_type(const char *NOTNULL hap);"
   ]
  ],
  "f"
 ],
 "SIM_has_notifier": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_has_notifier(conf_object_t *NOTNULL obj, notifier_type_t what);"
   ]
  ],
  "f"
 ],
 "SIM_init_command_line": [
  "simulator/embed.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_init_command_line(void);"
   ]
  ],
  "f"
 ],
 "SIM_init_environment": [
  "simulator/embed.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_init_environment(char **NOTNULL argv, bool handle_signals, bool allow_core_dumps);"
   ]
  ],
  "f"
 ],
 "SIM_init_simulator2": [
  "simulator/embed.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_init_simulator2(init_arg_t *NOTNULL init_args);"
   ]
  ],
  "f"
 ],
 "SIM_inspect_address_routing": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_inspect_address_routing(const map_target_t *NOTNULL mt, transaction_t *NOTNULL t, uint64 addr, bool (*NOTNULL callback)(const map_target_t *mt, const transaction_t *t, uint64 addr, uint64 base, uint64 start, uint64 size, access_t access, translation_flags_t flags, lang_void *data), lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_inspect_breakpoints": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_inspect_breakpoints(const map_target_t *NOTNULL mt, transaction_t *NOTNULL t, uint64 start, uint64 end, bool (*NOTNULL callback)(conf_object_t *trigger_object, breakpoint_set_t bp_set, const transaction_t *t, uint64 addr, uint64 size, lang_void *data), lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_is_loading_micro_checkpoint": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "bool SIM_is_loading_micro_checkpoint(conf_object_t *obj);"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "f"
 ],
 "SIM_is_restoring_snapshot": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_is_restoring_snapshot(void);"
   ]
  ],
  "f"
 ],
 "SIM_is_restoring_state": [
  "base/configuration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_is_restoring_state(conf_object_t *obj);"
   ]
  ],
  "f"
 ],
 "SIM_issue_read_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline exception_type_t SIM_issue_read_transaction(map_target_t *NOTNULL mt, uint64 addr, buffer_t buf, bool inquiry, conf_object_t *initiator);"
   ]
  ],
  "f"
 ],
 "SIM_issue_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "exception_type_t SIM_issue_transaction(const map_target_t *NOTNULL mt, transaction_t *NOTNULL t, uint64 addr);"
   ]
  ],
  "f"
 ],
 "SIM_issue_write_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline exception_type_t SIM_issue_write_transaction(map_target_t *NOTNULL mt, uint64 addr, bytes_t bytes, bool inquiry, conf_object_t *initiator);"
   ]
  ],
  "f"
 ],
 "SIM_iter_addr": [
  "simulator/address-profiler.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline generic_address_t SIM_iter_addr(addr_prof_iter_t *iter);"
   ]
  ],
  "f"
 ],
 "SIM_iter_free": [
  "simulator/address-profiler.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_iter_free(addr_prof_iter_t *iter);"
   ]
  ],
  "f"
 ],
 "SIM_iter_next": [
  "simulator/address-profiler.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 SIM_iter_next(addr_prof_iter_t *iter);"
   ]
  ],
  "f"
 ],
 "SIM_last_error": [
  "base/sim-exception.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_last_error(void);"
   ]
  ],
  "f"
 ],
 "SIM_license": [
  "base/version.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_license(void);"
   ]
  ],
  "f"
 ],
 "SIM_license_file": [
  "base/version.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "char *SIM_license_file(const char *format);"
   ]
  ],
  "f"
 ],
 "SIM_list_snapshots": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_list_snapshots(void);"
   ]
  ],
  "f"
 ],
 "SIM_load_binary": [
  "simulator/memory.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "physical_address_t SIM_load_binary(conf_object_t *NOTNULL obj, const char *NOTNULL file, physical_address_t offset, bool use_pa, bool verbose);"
   ]
  ],
  "f"
 ],
 "SIM_load_file": [
  "simulator/memory.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_load_file(conf_object_t *NOTNULL obj, const char *NOTNULL file, physical_address_t paddr, bool verbose);"
   ]
  ],
  "f"
 ],
 "SIM_load_module": [
  "simulator/modules.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_load_module(const char *NOTNULL module);"
   ]
  ],
  "f"
 ],
 "SIM_load_target": [
  "simulator/script.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_load_target(const char *NOTNULL target, const char *ns, attr_value_t presets, attr_value_t cmdline_args);"
   ]
  ],
  "f"
 ],
 "SIM_log_critical": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_log_critical(conf_object_t *NOTNULL dev, int grp, const char *NOTNULL str, ...);"
   ]
  ],
  "f"
 ],
 "SIM_log_error": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_log_error(conf_object_t *NOTNULL dev, int grp, const char *NOTNULL str, ...);"
   ]
  ],
  "f"
 ],
 "SIM_log_info": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_log_info(int lvl, conf_object_t *NOTNULL dev, int grp, const char *NOTNULL str, ...);"
   ]
  ],
  "f"
 ],
 "SIM_log_level": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "unsigned SIM_log_level(const conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_log_message": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_log_message(conf_object_t *NOTNULL obj, int level, uint64 group_ids, log_type_t log_type, const char *NOTNULL message);"
   ]
  ],
  "f"
 ],
 "SIM_log_message_vararg": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_log_message_vararg(conf_object_t *NOTNULL obj, int level, uint64 grp, log_type_t log_type, const char *NOTNULL fmt, ...);"
   ]
  ],
  "f"
 ],
 "SIM_log_register_groups": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_log_register_groups(conf_class_t *NOTNULL cls, const char *const *NOTNULL names);"
   ]
  ],
  "f"
 ],
 "SIM_log_spec_violation": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_log_spec_violation(int lvl, conf_object_t *NOTNULL dev, int grp, const char *NOTNULL str, ...);"
   ]
  ],
  "f"
 ],
 "SIM_log_unimplemented": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_log_unimplemented(int lvl, conf_object_t *NOTNULL dev, int grp, const char *NOTNULL str, ...);"
   ]
  ],
  "f"
 ],
 "SIM_lookup_file": [
  "simulator/paths.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "char *SIM_lookup_file(const char *file);"
   ]
  ],
  "f"
 ],
 "SIM_main_loop": [
  "simulator/embed.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_main_loop(void);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_boolean": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_make_attr_boolean(bool b);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_data": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_make_attr_data(size_t size, const void *data);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_data_adopt": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_make_attr_data_adopt(size_t size, void *data);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_floating": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_make_attr_floating(double d);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_int64": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_make_attr_int64(int64 i);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_invalid": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_make_attr_invalid(void);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_list": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_make_attr_list(unsigned length, ...);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_list_vararg": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_make_attr_list_vararg(unsigned length, va_list va);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_nil": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_make_attr_nil(void);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_object": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_make_attr_object(conf_object_t *obj);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_string": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_make_attr_string(const char *str);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_string_adopt": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_make_attr_string_adopt(char *str);"
   ]
  ],
  "f"
 ],
 "SIM_make_attr_uint64": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t SIM_make_attr_uint64(uint64 i);"
   ]
  ],
  "f"
 ],
 "SIM_make_cbdata": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline cbdata_t SIM_make_cbdata(const cbdata_type_t *type, void *data);"
   ]
  ],
  "f"
 ],
 "SIM_make_mem_op_read": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "generic_transaction_t SIM_make_mem_op_read(physical_address_t addr, buffer_t data, bool inquiry, conf_object_t *initiator);"
   ]
  ],
  "f"
 ],
 "SIM_make_mem_op_write": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "generic_transaction_t SIM_make_mem_op_write(physical_address_t addr, bytes_t data, bool inquiry, conf_object_t *initiator);"
   ]
  ],
  "f"
 ],
 "SIM_make_simple_cbdata": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline cbdata_t SIM_make_simple_cbdata(void *obj);"
   ]
  ],
  "f"
 ],
 "SIM_map_target_flush": [
  "base/map-target.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_map_target_flush(const map_target_t *NOTNULL mt, uint64 base, uint64 size, access_t access);"
   ]
  ],
  "f"
 ],
 "SIM_map_target_object": [
  "base/map-target.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_map_target_object(const map_target_t *NOTNULL mt);"
   ]
  ],
  "f"
 ],
 "SIM_map_target_port": [
  "base/map-target.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_map_target_port(const map_target_t *NOTNULL mt);"
   ]
  ],
  "f"
 ],
 "SIM_map_target_target": [
  "base/map-target.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const map_target_t *SIM_map_target_target(const map_target_t *NOTNULL mt);"
   ]
  ],
  "f"
 ],
 "SIM_marked_for_deletion": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_marked_for_deletion(const conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_ensure_future_visibility": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_mem_op_ensure_future_visibility(generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_is_atomic": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_is_atomic(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_is_control": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_is_control(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_is_data": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_is_data(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_is_from_cache": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_is_from_cache(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_is_from_cpu": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_is_from_cpu(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_is_from_cpu_arch": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_is_from_cpu_arch(const generic_transaction_t *NOTNULL mop, ini_type_t arch);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_is_from_device": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_is_from_device(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_is_instruction": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_is_instruction(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_is_prefetch": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_is_prefetch(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_is_read": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_is_read(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_is_write": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_is_write(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mem_op_may_stall": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool SIM_mem_op_may_stall(const generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_mips_mem_trans_from_generic": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "mips_memory_transaction_t *SIM_mips_mem_trans_from_generic(generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_module_list_refresh": [
  "simulator/modules.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_module_list_refresh(void);"
   ]
  ],
  "f"
 ],
 "SIM_monitor_chained_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "exception_type_t SIM_monitor_chained_transaction(transaction_t *NOTNULL t, exception_type_t ex);"
   ]
  ],
  "f"
 ],
 "SIM_monitor_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "exception_type_t SIM_monitor_transaction(transaction_t *NOTNULL t, exception_type_t ex);"
   ]
  ],
  "f"
 ],
 "SIM_native_path": [
  "simulator/paths.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "char *SIM_native_path(const char *NOTNULL path);"
   ]
  ],
  "f"
 ],
 "SIM_new_map_target": [
  "base/map-target.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "map_target_t *SIM_new_map_target(conf_object_t *NOTNULL obj, const char *port, const map_target_t *chained_target);"
   ]
  ],
  "f"
 ],
 "SIM_notifier_description": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_notifier_description(notifier_type_t type);"
   ]
  ],
  "f"
 ],
 "SIM_notifier_type": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "notifier_type_t SIM_notifier_type(const char *NOTNULL type);"
   ]
  ],
  "f"
 ],
 "SIM_notify": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_notify(conf_object_t *NOTNULL obj, notifier_type_t type);"
   ]
  ],
  "f"
 ],
 "SIM_notify_on_descriptor": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_notify_on_descriptor(int fd, notify_mode_t mode, int run_in_thread, void (*callback)(lang_void *data), lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_notify_on_socket": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_notify_on_socket(socket_t sock, notify_mode_t mode, int run_in_thread, void (*callback)(lang_void *data), lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_number_processors": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_number_processors(void);"
   ]
  ],
  "f"
 ],
 "SIM_object_class": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline conf_class_t *SIM_object_class(const conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_object_clock": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_object_clock(const conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_object_data": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "lang_void *SIM_object_data(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_object_descendant": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_object_descendant(conf_object_t *obj, const char *NOTNULL relname);"
   ]
  ],
  "f"
 ],
 "SIM_object_id": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_object_id(const conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_object_is_configured": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_object_is_configured(const conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_object_is_processor": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_object_is_processor(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_object_iterator": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "object_iter_t SIM_object_iterator(conf_object_t *obj);"
   ]
  ],
  "f"
 ],
 "SIM_object_iterator_for_class": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "object_iter_t SIM_object_iterator_for_class(conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "SIM_object_iterator_for_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "object_iter_t SIM_object_iterator_for_interface(attr_value_t ifaces);"
   ]
  ],
  "f"
 ],
 "SIM_object_iterator_next": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_object_iterator_next(object_iter_t *iter);"
   ]
  ],
  "f"
 ],
 "SIM_object_name": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_object_name(const conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_object_parent": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_object_parent(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_pci_mem_trans_from_generic": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "pci_memory_transaction_t *SIM_pci_mem_trans_from_generic(generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_picosecond_clock": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_picosecond_clock(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_poll_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "exception_type_t SIM_poll_transaction(transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_port_object_parent": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_port_object_parent(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_ppc_mem_trans_from_generic": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "ppc_memory_transaction_t *SIM_ppc_mem_trans_from_generic(generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_printf": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_printf(const char *NOTNULL format, ...);"
   ]
  ],
  "f"
 ],
 "SIM_printf_error": [
  "simulator/output-pr-err.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_printf_error(const char *str, ...);"
   ]
  ],
  "f"
 ],
 "SIM_printf_error_vararg": [
  "simulator/output-pr-err.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_printf_error_vararg(const char *format, va_list ap);"
   ]
  ],
  "f"
 ],
 "SIM_printf_vararg": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_printf_vararg(const char *format, va_list ap);"
   ]
  ],
  "f"
 ],
 "SIM_printf_warning": [
  "simulator/output-pr-err.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_printf_warning(const char *str, ...);"
   ]
  ],
  "f"
 ],
 "SIM_printf_warning_vararg": [
  "simulator/output-pr-err.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_printf_warning_vararg(const char *format, va_list ap);"
   ]
  ],
  "f"
 ],
 "SIM_process_pending_work": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_process_pending_work(void);"
   ]
  ],
  "f"
 ],
 "SIM_process_work": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_process_work(int (*NOTNULL done)(lang_void *done_data), lang_void *done_data);"
   ]
  ],
  "f"
 ],
 "SIM_processor_privilege_level": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_processor_privilege_level(conf_object_t *NOTNULL cpu);"
   ]
  ],
  "f"
 ],
 "SIM_putchar": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_putchar(int c);"
   ]
  ],
  "f"
 ],
 "SIM_puts": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_puts(const char *NOTNULL s);"
   ]
  ],
  "f"
 ],
 "SIM_quit": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_quit(int exit_code);"
   ]
  ],
  "f"
 ],
 "SIM_reacquire_thread_domains": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_reacquire_thread_domains(domain_lock_t *NOTNULL lock);"
   ]
  ],
  "f"
 ],
 "SIM_read_byte": [
  "simulator/memory.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 SIM_read_byte(conf_object_t *NOTNULL obj, generic_address_t paddr);"
   ]
  ],
  "f"
 ],
 "SIM_read_configuration": [
  "simulator/configuration.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_read_configuration(const char *NOTNULL file);"
   ]
  ],
  "f"
 ],
 "SIM_read_phys_memory": [
  "simulator/memory.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint64 SIM_read_phys_memory(conf_object_t *NOTNULL cpu, physical_address_t paddr, int length);"
   ]
  ],
  "f"
 ],
 "SIM_read_phys_memory_tags": [
  "simulator/memory.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint64 SIM_read_phys_memory_tags(conf_object_t *NOTNULL mem_space, physical_address_t paddr, unsigned ntags);"
   ]
  ],
  "f"
 ],
 "SIM_realtime_event": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int64 SIM_realtime_event(unsigned delay_ms, void (*NOTNULL callback)(lang_void *data), lang_void *data, int run_in_thread, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_reconnect_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_reconnect_transaction(transaction_t *t, int64 id);"
   ]
  ],
  "f"
 ],
 "SIM_register_attribute": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_register_attribute(conf_class_t *NOTNULL cls, const char *NOTNULL name, attr_value_t (*get_attr)(conf_object_t *), set_error_t (*set_attr)(conf_object_t *, attr_value_t *), attr_attr_t attr, const char *NOTNULL type, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_register_attribute_with_user_data": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_register_attribute_with_user_data(conf_class_t *NOTNULL cls, const char *NOTNULL name, attr_value_t (*get_attr)(conf_object_t *, lang_void *), lang_void *user_data_get, set_error_t (*set_attr)(conf_object_t *, attr_value_t *, lang_void *), lang_void *user_data_set, attr_attr_t attr, const char *NOTNULL type, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_register_class": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_class_t *SIM_register_class(const char *NOTNULL name, const class_data_t *NOTNULL class_data);"
   ]
  ],
  "f"
 ],
 "SIM_register_class_alias": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_register_class_alias(const char *NOTNULL alias, const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_register_class_attribute": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_register_class_attribute(conf_class_t *NOTNULL cls, const char *NOTNULL name, attr_value_t (*get_attr)(conf_class_t *), set_error_t (*set_attr)(conf_class_t *, attr_value_t *), attr_attr_t attr, const char *NOTNULL type, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_register_class_attribute_with_user_data": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_register_class_attribute_with_user_data(conf_class_t *NOTNULL cls, const char *NOTNULL name, attr_value_t (*get_attr)(conf_class_t *, lang_void *), lang_void *user_data_get, set_error_t (*set_attr)(conf_class_t *, attr_value_t *, lang_void *), lang_void *user_data_set, attr_attr_t attr, const char *NOTNULL type, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_register_clock": [
  "base/clock.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_register_clock(conf_class_t *NOTNULL cls, const cycle_interface_t *NOTNULL iface);"
   ]
  ],
  "f"
 ],
 "SIM_register_compatible_interfaces": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_register_compatible_interfaces(conf_class_t *NOTNULL cls, const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_register_context_handler": [
  "processor/context.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_register_context_handler(conf_class_t *NOTNULL cls, const context_handler_interface_t *NOTNULL iface);"
   ]
  ],
  "f"
 ],
 "SIM_register_copyright": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "void SIM_register_copyright(const char *NOTNULL str);"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "f"
 ],
 "SIM_register_event": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "event_class_t *SIM_register_event(const char *NOTNULL name, conf_class_t *cl, event_class_flag_t flags, void (*NOTNULL callback)(conf_object_t *obj, lang_void *data), void (*destroy)(conf_object_t *obj, lang_void *data), attr_value_t (*get_value)(conf_object_t *obj, lang_void *data), lang_void *(*set_value)(conf_object_t *obj, attr_value_t value), char *(*describe)(conf_object_t *obj, lang_void *data));"
   ]
  ],
  "f"
 ],
 "SIM_register_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_register_interface(conf_class_t *NOTNULL cls, const char *NOTNULL name, const interface_t *NOTNULL iface);"
   ]
  ],
  "f"
 ],
 "SIM_register_notifier": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_register_notifier(conf_class_t *NOTNULL cls, notifier_type_t what, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_register_port": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_register_port(conf_class_t *NOTNULL cls, const char *NOTNULL name, conf_class_t *NOTNULL port_cls, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_register_port_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_register_port_interface(conf_class_t *NOTNULL cls, const char *NOTNULL name, const interface_t *NOTNULL iface, const char *NOTNULL portname, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_register_python_atom_type": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_register_python_atom_type(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_register_simple_port": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_class_t *SIM_register_simple_port(conf_class_t *NOTNULL cls, const char *NOTNULL name, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_register_tracked_notifier": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_register_tracked_notifier(conf_class_t *NOTNULL cls, notifier_type_t what, const char *desc, void (*subscribed_changed)(conf_object_t *obj, notifier_type_t type, bool has_subscribers));"
   ]
  ],
  "f"
 ],
 "SIM_register_typed_attribute": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_register_typed_attribute(conf_class_t *NOTNULL cls, const char *NOTNULL name, get_attr_t get_attr, lang_void *user_data_get, set_attr_t set_attr, lang_void *user_data_set, attr_attr_t attr, const char *type, const char *idx_type, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_register_typed_class_attribute": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_register_typed_class_attribute(conf_class_t *NOTNULL cls, const char *NOTNULL name, get_class_attr_t get_attr, lang_void *user_data_get, set_class_attr_t set_attr, lang_void *user_data_set, attr_attr_t attr, const char *type, const char *idx_type, const char *desc);"
   ]
  ],
  "f"
 ],
 "SIM_register_work": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_register_work(void (*NOTNULL f)(lang_void *data), lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_release_cell": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_release_cell(conf_object_t *NOTNULL obj, domain_lock_t *lock);"
   ]
  ],
  "f"
 ],
 "SIM_release_object": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_release_object(conf_object_t *NOTNULL obj, domain_lock_t *lock);"
   ]
  ],
  "f"
 ],
 "SIM_release_target": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_release_target(conf_object_t *NOTNULL obj, domain_lock_t *lock);"
   ]
  ],
  "f"
 ],
 "SIM_remove_output_handler": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_remove_output_handler(NOTNULL output_handler_t func, lang_void *user_data);"
   ]
  ],
  "f"
 ],
 "SIM_remove_profiling_area": [
  "simulator/host-profiling.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_remove_profiling_area(profile_area_t *NOTNULL handle);"
   ]
  ],
  "f"
 ],
 "SIM_replace_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_replace_transaction(transaction_t *NOTNULL t_old, transaction_t *t_new);"
   ]
  ],
  "f"
 ],
 "SIM_require_object": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_require_object(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_reset_processor": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_reset_processor(conf_object_t *NOTNULL cpu, int hard_reset);"
   ]
  ],
  "f"
 ],
 "SIM_restore_snapshot": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "snapshot_error_t SIM_restore_snapshot(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_run_alone": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_run_alone(void (*NOTNULL f)(lang_void *data), lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_run_async_work": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_run_async_work(lang_void *(*NOTNULL async_call)(lang_void *arg), void (*async_ready)(lang_void *async_ret, lang_void *arg), lang_void *arg);"
   ]
  ],
  "f"
 ],
 "SIM_run_command": [
  "simulator/script.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_run_command(const char *NOTNULL line);"
   ]
  ],
  "f"
 ],
 "SIM_run_command_file": [
  "simulator/script.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_run_command_file(const char *NOTNULL file, bool local);"
   ]
  ],
  "f"
 ],
 "SIM_run_command_file_params": [
  "simulator/script.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_run_command_file_params(const char *NOTNULL file, bool local, attr_value_t params);"
   ]
  ],
  "f"
 ],
 "SIM_run_in_thread": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_run_in_thread(void (*NOTNULL f)(lang_void *arg), lang_void *arg);"
   ]
  ],
  "f"
 ],
 "SIM_run_python": [
  "simulator/python.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t SIM_run_python(const char *NOTNULL line);"
   ]
  ],
  "f"
 ],
 "SIM_run_unrestricted": [
  "base/callbacks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_run_unrestricted(conf_object_t *NOTNULL obj, void (*NOTNULL func)(conf_object_t *obj, lang_void *param), lang_void *user_data);"
   ]
  ],
  "f"
 ],
 "SIM_set_attribute": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "set_error_t SIM_set_attribute(conf_object_t *NOTNULL obj, const char *NOTNULL name, attr_value_t *NOTNULL value);"
   ]
  ],
  "f"
 ],
 "SIM_set_attribute_default": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "set_error_t SIM_set_attribute_default(conf_object_t *NOTNULL obj, const char *NOTNULL name, attr_value_t value);"
   ]
  ],
  "f"
 ],
 "SIM_set_attribute_idx": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "set_error_t SIM_set_attribute_idx(conf_object_t *NOTNULL obj, const char *NOTNULL name, attr_value_t *NOTNULL index, attr_value_t *NOTNULL value);"
   ]
  ],
  "f"
 ],
 "SIM_set_augmentation_bit": [
  "processor/memory-augmentation.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_set_augmentation_bit(uint8 *tag_page_data, unsigned pofs);"
   ]
  ],
  "f"
 ],
 "SIM_set_class_attribute": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "set_error_t SIM_set_class_attribute(conf_class_t *NOTNULL cls, const char *NOTNULL name, attr_value_t *NOTNULL value);"
   ]
  ],
  "f"
 ],
 "SIM_set_class_attribute_idx": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "set_error_t SIM_set_class_attribute_idx(conf_class_t *NOTNULL cls, const char *NOTNULL name, attr_value_t *NOTNULL index, attr_value_t *NOTNULL value);"
   ]
  ],
  "f"
 ],
 "SIM_set_class_data": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_class_data(conf_class_t *NOTNULL cls, lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_set_configuration": [
  "simulator/configuration.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_configuration(attr_value_t conf);"
   ]
  ],
  "f"
 ],
 "SIM_set_frontend_context": [
  "simulator/embed.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_frontend_context(void *context);"
   ]
  ],
  "f"
 ],
 "SIM_set_log_level": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_log_level(conf_object_t *NOTNULL obj, unsigned level);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_exception": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_set_mem_op_exception(generic_transaction_t *NOTNULL mop, exception_type_t exc);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_initiator": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_set_mem_op_initiator(generic_transaction_t *NOTNULL mop, ini_type_t type, conf_object_t *obj);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_inquiry": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_set_mem_op_inquiry(generic_transaction_t *NOTNULL mop, bool inquiry);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_physical_address": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_set_mem_op_physical_address(generic_transaction_t *NOTNULL mop, physical_address_t pa);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_reissue": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_set_mem_op_reissue(generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_type": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_set_mem_op_type(generic_transaction_t *NOTNULL mop, mem_op_type_t type);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_user_data": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_set_mem_op_user_data(generic_transaction_t *NOTNULL mop, void *data);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_value_be": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_mem_op_value_be(generic_transaction_t *NOTNULL mop, uint64 value);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_value_buf": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_mem_op_value_buf(generic_transaction_t *NOTNULL mop, attr_value_t value);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_value_cpu": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_mem_op_value_cpu(generic_transaction_t *NOTNULL mop, uint64 value);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_value_le": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_mem_op_value_le(generic_transaction_t *NOTNULL mop, uint64 value);"
   ]
  ],
  "f"
 ],
 "SIM_set_mem_op_virtual_address": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void SIM_set_mem_op_virtual_address(generic_transaction_t *NOTNULL mop, logical_address_t va);"
   ]
  ],
  "f"
 ],
 "SIM_set_object_configured": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_object_configured(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_set_quiet": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_quiet(bool quiet);"
   ]
  ],
  "f"
 ],
 "SIM_set_transaction_bytes": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_transaction_bytes(const transaction_t *NOTNULL t, bytes_t bytes);"
   ]
  ],
  "f"
 ],
 "SIM_set_transaction_bytes_constant": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_transaction_bytes_constant(const transaction_t *NOTNULL t, uint8 value);"
   ]
  ],
  "f"
 ],
 "SIM_set_transaction_bytes_offs": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_transaction_bytes_offs(const transaction_t *NOTNULL t, unsigned offs, bytes_t bytes);"
   ]
  ],
  "f"
 ],
 "SIM_set_transaction_value_be": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_transaction_value_be(const transaction_t *NOTNULL t, uint64 val);"
   ]
  ],
  "f"
 ],
 "SIM_set_transaction_value_le": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_transaction_value_le(const transaction_t *NOTNULL t, uint64 val);"
   ]
  ],
  "f"
 ],
 "SIM_set_verbose": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_set_verbose(bool verbose);"
   ]
  ],
  "f"
 ],
 "SIM_shallow_object_iterator": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "object_iter_t SIM_shallow_object_iterator(conf_object_t *obj);"
   ]
  ],
  "f"
 ],
 "SIM_shutdown": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_shutdown(void);"
   ]
  ],
  "f"
 ],
 "SIM_simics_is_running": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_simics_is_running(void);"
   ]
  ],
  "f"
 ],
 "SIM_source_python": [
  "simulator/python.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_source_python(const char *NOTNULL file);"
   ]
  ],
  "f"
 ],
 "SIM_source_python_in_module": [
  "simulator/python.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_source_python_in_module(const char *NOTNULL file, const char *NOTNULL module);"
   ]
  ],
  "f"
 ],
 "SIM_stall": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_stall(conf_object_t *NOTNULL obj, double seconds);"
   ]
  ],
  "f"
 ],
 "SIM_stall_count": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "cycles_t SIM_stall_count(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_stall_cycle": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_stall_cycle(conf_object_t *NOTNULL obj, cycles_t cycles);"
   ]
  ],
  "f"
 ],
 "SIM_stalled_until": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "cycles_t SIM_stalled_until(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_step_count": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "pc_step_t SIM_step_count(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_take_snapshot": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "snapshot_error_t SIM_take_snapshot(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "SIM_thread_safe_callback": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_thread_safe_callback(void (*NOTNULL f)(lang_void *data), lang_void *data);"
   ]
  ],
  "f"
 ],
 "SIM_time": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "double SIM_time(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_transaction_flags": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "transaction_flags_t SIM_transaction_flags(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_transaction_initiator": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *SIM_transaction_initiator(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_transaction_is_deferrable": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_transaction_is_deferrable(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_transaction_is_fetch": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_transaction_is_fetch(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_transaction_is_inquiry": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_transaction_is_inquiry(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_transaction_is_read": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_transaction_is_read(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_transaction_is_write": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool SIM_transaction_is_write(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_transaction_size": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "unsigned SIM_transaction_size(const transaction_t *NOTNULL t);"
   ]
  ],
  "f"
 ],
 "SIM_transaction_wait": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "exception_type_t SIM_transaction_wait(transaction_t *NOTNULL t, exception_type_t ex);"
   ]
  ],
  "f"
 ],
 "SIM_translation_changed": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_translation_changed(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "SIM_trigger_global_message": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_trigger_global_message(const char *NOTNULL msg, lang_void *ref);"
   ]
  ],
  "f"
 ],
 "SIM_version": [
  "base/version.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_version(void);"
   ]
  ],
  "f"
 ],
 "SIM_version_base": [
  "base/version.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_version_base(void);"
   ]
  ],
  "f"
 ],
 "SIM_version_major": [
  "base/version.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *SIM_version_major(void);"
   ]
  ],
  "f"
 ],
 "SIM_vmxmon_version": [
  "base/version.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "char *SIM_vmxmon_version(void);"
   ]
  ],
  "f"
 ],
 "SIM_write": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int SIM_write(const void *NOTNULL src, int length);"
   ]
  ],
  "f"
 ],
 "SIM_write_byte": [
  "simulator/memory.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_write_byte(conf_object_t *NOTNULL obj, generic_address_t paddr, uint8 value);"
   ]
  ],
  "f"
 ],
 "SIM_write_configuration_to_file": [
  "simulator/configuration.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_write_configuration_to_file(const char *NOTNULL file, save_flags_t flags);"
   ]
  ],
  "f"
 ],
 "SIM_write_persistent_state": [
  "simulator/configuration.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_write_persistent_state(const char *NOTNULL file, conf_object_t *root, save_flags_t flags);"
   ]
  ],
  "f"
 ],
 "SIM_write_phys_memory": [
  "simulator/memory.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_write_phys_memory(conf_object_t *NOTNULL cpu, physical_address_t paddr, uint64 value, int length);"
   ]
  ],
  "f"
 ],
 "SIM_write_phys_memory_tags": [
  "simulator/memory.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_write_phys_memory_tags(conf_object_t *NOTNULL mem_space, physical_address_t paddr, uint64 tag_bits, unsigned ntags);"
   ]
  ],
  "f"
 ],
 "SIM_x86_mem_trans_from_generic": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "x86_memory_transaction_t *SIM_x86_mem_trans_from_generic(generic_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "SIM_yield_thread_domains": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void SIM_yield_thread_domains(void);"
   ]
  ],
  "f"
 ],
 "VT_abort_error": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_abort_error(conf_object_t *obj, const char *NOTNULL msg);"
   ]
  ],
  "f"
 ],
 "VT_abort_execution_fiber": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_abort_execution_fiber(void);"
   ]
  ],
  "f"
 ],
 "VT_abort_user": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_abort_user(const char *msg);"
   ]
  ],
  "f"
 ],
 "VT_acquire_cell": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "domain_lock_t *VT_acquire_cell(conf_object_t *NOTNULL obj, const char *NOTNULL function_name, const char *NOTNULL source_location);"
   ]
  ],
  "f"
 ],
 "VT_acquire_object": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "domain_lock_t *VT_acquire_object(conf_object_t *NOTNULL obj, const char *NOTNULL function_name, const char *NOTNULL source_location);"
   ]
  ],
  "f"
 ],
 "VT_acquire_target": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "domain_lock_t *VT_acquire_target(conf_object_t *NOTNULL obj, const char *NOTNULL func, const char *NOTNULL location);"
   ]
  ],
  "f"
 ],
 "VT_activate_executor": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_activate_executor(execute_environ_t *NOTNULL ec, conf_object_t *obj);"
   ]
  ],
  "f"
 ],
 "VT_add_objects": [
  "simulator/configuration.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_add_objects(pre_conf_object_set_t *set);"
   ]
  ],
  "f"
 ],
 "VT_add_permanent_object": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_add_permanent_object(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_add_telemetry_data": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_add_telemetry_data(const char *NOTNULL group, const char *NOTNULL key, attr_value_t *NOTNULL value);"
   ]
  ],
  "f"
 ],
 "VT_add_telemetry_data_bool": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_add_telemetry_data_bool(const char *NOTNULL group, const char *NOTNULL key, bool value);"
   ]
  ],
  "f"
 ],
 "VT_add_telemetry_data_int": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_add_telemetry_data_int(const char *NOTNULL group, const char *NOTNULL key, uint64 value);"
   ]
  ],
  "f"
 ],
 "VT_add_telemetry_data_str": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_add_telemetry_data_str(const char *NOTNULL group, const char *NOTNULL key, const char *NOTNULL value);"
   ]
  ],
  "f"
 ],
 "VT_assert_cell_context": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_assert_cell_context(conf_object_t *NOTNULL obj, const char *NOTNULL file, const char *NOTNULL func);"
   ]
  ],
  "f"
 ],
 "VT_assert_object_lock": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_assert_object_lock(conf_object_t *NOTNULL obj, const char *NOTNULL func, const char *NOTNULL line);"
   ]
  ],
  "f"
 ],
 "VT_assert_outside_execution_context": [
  "simulator/oec-control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_assert_outside_execution_context(const char *func, const char *file, int line);"
   ]
  ],
  "f"
 ],
 "VT_async_events_pending": [
  "processor/processor-platform.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_async_events_pending(void);"
   ]
  ],
  "f"
 ],
 "VT_async_events_pending_in_cell": [
  "processor/processor-platform.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_async_events_pending_in_cell(conf_object_t *NOTNULL cell);"
   ]
  ],
  "f"
 ],
 "VT_async_stall_usecs": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_async_stall_usecs(uint64 usecs);"
   ]
  ],
  "f"
 ],
 "VT_attr_values_equal": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_attr_values_equal(attr_value_t a1, attr_value_t a2);"
   ]
  ],
  "f"
 ],
 "VT_call_python_module_function": [
  "simulator/python.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_call_python_module_function(const char *module, const char *func, attr_value_t *args);"
   ]
  ],
  "f"
 ],
 "VT_check_async_events": [
  "processor/processor-platform.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_check_async_events(void);"
   ]
  ],
  "f"
 ],
 "VT_check_async_events_from_cell": [
  "processor/processor-platform.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_check_async_events_from_cell(conf_object_t *NOTNULL cell);"
   ]
  ],
  "f"
 ],
 "VT_check_package_updates": [
  "simulator/embed.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_check_package_updates(void);"
   ]
  ],
  "f"
 ],
 "VT_clear_augmentation_bit": [
  "processor/memory-augmentation.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_clear_augmentation_bit(uint8 *page_data, unsigned pofs);"
   ]
  ],
  "f"
 ],
 "VT_clock_frequency_about_to_change": [
  "processor/time.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_clock_frequency_about_to_change(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_clock_frequency_change": [
  "processor/time.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_clock_frequency_change(conf_object_t *NOTNULL obj, uint64 cycles_per_second);"
   ]
  ],
  "f"
 ],
 "VT_command_line_create": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "cmd_line_id_t VT_command_line_create(conf_object_t *obj, bool interactive, bool primary);"
   ]
  ],
  "f"
 ],
 "VT_command_line_delete": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_command_line_delete(cmd_line_id_t id);"
   ]
  ],
  "f"
 ],
 "VT_command_line_key": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_command_line_key(cmd_line_id_t id, cmd_line_mod_t mod, cmd_line_key_t key);"
   ]
  ],
  "f"
 ],
 "VT_command_line_new_position": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_command_line_new_position(cmd_line_id_t id, int pos);"
   ]
  ],
  "f"
 ],
 "VT_command_line_new_selection": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_command_line_new_selection(cmd_line_id_t id, int left, int right);"
   ]
  ],
  "f"
 ],
 "VT_command_line_set_size": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_command_line_set_size(cmd_line_id_t, int cols, int rows);"
   ]
  ],
  "f"
 ],
 "VT_command_line_to_clipboard": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_command_line_to_clipboard(cmd_line_id_t id, const char *str);"
   ]
  ],
  "f"
 ],
 "VT_create_execute_environ": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "execute_environ_t *VT_create_execute_environ(void);"
   ]
  ],
  "f"
 ],
 "VT_create_wait_handler": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "wait_handler_t *VT_create_wait_handler(void (*NOTNULL wait)(void **ret_thread_id, void *usr), void (*NOTNULL resume)(void *thread_id, void *usr), void *usr);"
   ]
  ],
  "f"
 ],
 "VT_critical_error": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_critical_error(const char *NOTNULL short_msg, const char *NOTNULL long_msg);"
   ]
  ],
  "f"
 ],
 "VT_cross_cell_call": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_cross_cell_call(void (*NOTNULL f)(conf_object_t *obj, lang_void *arg), conf_object_t *NOTNULL obj, lang_void *arg);"
   ]
  ],
  "f"
 ],
 "VT_ctx_remove_from_context_handler": [
  "model-iface/context.h",
  "model-iface/context.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_ctx_remove_from_context_handler(conf_object_t *NOTNULL obj, conf_object_t *c_handler);"
   ]
  ],
  "f"
 ],
 "VT_ctx_set_on_context_handler": [
  "model-iface/context.h",
  "model-iface/context.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_ctx_set_on_context_handler(conf_object_t *NOTNULL obj, conf_object_t *c_handler, uint32 bp_flags);"
   ]
  ],
  "f"
 ],
 "VT_cycles_to_quantum_end": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "cycles_t VT_cycles_to_quantum_end(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_deprecate": [
  "base/version.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_deprecate(int depr_build_id, const char *NOTNULL warn_msg, const char *NOTNULL ref_msg);"
   ]
  ],
  "f"
 ],
 "VT_dispatch_async_events": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_dispatch_async_events(void);"
   ]
  ],
  "f"
 ],
 "VT_domain_event_at": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_domain_event_at(conf_object_t *NOTNULL domain, event_class_t *NOTNULL ec, conf_object_t *NOTNULL obj, conf_object_t *NOTNULL clock, double when, lang_void *param);"
   ]
  ],
  "f"
 ],
 "VT_domain_event_soon": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_domain_event_soon(conf_object_t *NOTNULL domain, event_class_t *NOTNULL ec, conf_object_t *NOTNULL obj, lang_void *param);"
   ]
  ],
  "f"
 ],
 "VT_dump_snapshot": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_dump_snapshot(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "VT_effective_log_level": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "unsigned VT_effective_log_level(const conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_execute": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_execute(execute_environ_t *NOTNULL ec);"
   ]
  ],
  "f"
 ],
 "VT_first_clock": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *VT_first_clock(void);"
   ]
  ],
  "f"
 ],
 "VT_free_completion": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_free_completion(completion_t *c);"
   ]
  ],
  "f"
 ],
 "VT_free_execute_environ": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_free_execute_environ(execute_environ_t *env);"
   ]
  ],
  "f"
 ],
 "VT_free_wait_handler": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_free_wait_handler(wait_handler_t *h);"
   ]
  ],
  "f"
 ],
 "VT_frontend_exception": [
  "base/sim-exception.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_frontend_exception(sim_exception_t exc_type, const char *NOTNULL str);"
   ]
  ],
  "f"
 ],
 "VT_get_all_instances": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_get_all_instances(conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "VT_get_all_objects_impl": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_get_all_objects_impl(attr_value_t ifaces);"
   ]
  ],
  "f"
 ],
 "VT_get_atom_class_id": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "atom_id_t VT_get_atom_class_id(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "VT_get_attribute_type": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *VT_get_attribute_type(conf_class_t *NOTNULL cls, const char *NOTNULL attr);"
   ]
  ],
  "f"
 ],
 "VT_get_attributes": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_get_attributes(conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "VT_get_augmentation_bit": [
  "processor/memory-augmentation.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int VT_get_augmentation_bit(uint8 *page_data, unsigned pofs);"
   ]
  ],
  "f"
 ],
 "VT_get_break_message": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *VT_get_break_message(void);"
   ]
  ],
  "f"
 ],
 "VT_get_class_description": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *VT_get_class_description(const conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "VT_get_class_extensions": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_get_class_extensions(conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "VT_get_class_kind": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "class_kind_t VT_get_class_kind(const conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "VT_get_class_short_desc": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *VT_get_class_short_desc(const conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "VT_get_configuration": [
  "simulator/configuration.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "pre_conf_object_set_t *VT_get_configuration(const char *NOTNULL file);"
   ]
  ],
  "f"
 ],
 "VT_get_current_processor": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *VT_get_current_processor(void);"
   ]
  ],
  "f"
 ],
 "VT_get_current_processor_old": [
  "simulator/processor.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *VT_get_current_processor_old(void);"
   ]
  ],
  "f"
 ],
 "VT_get_event_class": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "event_class_t *VT_get_event_class(conf_class_t *NOTNULL cl, const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "VT_get_hide_consoles_flag": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int VT_get_hide_consoles_flag(void);"
   ]
  ],
  "f"
 ],
 "VT_get_interfaces": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_get_interfaces(conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "VT_get_map_generation": [
  "base/configuration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint32 VT_get_map_generation(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_get_object_by_name": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *VT_get_object_by_name(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "VT_get_pci_mem_op_requester_id": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint16 VT_get_pci_mem_op_requester_id(const pci_memory_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "VT_get_pci_mem_op_tlp_prefix": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint32 VT_get_pci_mem_op_tlp_prefix(const pci_memory_transaction_t *NOTNULL mop);"
   ]
  ],
  "f"
 ],
 "VT_get_port_classes": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_get_port_classes(conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "VT_get_port_interfaces": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_get_port_interfaces(conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "VT_get_port_obj_desc": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *VT_get_port_obj_desc(conf_class_t *NOTNULL cls, const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "VT_get_saved_cwd": [
  "simulator/paths.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const char *VT_get_saved_cwd(void);"
   ]
  ],
  "f"
 ],
 "VT_get_stop_reasons": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_get_stop_reasons(void);"
   ]
  ],
  "f"
 ],
 "VT_get_stop_type": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "stop_type_t VT_get_stop_type(void);"
   ]
  ],
  "f"
 ],
 "VT_get_transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "transaction_t *VT_get_transaction(int64 id);"
   ]
  ],
  "f"
 ],
 "VT_global_async_events_pending": [
  "processor/processor-platform.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_global_async_events_pending(void);"
   ]
  ],
  "f"
 ],
 "VT_hap_global_callback_ranges": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_hap_global_callback_ranges(hap_type_t hap);"
   ]
  ],
  "f"
 ],
 "VT_in_main_branch": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_in_main_branch(void);"
   ]
  ],
  "f"
 ],
 "VT_init_package_list": [
  "simulator/embed.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_init_package_list(const char *package_list);"
   ]
  ],
  "f"
 ],
 "VT_inside_instruction": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_inside_instruction(void);"
   ]
  ],
  "f"
 ],
 "VT_interrupt_script": [
  "simulator/script.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_interrupt_script(bool user);"
   ]
  ],
  "f"
 ],
 "VT_io_memory_operation": [
  "devs/io-memory.h",
  "devs/io-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bytes_t VT_io_memory_operation(conf_object_t *NOTNULL obj, io_memory_interface_t *NOTNULL iface, generic_transaction_t *NOTNULL memop, bytes_t data, map_info_t info);"
   ]
  ],
  "f"
 ],
 "VT_is_oec_thread": [
  "simulator/thread.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_is_oec_thread(void);"
   ]
  ],
  "f"
 ],
 "VT_is_saving_persistent_data": [
  "base/configuration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_is_saving_persistent_data(void);"
   ]
  ],
  "f"
 ],
 "VT_list_registered_atoms": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_list_registered_atoms(void);"
   ]
  ],
  "f"
 ],
 "VT_load_target_preset_yml": [
  "simulator/script.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_load_target_preset_yml(const char *NOTNULL target, const char *ns, attr_value_t presets, const char *preset_yml);"
   ]
  ],
  "f"
 ],
 "VT_local_async_events_pending": [
  "processor/processor-platform.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_local_async_events_pending(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_log_always_count": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int VT_log_always_count(void);"
   ]
  ],
  "f"
 ],
 "VT_log_critical": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_log_critical(conf_object_t *NOTNULL dev, uint64 grp, const char *NOTNULL str, ...);"
   ]
  ],
  "f"
 ],
 "VT_log_error": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_log_error(conf_object_t *NOTNULL dev, uint64 grp, const char *NOTNULL str, ...);"
   ]
  ],
  "f"
 ],
 "VT_log_info": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_log_info(int lvl, conf_object_t *NOTNULL dev, uint64 grp, const char *NOTNULL str, ...);"
   ]
  ],
  "f"
 ],
 "VT_log_level_enough": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool VT_log_level_enough(conf_object_t *obj, unsigned lvl);"
   ]
  ],
  "f"
 ],
 "VT_log_message": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_log_message(conf_object_t *NOTNULL obj, int level, int group_ids, log_type_t log_type, const char *NOTNULL message);"
   ]
  ],
  "f"
 ],
 "VT_log_message64": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_log_message64(conf_object_t *NOTNULL obj, int level, uint64 group_ids, log_type_t log_type, const char *NOTNULL message);"
   ]
  ],
  "f"
 ],
 "VT_log_spec_violation": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_log_spec_violation(int lvl, conf_object_t *NOTNULL dev, uint64 grp, const char *NOTNULL str, ...);"
   ]
  ],
  "f"
 ],
 "VT_log_unimplemented": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_log_unimplemented(int lvl, conf_object_t *NOTNULL dev, uint64 grp, const char *NOTNULL str, ...);"
   ]
  ],
  "f"
 ],
 "VT_log_warning": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_log_warning(conf_object_t *NOTNULL dev, uint64 grp, const char *NOTNULL str, ...);"
   ]
  ],
  "f"
 ],
 "VT_logical_file_size": [
  "simulator/paths.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int64 VT_logical_file_size(const char *NOTNULL filename);"
   ]
  ],
  "f"
 ],
 "VT_lookup_atom_class_id": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "atom_id_t VT_lookup_atom_class_id(const char *NOTNULL name);"
   ]
  ],
  "f"
 ],
 "VT_lookup_transaction_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const atom_t *VT_lookup_transaction_atom(const transaction_t *NOTNULL t, atom_id_t id);"
   ]
  ],
  "f"
 ],
 "VT_make_attr": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_make_attr(const char *fmt, ...);"
   ]
  ],
  "f"
 ],
 "VT_make_attr_list_from_array": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline attr_value_t VT_make_attr_list_from_array(unsigned length, const attr_value_t *elems);"
   ]
  ],
  "f"
 ],
 "VT_make_cbdata_from_python": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "cbdata_t VT_make_cbdata_from_python(SIM_PYOBJECT *pyobj);"
   ]
  ],
  "f"
 ],
 "VT_make_python_cbdata": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "SIM_PYOBJECT *VT_make_python_cbdata(cbdata_t cbd);"
   ]
  ],
  "f"
 ],
 "VT_map_target_access": [
  "base/map-target.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "exception_type_t VT_map_target_access(const map_target_t *NOTNULL mt, generic_transaction_t *mop);"
   ]
  ],
  "f"
 ],
 "VT_map_target_dm_lookup": [
  "base/map-target.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "direct_memory_lookup_t VT_map_target_dm_lookup(const map_target_t *NOTNULL mt, conf_object_t *requester, physical_address_t addr, uint64 size, access_t access);"
   ]
  ],
  "f"
 ],
 "VT_new_code_block": [
  "processor/processor-platform.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_new_code_block(void *start, size_t len);"
   ]
  ],
  "f"
 ],
 "VT_new_completion": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "completion_t *VT_new_completion(void);"
   ]
  ],
  "f"
 ],
 "VT_object_cell": [
  "base/configuration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *VT_object_cell(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_object_checkpointable": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_object_checkpointable(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_object_ps_clock": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "conf_object_t *VT_object_ps_clock(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_outside_execution_context_violation": [
  "simulator/oec-control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_outside_execution_context_violation(void);"
   ]
  ],
  "f"
 ],
 "VT_post_local_work": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_post_local_work(conf_object_t *NOTNULL cell, void (*NOTNULL f)(lang_void *data), lang_void *data);"
   ]
  ],
  "f"
 ],
 "VT_process_cross_cell_calls": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_process_cross_cell_calls(void);"
   ]
  ],
  "f"
 ],
 "VT_process_work": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int VT_process_work(int *done);"
   ]
  ],
  "f"
 ],
 "VT_prof_data_inc_pc": [
  "processor/data-profiler.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_prof_data_inc_pc(prof_data_t *prof, conf_object_t *NOTNULL cpu);"
   ]
  ],
  "f"
 ],
 "VT_profiler_add_flush": [
  "processor/data-profiler.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_profiler_add_flush(conf_object_t *NOTNULL dp, data_profiler_flush_t flush_fun, void *flush_param);"
   ]
  ],
  "f"
 ],
 "VT_profiler_remove_flush": [
  "processor/data-profiler.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_profiler_remove_flush(conf_object_t *NOTNULL dp, data_profiler_flush_t flush_fun, void *flush_param);"
   ]
  ],
  "f"
 ],
 "VT_python_decref": [
  "simulator/python.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_python_decref(SIM_PYOBJECT *NOTNULL o);"
   ]
  ],
  "f"
 ],
 "VT_real_network_warnings": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_real_network_warnings(void);"
   ]
  ],
  "f"
 ],
 "VT_register_async_notifier": [
  "processor/processor-platform.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_register_async_notifier(conf_object_t *obj, void (*wakeup)(conf_object_t *obj));"
   ]
  ],
  "f"
 ],
 "VT_register_atom_class": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_register_atom_class(const char *NOTNULL name, const char *pywrap_atom_from_type, const char *pywrap_type_from_atom);"
   ]
  ],
  "f"
 ],
 "VT_register_oec_thread": [
  "simulator/thread.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_register_oec_thread(void);"
   ]
  ],
  "f"
 ],
 "VT_register_passive_clock": [
  "base/clock.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int VT_register_passive_clock(conf_class_t *NOTNULL cls, const cycle_interface_t *NOTNULL iface);"
   ]
  ],
  "f"
 ],
 "VT_register_port_array_interface": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int VT_register_port_array_interface(conf_class_t *NOTNULL cls, const char *NOTNULL name, const interface_array_t *NOTNULL iface_list, const char *NOTNULL portname, const char *desc);"
   ]
  ],
  "f"
 ],
 "VT_register_thread": [
  "simulator/thread.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_register_thread(void);"
   ]
  ],
  "f"
 ],
 "VT_release_cell": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_release_cell(conf_object_t *NOTNULL obj, domain_lock_t *lock);"
   ]
  ],
  "f"
 ],
 "VT_release_object": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_release_object(conf_object_t *NOTNULL obj, domain_lock_t *lock);"
   ]
  ],
  "f"
 ],
 "VT_release_target": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_release_target(conf_object_t *NOTNULL obj, domain_lock_t *lock);"
   ]
  ],
  "f"
 ],
 "VT_rename_object": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_rename_object(conf_object_t *NOTNULL obj, const char *NOTNULL newname);"
   ]
  ],
  "f"
 ],
 "VT_run_outside_cell": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_run_outside_cell(void (*NOTNULL f)(lang_void *arg), lang_void *arg);"
   ]
  ],
  "f"
 ],
 "VT_set_augmentation_bit": [
  "processor/memory-augmentation.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_set_augmentation_bit(uint8 *page_data, unsigned pofs);"
   ]
  ],
  "f"
 ],
 "VT_set_completion": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_set_completion(completion_t *NOTNULL c, int status);"
   ]
  ],
  "f"
 ],
 "VT_set_constructor_data": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_set_constructor_data(conf_class_t *NOTNULL cls, lang_void *data);"
   ]
  ],
  "f"
 ],
 "VT_set_cpu_offset": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_set_cpu_offset(const void *arg, bool add);"
   ]
  ],
  "f"
 ],
 "VT_set_delete_protection": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_set_delete_protection(conf_object_t *NOTNULL obj, bool on);"
   ]
  ],
  "f"
 ],
 "VT_set_execute_environ": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_set_execute_environ(conf_object_t *NOTNULL obj, execute_environ_t *env);"
   ]
  ],
  "f"
 ],
 "VT_set_object_checkpointable": [
  "simulator/conf-object.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_set_object_checkpointable(conf_object_t *NOTNULL obj, bool checkpointable);"
   ]
  ],
  "f"
 ],
 "VT_set_object_clock": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_set_object_clock(conf_object_t *NOTNULL obj, conf_object_t *clock);"
   ]
  ],
  "f"
 ],
 "VT_set_pci_mem_op_tlp_prefix": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_set_pci_mem_op_tlp_prefix(pci_memory_transaction_t *NOTNULL mop, uint32 tlp_prefix);"
   ]
  ],
  "f"
 ],
 "VT_set_prompt_customizer": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_set_prompt_customizer(NOTNULL prompt_customizer_t cb);"
   ]
  ],
  "f"
 ],
 "VT_set_wait_handler": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "wait_handler_t *VT_set_wait_handler(wait_handler_t *h);"
   ]
  ],
  "f"
 ],
 "VT_snapshot_size_used": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t VT_snapshot_size_used(void);"
   ]
  ],
  "f"
 ],
 "VT_snapshots_ignore_class": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_snapshots_ignore_class(const char *NOTNULL class_name);"
   ]
  ],
  "f"
 ],
 "VT_snapshots_skip_attr_restore": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_snapshots_skip_attr_restore(conf_class_t *NOTNULL cls, const char *NOTNULL attr_name);"
   ]
  ],
  "f"
 ],
 "VT_snapshots_skip_class_restore": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_snapshots_skip_class_restore(conf_class_t *NOTNULL cls);"
   ]
  ],
  "f"
 ],
 "VT_stacked_post": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_stacked_post(conf_object_t *NOTNULL obj, void (*NOTNULL func)(conf_object_t *obj, lang_void *param), lang_void *user_data);"
   ]
  ],
  "f"
 ],
 "VT_start_execution_fiber": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_start_execution_fiber(conf_object_t *NOTNULL obj, void (*func)(conf_object_t *obj, lang_void *param), lang_void *param);"
   ]
  ],
  "f"
 ],
 "VT_step_stamp": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int128 VT_step_stamp(conf_object_t *NOTNULL step_obj);"
   ]
  ],
  "f"
 ],
 "VT_stop_error": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_stop_error(conf_object_t *obj, const char *NOTNULL msg);"
   ]
  ],
  "f"
 ],
 "VT_stop_event_processing": [
  "processor/processor-platform.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_stop_event_processing(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_stop_execution": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_stop_execution(execute_environ_t *env);"
   ]
  ],
  "f"
 ],
 "VT_stop_finished": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_stop_finished(const char *msg);"
   ]
  ],
  "f"
 ],
 "VT_stop_message": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_stop_message(conf_object_t *obj, const char *msg);"
   ]
  ],
  "f"
 ],
 "VT_stop_user": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_stop_user(const char *msg);"
   ]
  ],
  "f"
 ],
 "VT_thread_cell_association_begin": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_thread_cell_association_begin(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_thread_cell_association_end": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_thread_cell_association_end(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_transaction_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void *VT_transaction_atom(const transaction_t *NOTNULL t, atom_id_t id);"
   ]
  ],
  "f"
 ],
 "VT_unregister_async_notifier": [
  "processor/processor-platform.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_unregister_async_notifier(conf_object_t *obj, void (*wakeup)(conf_object_t *obj));"
   ]
  ],
  "f"
 ],
 "VT_unregister_thread": [
  "simulator/thread.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_unregister_thread(void);"
   ]
  ],
  "f"
 ],
 "VT_unrestricted_sync_point": [
  "processor/processor-platform.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_unrestricted_sync_point(conf_object_t *NOTNULL obj);"
   ]
  ],
  "f"
 ],
 "VT_update_thread_domain_assignments": [
  "model-iface/concurrency.h",
  "model-iface/concurrency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_update_thread_domain_assignments(void);"
   ]
  ],
  "f"
 ],
 "VT_use_ipv4": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool VT_use_ipv4(void);"
   ]
  ],
  "f"
 ],
 "VT_user_interrupt": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_user_interrupt(const char *msg, int break_script);"
   ]
  ],
  "f"
 ],
 "VT_wait_for_completion": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int VT_wait_for_completion(completion_t *NOTNULL c);"
   ]
  ],
  "f"
 ],
 "VT_wait_for_simulator_init": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void VT_wait_for_simulator_init(void);"
   ]
  ],
  "f"
 ],
 "_cpu_instrumentation_entry_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct instrumentation_entry _cpu_instrumentation_entry_t;"
   ]
  ],
  "s:_cpu_instrumentation_entry_t"
 ],
 "a20_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct a20_interface {\n    void (*set_a20_line)(conf_object_t *NOTNULL obj, int value);\n    int (*get_a20_line)(conf_object_t *NOTNULL obj);\n} a20_interface_t;"
   ]
  ],
  "s:a20_interface_t:set_a20_line;get_a20_line"
 ],
 "abs_pointer_activate_interface_t": [
  "model-iface/abs-pointer.h",
  "model-iface/abs-pointer.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct abs_pointer_activate_interface {\n    void (*enable)(conf_object_t *obj);\n    void (*disable)(conf_object_t *obj);\n} abs_pointer_activate_interface_t;"
   ]
  ],
  "s:abs_pointer_activate_interface_t:enable;disable"
 ],
 "abs_pointer_buttons_t": [
  "model-iface/abs-pointer.h",
  "model-iface/abs-pointer.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Abs_Pointer_Button_Left   = 32,\n    Abs_Pointer_Button_Right  = 16,\n    Abs_Pointer_Button_Middle = 8\n} abs_pointer_buttons_t;"
   ]
  ],
  "e:abs_pointer_buttons_t:Abs_Pointer_Button_Left;Abs_Pointer_Button_Right;Abs_Pointer_Button_Middle"
 ],
 "abs_pointer_interface_t": [
  "model-iface/abs-pointer.h",
  "model-iface/abs-pointer.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct abs_pointer_interface {\n    void (*set_state)(conf_object_t *obj, abs_pointer_state_t state);\n} abs_pointer_interface_t;"
   ]
  ],
  "s:abs_pointer_interface_t:set_state"
 ],
 "abs_pointer_state_t": [
  "model-iface/abs-pointer.h",
  "model-iface/abs-pointer.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    abs_pointer_buttons_t buttons;\n    uint16 x;\n    uint16 y;\n    uint16 z;\n} abs_pointer_state_t;"
   ]
  ],
  "s:abs_pointer_state_t:buttons;x;y;z"
 ],
 "access_filter_cb_t": [
  "model-iface/ram-instrumentation.h",
  "model-iface/ram-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef access_t (*access_filter_cb_t)(conf_object_t *obj, conf_object_t *ram, conf_object_t *initiator, uint64 offset, unsigned size, access_t access, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "access_t": [
  "processor/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Access_Read    = 1,\n    Sim_Access_Write   = 2,\n    Sim_Access_Execute = 4\n} access_t;"
   ]
  ],
  "e:access_t:Sim_Access_Read;Sim_Access_Write;Sim_Access_Execute"
 ],
 "addr_prof_iter_t": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct addr_prof_iter {\n    uint64 (*next)(struct addr_prof_iter *i);\n    void (*destroy)(struct addr_prof_iter *i);\n    generic_address_t addr;\n} addr_prof_iter_t;"
   ]
  ],
  "s:addr_prof_iter_t:next;destroy;addr"
 ],
 "addr_space_t": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Addr_Space_Conf,\n    Sim_Addr_Space_IO,\n    Sim_Addr_Space_Memory\n} addr_space_t;"
   ]
  ],
  "e:addr_space_t:Sim_Addr_Space_Conf;Sim_Addr_Space_IO;Sim_Addr_Space_Memory"
 ],
 "addr_type_t": [
  "simulator/address-profiler.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Addr_Type_Invalid,\n    Addr_Type_Physical,\n    Addr_Type_Virtual\n} addr_type_t;"
   ]
  ],
  "e:addr_type_t:Addr_Type_Invalid;Addr_Type_Physical;Addr_Type_Virtual"
 ],
 "address_handle_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_address_info address_handle_t;"
   ]
  ],
  "s:address_handle_t"
 ],
 "address_profiler_interface_t": [
  "simulator-iface/address-profiler.h",
  "simulator-iface/address-profiler.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct address_profiler_interface {\n    addr_prof_iter_t *(*iter)(conf_object_t *prof_obj, unsigned view, generic_address_t start, generic_address_t stop);\n    uint64 (*sum)(conf_object_t *prof_obj, unsigned view, generic_address_t start, generic_address_t end);\n    uint64 (*max)(conf_object_t *prof_obj, unsigned view, generic_address_t start, generic_address_t end);\n    unsigned (*granularity_log2)(conf_object_t *prof_obj, unsigned view);\n    int (*address_bits)(conf_object_t *prof_obj, unsigned view);\n    int (*physical_addresses)(conf_object_t *prof_obj, unsigned view);\n    const char *(*description)(conf_object_t *prof_obj, unsigned view);\n    unsigned (*num_views)(conf_object_t *prof_obj);\n} address_profiler_interface_t;"
   ]
  ],
  "s:address_profiler_interface_t:iter;sum;max;granularity_log2;address_bits;physical_addresses;description;num_views"
 ],
 "after_read_callback_t": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*after_read_callback_t)(conf_object_t *connection, bank_after_read_interface_t *access, bank_access_t *handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "after_write_callback_t": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*after_write_callback_t)(conf_object_t *connection, bank_after_write_interface_t *access, bank_access_t *handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "api_function_t": [
  "base/version.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*api_function_t)(void);"
   ]
  ],
  "t"
 ],
 "apic_bus_interface_t": [
  "devs/apic.h",
  "devs/apic.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct apic_bus_interface {\n    apic_bus_status_t (*interrupt)(conf_object_t *obj, apic_destination_mode_t dest_mode, apic_delivery_mode_t delivery_mode, int level_assert, apic_trigger_mode_t trigger_mode, uint8 vector, uint8 destination);\n} apic_bus_interface_t;"
   ]
  ],
  "s:apic_bus_interface_t:interrupt"
 ],
 "apic_bus_status_t": [
  "devs/apic.h",
  "devs/apic.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Apic_Bus_Accepted  = 0,\n    Apic_Bus_Retry     = 1,\n    Apic_Bus_No_Target = 2,\n    Apic_Bus_Invalid   = 3\n} apic_bus_status_t;"
   ]
  ],
  "e:apic_bus_status_t:Apic_Bus_Accepted;Apic_Bus_Retry;Apic_Bus_No_Target;Apic_Bus_Invalid"
 ],
 "apic_cpu_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct apic_cpu_interface {\n    uint64 (*tpr_r)(conf_object_t *NOTNULL obj);\n    void (*tpr_w)(conf_object_t *NOTNULL obj, uint64 tpr);\n    void (*local_int)(conf_object_t *NOTNULL obj, local_apic_interrupt_t int_type);\n    void (*power_on)(conf_object_t *NOTNULL obj, bool bsp, int apic_id);\n    void (*init)(conf_object_t *NOTNULL obj);\n    bool (*enabled_r)(conf_object_t *NOTNULL obj);\n} apic_cpu_interface_t;"
   ]
  ],
  "s:apic_cpu_interface_t:tpr_r;tpr_w;local_int;power_on;init;enabled_r"
 ],
 "apic_delivery_mode_t": [
  "devs/apic.h",
  "devs/apic.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Apic_Delivery_Mode_Fixed           = 0,\n    Apic_Delivery_Mode_Lowest_Priority = 1,\n    Apic_Delivery_Mode_SMI             = 2,\n    Apic_Delivery_Mode_Remote_Read     = 3,\n    Apic_Delivery_Mode_NMI             = 4,\n    Apic_Delivery_Mode_INIT            = 5,\n    Apic_Delivery_Mode_Start_Up        = 6,\n    Apic_Delivery_Mode_Ext_INT         = 7\n} apic_delivery_mode_t;"
   ]
  ],
  "e:apic_delivery_mode_t:Apic_Delivery_Mode_Fixed;Apic_Delivery_Mode_Lowest_Priority;Apic_Delivery_Mode_SMI;Apic_Delivery_Mode_Remote_Read;Apic_Delivery_Mode_NMI;Apic_Delivery_Mode_INIT;Apic_Delivery_Mode_Start_Up;Apic_Delivery_Mode_Ext_INT"
 ],
 "apic_delivery_status_t": [
  "devs/apic.h",
  "devs/apic.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Apic_Delivery_Status_Idle         = 0,\n    Apic_Delivery_Status_Send_Pending = 1\n} apic_delivery_status_t;"
   ]
  ],
  "e:apic_delivery_status_t:Apic_Delivery_Status_Idle;Apic_Delivery_Status_Send_Pending"
 ],
 "apic_destination_mode_t": [
  "devs/apic.h",
  "devs/apic.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Apic_Destination_Mode_Physical = 0,\n    Apic_Destination_Mode_Logical  = 1\n} apic_destination_mode_t;"
   ]
  ],
  "e:apic_destination_mode_t:Apic_Destination_Mode_Physical;Apic_Destination_Mode_Logical"
 ],
 "apic_rr_status_t": [
  "devs/apic.h",
  "devs/apic.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Apic_RR_Invalid = 0,\n    Apic_RR_Pending = 1,\n    Apic_RR_Valid   = 2\n} apic_rr_status_t;"
   ]
  ],
  "e:apic_rr_status_t:Apic_RR_Invalid;Apic_RR_Pending;Apic_RR_Valid"
 ],
 "apic_trigger_mode_t": [
  "devs/apic.h",
  "devs/apic.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Apic_Trigger_Mode_Edge  = 0,\n    Apic_Trigger_Mode_Level = 1\n} apic_trigger_mode_t;"
   ]
  ],
  "e:apic_trigger_mode_t:Apic_Trigger_Mode_Edge;Apic_Trigger_Mode_Level"
 ],
 "arinc429_bus_interface_t": [
  "devs/arinc-429.h",
  "devs/arinc-429.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arinc429_bus_interface {\n    void (*send_word)(conf_object_t *bus, uint32 word, int parity_ok);\n} arinc429_bus_interface_t;"
   ]
  ],
  "s:arinc429_bus_interface_t:send_word"
 ],
 "arinc429_receiver_interface_t": [
  "devs/arinc-429.h",
  "devs/arinc-429.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arinc429_receiver_interface {\n    void (*receive_word)(conf_object_t *dev, uint32 word, int parity_ok);\n} arinc429_receiver_interface_t;"
   ]
  ],
  "s:arinc429_receiver_interface_t:receive_word"
 ],
 "arm_avic_interface_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_avic_interface {\n    arm_avic_t (*get_interrupt_address)(conf_object_t *obj);\n} arm_avic_interface_t;"
   ]
  ],
  "s:arm_avic_interface_t:get_interrupt_address"
 ],
 "arm_avic_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_avic {\n    int valid;\n    uint32 address;\n} arm_avic_t;"
   ]
  ],
  "s:arm_avic_t:valid;address"
 ],
 "arm_coprocessor_interface_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_coprocessor_interface {\n    void (*process_data)(conf_object_t *NOTNULL obj, uint32 CRd, uint32 opcode_1, uint32 CRn, uint32 CRm, uint32 opcode_2, int type);\n    void (*load_coprocessor)(conf_object_t *NOTNULL obj, uint32 CRd, uint32 N, uint32 Options, uint32 value, int type);\n    uint32 (*read_register)(conf_object_t *NOTNULL obj, uint32 opcode_1, uint32 CRn, uint32 CRm, uint32 opcode_2, int type);\n    void (*write_register)(conf_object_t *NOTNULL obj, uint32 value, uint32 opcode_1, uint32 CRn, uint32 CRm, uint32 opcode_2, int type);\n    uint64 (*read_register_64_bit)(conf_object_t *NOTNULL obj, uint32 opcode_1, uint32 CRm, int type);\n    void (*write_register_64_bit)(conf_object_t *NOTNULL obj, uint64 value, uint32 opcode_1, uint32 CRm, int type);\n    uint32 (*store_coprocessor)(conf_object_t *NOTNULL obj, uint32 CRd, uint32 N, uint32 Options, int type);\n    void (*reset)(conf_object_t *NOTNULL obj, int hard_reset);\n} arm_coprocessor_interface_t;"
   ]
  ],
  "s:arm_coprocessor_interface_t:process_data;load_coprocessor;read_register;write_register;read_register_64_bit;write_register_64_bit;store_coprocessor;reset"
 ],
 "arm_cpu_group_event_interface_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_cpu_group_event_interface {\n    void (*signal_event)(conf_object_t *obj);\n} arm_cpu_group_event_interface_t;"
   ]
  ],
  "s:arm_cpu_group_event_interface_t:signal_event"
 ],
 "arm_cpu_group_exclusive_interface_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_cpu_group_exclusive_interface {\n    void (*mark_exclusive)(conf_object_t *obj, physical_address_t address, physical_address_t size);\n    bool (*clear_and_probe_exclusive)(conf_object_t *obj, physical_address_t clear_address, physical_address_t clear_size, physical_address_t probe_address, physical_address_t probe_size);\n} arm_cpu_group_exclusive_interface_t;"
   ]
  ],
  "s:arm_cpu_group_exclusive_interface_t:mark_exclusive;clear_and_probe_exclusive"
 ],
 "arm_cpu_group_tlb_interface_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_cpu_group_tlb_interface {\n    void (*invalidate_tlb)(conf_object_t *obj, arm_translation_regime_t translation_regime, bool by_virtual_address, logical_address_t virtual_address);\n} arm_cpu_group_tlb_interface_t;"
   ]
  ],
  "s:arm_cpu_group_tlb_interface_t:invalidate_tlb"
 ],
 "arm_cpu_state_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_cpu_state {\n    bool fmo_set;\n    bool imo_set;\n    bool irq_set;\n    bool fiq_set;\n    bool ns;\n    int el;\n    uint32 mpidr;\n} arm_cpu_state_t;"
   ]
  ],
  "s:arm_cpu_state_t:fmo_set;imo_set;irq_set;fiq_set;ns;el;mpidr"
 ],
 "arm_device_type_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Arm_DeviceType_nGnRnE  = 0,\n    Arm_DeviceType_nGnRE   = 1,\n    Arm_DeviceType_nGRE    = 2,\n    Arm_DeviceType_GRE     = 3,\n    Arm_DeviceType_Unknown\n} arm_device_type_t;"
   ]
  ],
  "e:arm_device_type_t:Arm_DeviceType_nGnRnE;Arm_DeviceType_nGnRE;Arm_DeviceType_nGRE;Arm_DeviceType_GRE;Arm_DeviceType_Unknown"
 ],
 "arm_external_debug_interface_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_external_debug_interface {\n    void (*handle_semihosting)(conf_object_t *obj);\n    uint64 (*read_reg)(conf_object_t *obj, int offset);\n    void (*write_reg)(conf_object_t *obj, int offset, uint64 v);\n} arm_external_debug_interface_t;"
   ]
  ],
  "s:arm_external_debug_interface_t:handle_semihosting;read_reg;write_reg"
 ],
 "arm_gic_cpu_state_interface_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_gic_cpu_state_interface {\n    arm_cpu_state_t (*get_cpu_state)(conf_object_t *obj);\n} arm_gic_cpu_state_interface_t;"
   ]
  ],
  "s:arm_gic_cpu_state_interface_t:get_cpu_state"
 ],
 "arm_gic_interface_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_gic_interface {\n    uint64 (*read_register)(conf_object_t *obj, gic_reg_info_t reg_info, bool inquiry);\n    void (*write_register)(conf_object_t *obj, gic_reg_info_t reg_info, uint64 value);\n    void (*cpu_state_changed)(conf_object_t *obj, arm_cpu_state_t cpu_state);\n} arm_gic_interface_t;"
   ]
  ],
  "s:arm_gic_interface_t:read_register;write_register;cpu_state_changed"
 ],
 "arm_interface_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_interface {\n    uint64 (*read_register_mode)(conf_object_t *processor_obj, int reg_num, int mode);\n    void (*write_register_mode)(conf_object_t *processor_obj, int reg_num, int mode, uint64 value);\n} arm_interface_t;"
   ]
  ],
  "s:arm_interface_t:read_register_mode;write_register_mode"
 ],
 "arm_mem_attr_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Arm_MemAttr_NC      = 0,\n    Arm_MemAttr_WT      = 2,\n    Arm_MemAttr_WB      = 3,\n    Arm_MemAttr_Unknown\n} arm_mem_attr_t;"
   ]
  ],
  "e:arm_mem_attr_t:Arm_MemAttr_NC;Arm_MemAttr_WT;Arm_MemAttr_WB;Arm_MemAttr_Unknown"
 ],
 "arm_mem_hint_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Arm_MemHint_No      = 0,\n    Arm_MemHint_WA      = 1,\n    Arm_MemHint_RA      = 2,\n    Arm_MemHint_RWA     = 3,\n    Arm_MemHint_Unknown\n} arm_mem_hint_t;"
   ]
  ],
  "e:arm_mem_hint_t:Arm_MemHint_No;Arm_MemHint_WA;Arm_MemHint_RA;Arm_MemHint_RWA;Arm_MemHint_Unknown"
 ],
 "arm_mem_instr_origin_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Instr_Normal_Arm         = 0,\n    Instr_Unprivileged_Load,\n    Instr_Unprivileged_Store,\n    Instr_ldrex,\n    Instr_strex,\n    Instr_ldxp,\n    Instr_stxp,\n    Instr_At,\n    Instr_Atomic,\n    Instr_Cache_Maintenance,\n    Instr_Count\n} arm_mem_instr_origin_t;"
   ]
  ],
  "e:arm_mem_instr_origin_t:Instr_Normal_Arm;Instr_Unprivileged_Load;Instr_Unprivileged_Store;Instr_ldrex;Instr_strex;Instr_ldxp;Instr_stxp;Instr_At;Instr_Atomic;Instr_Cache_Maintenance;Instr_Count"
 ],
 "arm_mem_transient_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Arm_Transient_True,\n    Arm_Transient_False,\n    Arm_Transient_Unknown\n} arm_mem_transient_t;"
   ]
  ],
  "e:arm_mem_transient_t:Arm_Transient_True;Arm_Transient_False;Arm_Transient_Unknown"
 ],
 "arm_mem_type_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Arm_MemType_Normal,\n    Arm_MemType_Device\n} arm_mem_type_t;"
   ]
  ],
  "e:arm_mem_type_t:Arm_MemType_Normal;Arm_MemType_Device"
 ],
 "arm_memory_attributes_encoding_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef union {\n    struct {\n        uint64 memory_type : 2;\n        uint64 device_type : 3;\n        uint64 inner_cacheability : 3;\n        uint64 inner_allocation_hint : 3;\n        uint64 inner_transcience_hint : 2;\n        uint64 outer_cacheability : 3;\n        uint64 outer_allocation_hint : 3;\n        uint64 outer_transcience_hint : 2;\n        uint64 shareable : 1;\n        uint64 outer_shareable : 1;\n    } u;\n    uint64 u64;\n} arm_memory_attributes_encoding_t;"
   ]
  ],
  "u:arm_memory_attributes_encoding_t:u;u64"
 ],
 "arm_memory_transaction_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_memory_transaction {\n    generic_transaction_t s;\n    processor_mode_t mode;\n    int rotate;\n    arm_mem_instr_origin_t instr_origin;\n} arm_memory_transaction_t;"
   ]
  ],
  "s:arm_memory_transaction_t:s;mode;rotate;instr_origin"
 ],
 "arm_smmu_attributes_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef union {\n    struct {\n        uint64 sid : 32;\n        uint64 ssid : 20;\n        uint64 secsid : 1;\n        uint64 ssidv : 1;\n        uint64 atst : 1;\n    } u;\n    uint64 u64;\n} arm_smmu_attributes_t;"
   ]
  ],
  "u:arm_smmu_attributes_t:u;u64"
 ],
 "arm_translation_regime_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Arm_TR_EL3,\n    Arm_TR_EL2,\n    Arm_TR_EL20,\n    Arm_TR_EL10\n} arm_translation_regime_t;"
   ]
  ],
  "e:arm_translation_regime_t:Arm_TR_EL3;Arm_TR_EL2;Arm_TR_EL20;Arm_TR_EL10"
 ],
 "arm_trustzone_interface_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct arm_trustzone_interface {\n    arm_trustzone_mode_t (*get_security_mode)(conf_object_t *NOTNULL obj);\n    arm_trustzone_mode_t (*mem_op_security_mode)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL memop);\n} arm_trustzone_interface_t;"
   ]
  ],
  "s:arm_trustzone_interface_t:get_security_mode;mem_op_security_mode"
 ],
 "arm_trustzone_mode_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Arm_Trustzone_Secure     = 0,\n    Arm_Trustzone_Non_Secure = 1\n} arm_trustzone_mode_t;"
   ]
  ],
  "e:arm_trustzone_mode_t:Arm_Trustzone_Secure;Arm_Trustzone_Non_Secure"
 ],
 "assert_error": [
  "util/help-macros.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void assert_error(int line, const char *file, const char *mod_date, const char *message);"
   ]
  ],
  "f"
 ],
 "atom_id_t": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Atom_Id_illegal                                    = 0,\n    Sim_Atom_Id_list_end,\n    Sim_Atom_Id_flags,\n    Sim_Atom_Id_data,\n    Sim_Atom_Id_size,\n    Sim_Atom_Id_fill_value,\n    Sim_Atom_Id_initiator,\n    Sim_Atom_Id_user_data,\n    Sim_Atom_Id_completion,\n    Sim_Atom_Id_owner,\n    Sim_Atom_Id_memop,\n    Sim_Atom_Id_bytemap,\n    Sim_Atom_Id_trace_atom_access,\n    Sim_Atom_Id_target_type,\n    Sim_Atom_Id_pcie_type                                  = 256,\n    Sim_Atom_Id_pcie_requester_id,\n    Sim_Atom_Id_pcie_msg_type,\n    Sim_Atom_Id_pcie_ecs,\n    Sim_Atom_Id_pcie_msg_route,\n    Sim_Atom_Id_pcie_pasid,\n    Sim_Atom_Id_pcie_at,\n    Sim_Atom_Id_pcie_error_ret,\n    Sim_Atom_Id_pcie_byte_count_ret,\n    Sim_Atom_Id_pcie_device_id,\n    Sim_Atom_Id_pcie_destination_segment,\n    Sim_Atom_Id_pcie_link_negotiation,\n    Sim_Atom_Id_pcie_ats_translation_request_cxl_src,\n    Sim_Atom_Id_pcie_ats_translation_request_no_write,\n    Sim_Atom_Id_pcie_ats_invalidate_request_itag,\n    Sim_Atom_Id_pcie_ats_invalidate_completion_itag_vector,\n    Sim_Atom_Id_pcie_ats_invalidate_completion_count,\n    Sim_Atom_Id_pcie_prs_page_request,\n    Sim_Atom_Id_pcie_prs_page_group_response,\n    Sim_Atom_Id_pcie_prs_stop_marker,\n    Sim_Atom_Id_pcie_requester_segment,\n    Sim_Atom_Id_pcie_ide_secured,\n    Sim_Atom_Id_arm_privileged                             = 512,\n    Sim_Atom_Id_arm_nonsecure,\n    Sim_Atom_Id_arm_memory_attributes,\n    Sim_Atom_Id_arm_smmu_attributes,\n    Sim_Atom_Id_arm_nsaid,\n    Sim_Atom_Id_arm_device_id,\n    Sim_Atom_Id_riscv_wg_wid                               = 768,\n    Sim_Atom_Id_riscv_device_id,\n    Sim_Atom_Id_riscv_process_id,\n    Sim_Atom_Id_riscv_io_error_ret,\n    Sim_Atom_Id_cxl_type                                   = 1024\n} atom_id_t;"
   ]
  ],
  "e:atom_id_t:Sim_Atom_Id_illegal;Sim_Atom_Id_list_end;Sim_Atom_Id_flags;Sim_Atom_Id_data;Sim_Atom_Id_size;Sim_Atom_Id_fill_value;Sim_Atom_Id_initiator;Sim_Atom_Id_user_data;Sim_Atom_Id_completion;Sim_Atom_Id_owner;Sim_Atom_Id_memop;Sim_Atom_Id_bytemap;Sim_Atom_Id_trace_atom_access;Sim_Atom_Id_target_type;Sim_Atom_Id_pcie_type;Sim_Atom_Id_pcie_requester_id;Sim_Atom_Id_pcie_msg_type;Sim_Atom_Id_pcie_ecs;Sim_Atom_Id_pcie_msg_route;Sim_Atom_Id_pcie_pasid;Sim_Atom_Id_pcie_at;Sim_Atom_Id_pcie_error_ret;Sim_Atom_Id_pcie_byte_count_ret;Sim_Atom_Id_pcie_device_id;Sim_Atom_Id_pcie_destination_segment;Sim_Atom_Id_pcie_link_negotiation;Sim_Atom_Id_pcie_ats_translation_request_cxl_src;Sim_Atom_Id_pcie_ats_translation_request_no_write;Sim_Atom_Id_pcie_ats_invalidate_request_itag;Sim_Atom_Id_pcie_ats_invalidate_completion_itag_vector;Sim_Atom_Id_pcie_ats_invalidate_completion_count;Sim_Atom_Id_pcie_prs_page_request;Sim_Atom_Id_pcie_prs_page_group_response;Sim_Atom_Id_pcie_prs_stop_marker;Sim_Atom_Id_pcie_requester_segment;Sim_Atom_Id_pcie_ide_secured;Sim_Atom_Id_arm_privileged;Sim_Atom_Id_arm_nonsecure;Sim_Atom_Id_arm_memory_attributes;Sim_Atom_Id_arm_smmu_attributes;Sim_Atom_Id_arm_nsaid;Sim_Atom_Id_arm_device_id;Sim_Atom_Id_riscv_wg_wid;Sim_Atom_Id_riscv_device_id;Sim_Atom_Id_riscv_process_id;Sim_Atom_Id_riscv_io_error_ret;Sim_Atom_Id_cxl_type"
 ],
 "atom_t": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    atom_id_t id;\n    void *ptr;\n} atom_t;"
   ]
  ],
  "s:atom_t:id;ptr"
 ],
 "atomic_counter_t": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint32 c;\n} atomic_counter_t;"
   ]
  ],
  "s:atomic_counter_t:c"
 ],
 "attr_attr_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Attr_Required        = 0,\n    Sim_Attr_Optional        = 1,\n    Sim_Attr_Pseudo          = 4,\n    Sim_Attr_Integer_Indexed = 0x1000,\n    Sim_Attr_String_Indexed  = 0x2000,\n    Sim_Attr_List_Indexed    = 0x4000,\n    Sim_Attr_Persistent      = 0x20000,\n    Sim_Attr_Flag_Mask       = 255,\n    Sim_Init_Phase_Shift     = 8,\n    Sim_Init_Phase_0         = ...,\n    Sim_Init_Phase_1         = ...,\n    Sim_Init_Phase_Bits      = 2,\n    Sim_Init_Phase_Mask      = ...,\n    Sim_Init_Phase_Pre1      = ...,\n    Sim_Attr_Class           = 0x8000,\n    Sim_Attr_Internal        = 0x10000,\n    Sim_Attr_CB_Data         = 0x200000,\n    Sim_Attr_Legacy          = 0x400000,\n    Sim_Attr_Weak_Ref        = 0x800000,\n    Sim_Attr_Read_Only       = 0x40000,\n    Sim_Attr_Write_Only      = 0x80000\n} attr_attr_t;"
   ]
  ],
  "e:attr_attr_t:Sim_Attr_Required;Sim_Attr_Optional;Sim_Attr_Pseudo;Sim_Attr_Integer_Indexed;Sim_Attr_String_Indexed;Sim_Attr_List_Indexed;Sim_Attr_Persistent;Sim_Attr_Flag_Mask;Sim_Init_Phase_Shift;Sim_Init_Phase_0;Sim_Init_Phase_1;Sim_Init_Phase_Bits;Sim_Init_Phase_Mask;Sim_Init_Phase_Pre1;Sim_Attr_Class;Sim_Attr_Internal;Sim_Attr_CB_Data;Sim_Attr_Legacy;Sim_Attr_Weak_Ref;Sim_Attr_Read_Only;Sim_Attr_Write_Only"
 ],
 "attr_value_t": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct attr_value attr_value_t;"
   ]
  ],
  "s:attr_value_t"
 ],
 "bank_access_t": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct bank_access bank_access_t;"
   ]
  ],
  "s:bank_access_t"
 ],
 "bank_after_read_interface_t": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct bank_after_read_interface {\n    physical_address_t (*offset)(bank_access_t *handle);\n    physical_address_t (*size)(bank_access_t *handle);\n    bool (*missed)(bank_access_t *handle);\n    uint64 (*value)(bank_access_t *handle);\n    void (*set_missed)(bank_access_t *handle, bool missed);\n    void (*set_value)(bank_access_t *handle, uint64 value);\n    conf_object_t *(*initiator)(bank_access_t *handle);\n} bank_after_read_interface_t;"
   ]
  ],
  "s:bank_after_read_interface_t:offset;size;missed;value;set_missed;set_value;initiator"
 ],
 "bank_after_write_interface_t": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct bank_after_write_interface {\n    physical_address_t (*offset)(bank_access_t *handle);\n    physical_address_t (*size)(bank_access_t *handle);\n    bool (*missed)(bank_access_t *handle);\n    void (*set_missed)(bank_access_t *handle, bool missed);\n    conf_object_t *(*initiator)(bank_access_t *handle);\n} bank_after_write_interface_t;"
   ]
  ],
  "s:bank_after_write_interface_t:offset;size;missed;set_missed;initiator"
 ],
 "bank_before_read_interface_t": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct bank_before_read_interface {\n    physical_address_t (*offset)(bank_access_t *handle);\n    physical_address_t (*size)(bank_access_t *handle);\n    void (*set_offset)(bank_access_t *handle, physical_address_t offset);\n    void (*inquire)(bank_access_t *handle);\n    conf_object_t *(*initiator)(bank_access_t *handle);\n} bank_before_read_interface_t;"
   ]
  ],
  "s:bank_before_read_interface_t:offset;size;set_offset;inquire;initiator"
 ],
 "bank_before_write_interface_t": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct bank_before_write_interface {\n    physical_address_t (*offset)(bank_access_t *handle);\n    physical_address_t (*size)(bank_access_t *handle);\n    uint64 (*value)(bank_access_t *handle);\n    void (*suppress)(bank_access_t *handle);\n    void (*set_offset)(bank_access_t *handle, physical_address_t offset);\n    void (*set_value)(bank_access_t *handle, uint64 value);\n    conf_object_t *(*initiator)(bank_access_t *handle);\n} bank_before_write_interface_t;"
   ]
  ],
  "s:bank_before_write_interface_t:offset;size;value;suppress;set_offset;set_value;initiator"
 ],
 "bank_callback_handle_t": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uintptr_t bank_callback_handle_t;"
   ]
  ],
  "t"
 ],
 "bank_instrumentation_subscribe_interface_t": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct bank_instrumentation_subscribe_interface {\n    bank_callback_handle_t (*register_before_read)(conf_object_t *NOTNULL bank, conf_object_t *connection, uint64 offset, uint64 size, before_read_callback_t before_read, lang_void *user_data);\n    bank_callback_handle_t (*register_after_read)(conf_object_t *NOTNULL bank, conf_object_t *connection, uint64 offset, uint64 size, after_read_callback_t after_read, lang_void *user_data);\n    bank_callback_handle_t (*register_before_write)(conf_object_t *NOTNULL bank, conf_object_t *connection, uint64 offset, uint64 size, before_write_callback_t before_write, lang_void *user_data);\n    bank_callback_handle_t (*register_after_write)(conf_object_t *NOTNULL bank, conf_object_t *connection, uint64 offset, uint64 size, after_write_callback_t after_write, lang_void *user_data);\n    void (*remove_callback)(conf_object_t *NOTNULL bank, bank_callback_handle_t callback);\n    void (*remove_connection_callbacks)(conf_object_t *NOTNULL bank, conf_object_t *NOTNULL connection);\n    void (*enable_connection_callbacks)(conf_object_t *NOTNULL bank, conf_object_t *NOTNULL connection);\n    void (*disable_connection_callbacks)(conf_object_t *NOTNULL bank, conf_object_t *NOTNULL connection);\n} bank_instrumentation_subscribe_interface_t;"
   ]
  ],
  "s:bank_instrumentation_subscribe_interface_t:register_before_read;register_after_read;register_before_write;register_after_write;remove_callback;remove_connection_callbacks;enable_connection_callbacks;disable_connection_callbacks"
 ],
 "before_read_callback_t": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*before_read_callback_t)(conf_object_t *connection, bank_before_read_interface_t *access, bank_access_t *handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "before_write_callback_t": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*before_write_callback_t)(conf_object_t *connection, bank_before_write_interface_t *access, bank_access_t *handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "bigtime_add": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bigtime_t bigtime_add(bigtime_t t, duration_t delta);"
   ]
  ],
  "f"
 ],
 "bigtime_add_bigtime": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bigtime_t bigtime_add_bigtime(bigtime_t a, bigtime_t b);"
   ]
  ],
  "f"
 ],
 "bigtime_as_ps_hi": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int64 bigtime_as_ps_hi(bigtime_t t);"
   ]
  ],
  "f"
 ],
 "bigtime_as_ps_int128": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int128 bigtime_as_ps_int128(bigtime_t t);"
   ]
  ],
  "f"
 ],
 "bigtime_as_ps_lo": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 bigtime_as_ps_lo(bigtime_t t);"
   ]
  ],
  "f"
 ],
 "bigtime_as_sec": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline double bigtime_as_sec(bigtime_t t);"
   ]
  ],
  "f"
 ],
 "bigtime_as_string": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "char *bigtime_as_string(bigtime_t t, char *buf);"
   ]
  ],
  "f"
 ],
 "bigtime_diff": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline duration_t bigtime_diff(bigtime_t t1, bigtime_t t2);"
   ]
  ],
  "f"
 ],
 "bigtime_div_floor": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bigtime_t bigtime_div_floor(bigtime_t t, int64 divisor);"
   ]
  ],
  "f"
 ],
 "bigtime_div_raw": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bigtime_t bigtime_div_raw(bigtime_t t, int64 divisor, bool *exact);"
   ]
  ],
  "f"
 ],
 "bigtime_eq": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool bigtime_eq(bigtime_t a, bigtime_t b);"
   ]
  ],
  "f"
 ],
 "bigtime_from_attr": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bigtime_t bigtime_from_attr(attr_value_t a);"
   ]
  ],
  "f"
 ],
 "bigtime_from_ps": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bigtime_t bigtime_from_ps(int64 ps_hi, uint64 ps_lo);"
   ]
  ],
  "f"
 ],
 "bigtime_from_ps_int128": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bigtime_t bigtime_from_ps_int128(int128 ps);"
   ]
  ],
  "f"
 ],
 "bigtime_from_ps_lo": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bigtime_t bigtime_from_ps_lo(int64 ps_lo);"
   ]
  ],
  "f"
 ],
 "bigtime_from_sec": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bigtime_t bigtime_from_sec(double t);"
   ]
  ],
  "f"
 ],
 "bigtime_ge": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool bigtime_ge(bigtime_t a, bigtime_t b);"
   ]
  ],
  "f"
 ],
 "bigtime_gt": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool bigtime_gt(bigtime_t a, bigtime_t b);"
   ]
  ],
  "f"
 ],
 "bigtime_is_illegal": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool bigtime_is_illegal(bigtime_t t);"
   ]
  ],
  "f"
 ],
 "bigtime_le": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool bigtime_le(bigtime_t a, bigtime_t b);"
   ]
  ],
  "f"
 ],
 "bigtime_lt": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool bigtime_lt(bigtime_t a, bigtime_t b);"
   ]
  ],
  "f"
 ],
 "bigtime_mul": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bigtime_t bigtime_mul(bigtime_t t, int64 factor);"
   ]
  ],
  "f"
 ],
 "bigtime_sub": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bigtime_t bigtime_sub(bigtime_t t, duration_t delta);"
   ]
  ],
  "f"
 ],
 "bigtime_sub_bigtime": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bigtime_t bigtime_sub_bigtime(bigtime_t a, bigtime_t b);"
   ]
  ],
  "f"
 ],
 "bigtime_t": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    int128 val;\n} bigtime_t;"
   ]
  ],
  "s:bigtime_t:val"
 ],
 "bigtime_to_attr": [
  "base/bigtime.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t bigtime_to_attr(bigtime_t t);"
   ]
  ],
  "f"
 ],
 "block_flag_t": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Block_Memhier       = 1,\n    Sim_Block_MMU           = 2,\n    Sim_Block_MMU_IOSTC     = 4,\n    Sim_Block_Breakpoint    = 8,\n    Sim_Block_Notmem        = 16,\n    Sim_Block_Endian        = 32,\n    Sim_Block_DSTC_Disabled = 64\n} block_flag_t;"
   ]
  ],
  "e:block_flag_t:Sim_Block_Memhier;Sim_Block_MMU;Sim_Block_MMU_IOSTC;Sim_Block_Breakpoint;Sim_Block_Notmem;Sim_Block_Endian;Sim_Block_DSTC_Disabled"
 ],
 "branch_arc_interface_t": [
  "simulator-iface/address-profiler.h",
  "simulator-iface/address-profiler.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct branch_arc_interface {\n    branch_arc_iter_t *(*iter)(conf_object_t *prof_obj, generic_address_t start, generic_address_t stop, branch_recorder_direction_t dir);\n} branch_arc_interface_t;"
   ]
  ],
  "s:branch_arc_interface_t:iter"
 ],
 "branch_arc_iter_t": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct branch_arc_iter {\n    branch_arc_t *(*next)(struct branch_arc_iter *i);\n    void (*destroy)(struct branch_arc_iter *i);\n} branch_arc_iter_t;"
   ]
  ],
  "s:branch_arc_iter_t:next;destroy"
 ],
 "branch_arc_t": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 addr_from;\n    uint64 addr_to;\n    int64 count;\n    branch_arc_type_t type;\n} branch_arc_t;"
   ]
  ],
  "s:branch_arc_t:addr_from;addr_to;count;type"
 ],
 "branch_arc_type_t": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Branch_Arc_Branch,\n    Branch_Arc_Exception,\n    Branch_Arc_Exception_Return,\n    Branch_Arc_Max\n} branch_arc_type_t;"
   ]
  ],
  "e:branch_arc_type_t:Branch_Arc_Branch;Branch_Arc_Exception;Branch_Arc_Exception_Return;Branch_Arc_Max"
 ],
 "branch_recorder_direction_t": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    BR_Direction_From,\n    BR_Direction_To\n} branch_recorder_direction_t;"
   ]
  ],
  "e:branch_recorder_direction_t:BR_Direction_From;BR_Direction_To"
 ],
 "branch_recorder_handler_interface_t": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct branch_recorder_handler_interface {\n    int (*attach_branch_recorder)(conf_object_t *cpu, conf_object_t *NOTNULL brec);\n    int (*detach_branch_recorder)(conf_object_t *cpu, conf_object_t *NOTNULL brec);\n    void (*create_cpu_branch_recorder)(branch_recorder_t *br);\n    void (*destroy_cpu_branch_recorder)(branch_recorder_t *br);\n    void (*delete_arcs)(branch_recorder_t *br);\n    int (*num_branches)(branch_recorder_t *br);\n    attr_value_t (*get_branches)(branch_recorder_t *br);\n    iter_func_t *iter;\n    branch_arc_iter_t *(*iter_branch_arc)(branch_recorder_t *br, generic_address_t start, generic_address_t stop, branch_recorder_direction_t dir);\n    int (*eec_interrupt_instruction)(conf_object_t *cpu, int extype);\n    unsigned granularity_log2;\n    const char **view_descriptions;\n    int num_views;\n    int pa_bits;\n    int va_bits;\n} branch_recorder_handler_interface_t;"
   ]
  ],
  "s:branch_recorder_handler_interface_t:attach_branch_recorder;detach_branch_recorder;create_cpu_branch_recorder;destroy_cpu_branch_recorder;delete_arcs;num_branches;get_branches;iter;iter_branch_arc;eec_interrupt_instruction;granularity_log2;view_descriptions;num_views;pa_bits;va_bits"
 ],
 "branch_recorder_t": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct branch_recorder branch_recorder_t;"
   ]
  ],
  "s:branch_recorder_t"
 ],
 "break_net_cb_t": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int (*break_net_cb_t)(conf_object_t *obj, bytes_t data, int len, int64 break_id);"
   ]
  ],
  "t"
 ],
 "break_string_cb_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int (*break_string_cb_t)(conf_object_t *obj, const char *str, int64 break_id, lang_void *arg);"
   ]
  ],
  "t"
 ],
 "break_strings_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct break_strings_interface {\n    int64 (*add)(conf_object_t *NOTNULL obj, const char *str, break_string_cb_t cb, lang_void *arg);\n    int64 (*add_single)(conf_object_t *NOTNULL obj, const char *str, break_string_cb_t cb, lang_void *arg);\n    void (*remove)(conf_object_t *NOTNULL obj, int64 bp_id);\n} break_strings_interface_t;"
   ]
  ],
  "s:break_strings_interface_t:add;add_single;remove"
 ],
 "break_strings_v2_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct break_strings_v2_interface {\n    int64 (*add)(conf_object_t *NOTNULL obj, const char *str, break_string_cb_t cb, lang_void *arg);\n    int64 (*add_single)(conf_object_t *NOTNULL obj, const char *str, break_string_cb_t cb, lang_void *arg);\n    int64 (*add_regexp)(conf_object_t *NOTNULL obj, const char *str, break_string_cb_t cb, lang_void *arg);\n    void (*remove)(conf_object_t *NOTNULL obj, int64 bp_id);\n} break_strings_v2_interface_t;"
   ]
  ],
  "s:break_strings_v2_interface_t:add;add_single;add_regexp;remove"
 ],
 "breakpoint_change_interface_t": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct breakpoint_change_interface {\n    void (*breakpoint_added)(conf_object_t *obj, conf_object_t *bp_obj, breakpoint_handle_t handle);\n    void (*breakpoint_removed)(conf_object_t *obj, conf_object_t *bp_obj, breakpoint_handle_t handle);\n} breakpoint_change_interface_t;"
   ]
  ],
  "s:breakpoint_change_interface_t:breakpoint_added;breakpoint_removed"
 ],
 "breakpoint_flag_t": [
  "simulator/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum breakpoint_flag {\n    Sim_Breakpoint_Temporary  = 1,\n    Sim_Breakpoint_Simulation = 2,\n    Sim_Breakpoint_Private    = 4\n} breakpoint_flag_t;"
   ]
  ],
  "e:breakpoint_flag_t:Sim_Breakpoint_Temporary;Sim_Breakpoint_Simulation;Sim_Breakpoint_Private"
 ],
 "breakpoint_handle_t": [
  "base/breakpoints.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uintptr_t breakpoint_handle_t;"
   ]
  ],
  "t"
 ],
 "breakpoint_id_t": [
  "base/breakpoints.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int breakpoint_id_t;"
   ]
  ],
  "t"
 ],
 "breakpoint_info_t": [
  "base/breakpoints.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    breakpoint_handle_t handle;\n    access_t read_write_execute;\n    generic_address_t start;\n    generic_address_t end;\n} breakpoint_info_t;"
   ]
  ],
  "s:breakpoint_info_t:handle;read_write_execute;start;end"
 ],
 "breakpoint_interface_t": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct breakpoint_interface {\n    void (*insert_breakpoint)(conf_object_t *object, conf_object_t *caller, breakpoint_handle_t handle, access_t access, generic_address_t start, generic_address_t end);\n    void (*remove_breakpoint)(conf_object_t *object, breakpoint_handle_t handle);\n    breakpoint_info_t (*get_breakpoint)(conf_object_t *obj, breakpoint_handle_t handle);\n} breakpoint_interface_t;"
   ]
  ],
  "s:breakpoint_interface_t:insert_breakpoint;remove_breakpoint;get_breakpoint"
 ],
 "breakpoint_kind_t": [
  "base/breakpoints.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Break_Physical = 0,\n    Sim_Break_Virtual  = 1,\n    Sim_Break_Linear   = 2\n} breakpoint_kind_t;"
   ]
  ],
  "e:breakpoint_kind_t:Sim_Break_Physical;Sim_Break_Virtual;Sim_Break_Linear"
 ],
 "breakpoint_manager_interface_t": [
  "simulator-iface/breakpoint-manager.h",
  "simulator-iface/breakpoint-manager.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct breakpoint_manager_interface {\n    attr_value_t (*list_breakpoints)(conf_object_t *NOTNULL mgr);\n    void (*delete_breakpoint)(conf_object_t *NOTNULL mgr, uint64 id);\n    attr_value_t (*get_properties)(conf_object_t *NOTNULL mgr, uint64 id);\n    bool (*set_enabled)(conf_object_t *NOTNULL mgr, uint64 id, bool enabled);\n    bool (*set_temporary)(conf_object_t *NOTNULL mgr, uint64 id, bool temporary);\n    bool (*set_ignore_count)(conf_object_t *NOTNULL mgr, uint64 id, uint64 ignore_count);\n} breakpoint_manager_interface_t;"
   ]
  ],
  "s:breakpoint_manager_interface_t:list_breakpoints;delete_breakpoint;get_properties;set_enabled;set_temporary;set_ignore_count"
 ],
 "breakpoint_query_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct breakpoint_query_interface {\n    breakpoint_set_t (*get_breakpoints)(conf_object_t *obj, access_t read_write_execute, generic_address_t start, generic_address_t end);\n    void (*free_breakpoint_set)(conf_object_t *obj, breakpoint_set_t *set);\n} breakpoint_query_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:breakpoint_query_interface_t:get_breakpoints;free_breakpoint_set"
 ],
 "breakpoint_query_v2_interface_t": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct breakpoint_query_v2_interface {\n    breakpoint_set_t (*get_breakpoints)(conf_object_t *obj, access_t read_write_execute, generic_address_t start, generic_address_t end);\n} breakpoint_query_v2_interface_t;"
   ]
  ],
  "s:breakpoint_query_v2_interface_t:get_breakpoints"
 ],
 "breakpoint_registration_interface_t": [
  "simulator-iface/breakpoint-manager.h",
  "simulator-iface/breakpoint-manager.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct breakpoint_registration_interface {\n    uint64 (*register_breakpoint)(conf_object_t *NOTNULL mgr, void (*delete_breakpoint)(cbdata_call_t data, uint64 id), cbdata_register_t delete_data, attr_value_t (*get_properties)(cbdata_call_t data, uint64 id), cbdata_register_t get_properties_data, void (*set_enabled)(cbdata_call_t data, uint64 id, bool enabled), cbdata_register_t set_enabled_data, void (*set_temporary)(cbdata_call_t data, uint64 id, bool temporary), cbdata_register_t set_temporary_data, void (*set_ignore_count)(cbdata_call_t data, uint64 id, uint64 ignore_count), cbdata_register_t set_ignore_count_data);\n    void (*deleted)(conf_object_t *NOTNULL mgr, uint64 id);\n} breakpoint_registration_interface_t;"
   ]
  ],
  "s:breakpoint_registration_interface_t:register_breakpoint;deleted"
 ],
 "breakpoint_set_t": [
  "base/breakpoints.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    int num_breakpoints;\n    breakpoint_info_t *breakpoints;\n} breakpoint_set_t;"
   ]
  ],
  "s:breakpoint_set_t:num_breakpoints;breakpoints"
 ],
 "breakpoint_trigger_interface_t": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct breakpoint_trigger_interface {\n    void (*trigger_breakpoint)(conf_object_t *obj, conf_object_t *initiator_obj, breakpoint_handle_t handle, generic_address_t address, generic_address_t size, access_t access, uint8 *data);\n} breakpoint_trigger_interface_t;"
   ]
  ],
  "s:breakpoint_trigger_interface_t:trigger_breakpoint"
 ],
 "breakpoint_type_interface_t": [
  "simulator-iface/breakpoint-manager.h",
  "simulator-iface/breakpoint-manager.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct breakpoint_type_interface {\n    bool (*register_type)(conf_object_t *NOTNULL mgr, const char *NOTNULL name, conf_object_t *NOTNULL provider, attr_value_t args, const char *cls, const char *iface, attr_value_t docs, bool object_required, bool temporary_default, bool recursive);\n    bool (*trigger)(conf_object_t *NOTNULL mgr, conf_object_t *NOTNULL provider, uint64 bp_id, conf_object_t *trigger, const char *msg);\n    uint64 (*get_break_id)(conf_object_t *NOTNULL mgr, uint64 bm_id);\n    uint64 (*get_manager_id)(conf_object_t *NOTNULL mgr, conf_object_t *NOTNULL provider, uint64 bp_id);\n} breakpoint_type_interface_t;"
   ]
  ],
  "s:breakpoint_type_interface_t:register_type;trigger;get_break_id;get_manager_id"
 ],
 "breakpoint_type_provider_interface_t": [
  "simulator-iface/breakpoint-manager.h",
  "simulator-iface/breakpoint-manager.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct breakpoint_type_provider_interface {\n    uint64 (*register_bp)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    uint64 (*add_bp)(conf_object_t *NOTNULL obj, int flags, attr_value_t data);\n    void (*remove_bp)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    char *(*trace_msg)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    char *(*break_msg)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    char *(*wait_msg)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    attr_value_t (*break_data)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    attr_value_t (*values)(conf_object_t *NOTNULL obj, const char *arg, attr_value_t prev_args);\n    void (*trace)(conf_object_t *NOTNULL obj, const char *msg);\n} breakpoint_type_provider_interface_t;"
   ]
  ],
  "s:breakpoint_type_provider_interface_t:register_bp;add_bp;remove_bp;trace_msg;break_msg;wait_msg;break_data;values;trace"
 ],
 "bridge_interface_t": [
  "devs/memory-space.h",
  "devs/memory-space.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct bridge_interface {\n    exception_type_t (*not_taken)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL src_space, conf_object_t *NOTNULL dst_space, exception_type_t ex, generic_transaction_t *NOTNULL mem_op, map_info_t mapinfo);\n} bridge_interface_t;"
   ]
  ],
  "s:bridge_interface_t:not_taken"
 ],
 "buffer_bytes": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bytes_t buffer_bytes(buffer_t buf);"
   ]
  ],
  "f"
 ],
 "buffer_t": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint8 *data;\n    size_t len;\n} buffer_t;"
   ]
  ],
  "s:buffer_t:data;len"
 ],
 "byte_string_t": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    size_t len;\n    uint8 *str;\n} byte_string_t;"
   ]
  ],
  "s:byte_string_t:len;str"
 ],
 "bytes_t": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    const uint8 *data;\n    size_t len;\n} bytes_t;"
   ]
  ],
  "s:bytes_t:data;len"
 ],
 "cache_control_interface_t": [
  "model-iface/cache.h",
  "model-iface/cache.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cache_control_interface {\n    cycles_t (*cache_control)(conf_object_t *cache, cache_control_operation_t op, generic_transaction_t *mem_op);\n} cache_control_interface_t;"
   ]
  ],
  "s:cache_control_interface_t:cache_control"
 ],
 "cache_control_operation_t": [
  "model-iface/cache.h",
  "model-iface/cache.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Cache_Control_Nop,\n    Cache_Control_Fetch_Line,\n    Cache_Control_Invalidate_Line,\n    Cache_Control_Copyback_Line,\n    Cache_Control_Invalidate_Cache\n} cache_control_operation_t;"
   ]
  ],
  "e:cache_control_operation_t:Cache_Control_Nop;Cache_Control_Fetch_Line;Cache_Control_Invalidate_Line;Cache_Control_Copyback_Line;Cache_Control_Invalidate_Cache"
 ],
 "cached_instruction_handle_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cached_instruction_data cached_instruction_handle_t;"
   ]
  ],
  "s:cached_instruction_handle_t"
 ],
 "callback_info_interface_t": [
  "model-iface/instrumentation-provider.h",
  "model-iface/instrumentation-provider.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct callback_info_interface {\n    attr_value_t (*get_callbacks)(conf_object_t *obj);\n} callback_info_interface_t;"
   ]
  ],
  "s:callback_info_interface_t:get_callbacks"
 ],
 "cancel_id_error_t": [
  "simulator-iface/osa-types.h",
  "simulator-iface/osa-types.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Cancel_Error_ID = 0\n} cancel_id_error_t;"
   ]
  ],
  "e:cancel_id_error_t:Cancel_Error_ID"
 ],
 "cancel_id_t": [
  "simulator-iface/osa-types.h",
  "simulator-iface/osa-types.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 cancel_id_t;"
   ]
  ],
  "t"
 ],
 "cbdata_call_t": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef cbdata_t cbdata_call_t;"
   ]
  ],
  "s:cbdata_t"
 ],
 "cbdata_register_t": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef cbdata_t cbdata_register_t;"
   ]
  ],
  "s:cbdata_t"
 ],
 "cbdata_t": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cbdata cbdata_t;"
   ]
  ],
  "s:cbdata_t"
 ],
 "cbdata_type_t": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    const char *name;\n    void (*dealloc)(void *data);\n} cbdata_type_t;"
   ]
  ],
  "s:cbdata_type_t:name;dealloc"
 ],
 "cdrom_media_interface_t": [
  "model-iface/cdrom.h",
  "model-iface/cdrom.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cdrom_media_interface {\n    int (*read_toc)(conf_object_t *media, uint8 *buf, int msf, int start_track);\n    uint32 (*capacity)(conf_object_t *media);\n    int (*read_block)(conf_object_t *media, uint8 *buf, int lba);\n    int (*read_raw_block)(conf_object_t *media, uint8 *buf, int lba);\n    int (*insert)(conf_object_t *media);\n    void (*eject)(conf_object_t *media);\n} cdrom_media_interface_t;"
   ]
  ],
  "s:cdrom_media_interface_t:read_toc;capacity;read_block;read_raw_block;insert;eject"
 ],
 "cell_inspection_interface_t": [
  "model-iface/execute.h",
  "model-iface/execute.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cell_inspection_interface {\n    void (*set_current_processor_obj)(conf_object_t *obj, conf_object_t *cpu_obj);\n    void (*set_current_step_obj)(conf_object_t *obj, conf_object_t *step_obj);\n} cell_inspection_interface_t;"
   ]
  ],
  "s:cell_inspection_interface_t:set_current_processor_obj;set_current_step_obj"
 ],
 "checkpoint_interface_t": [
  "simulator-iface/checkpoint.h",
  "simulator-iface/checkpoint.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct checkpoint_interface {\n    void (*save)(conf_object_t *obj, const char *NOTNULL path);\n    void (*finish)(conf_object_t *obj, int success);\n    int (*has_persistent_data)(conf_object_t *obj);\n    void (*save_v2)(conf_object_t *obj, const char *NOTNULL path, save_flags_t flags);\n} checkpoint_interface_t;"
   ]
  ],
  "s:checkpoint_interface_t:save;finish;has_persistent_data;save_v2"
 ],
 "class_data_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct class_data {\n    conf_object_t *(*alloc_object)(lang_void *data);\n    lang_void *(*init_object)(conf_object_t *obj, lang_void *data);\n    void (*finalize_instance)(conf_object_t *obj);\n    void (*pre_delete_instance)(conf_object_t *obj);\n    int (*delete_instance)(conf_object_t *obj);\n    const char *description;\n    const char *class_desc;\n    class_kind_t kind;\n} class_data_t;"
   ]
  ],
  "s:class_data_t:alloc_object;init_object;finalize_instance;pre_delete_instance;delete_instance;description;class_desc;kind"
 ],
 "class_info_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct class_info {\n    conf_object_t *(*alloc)(conf_class_t *cls);\n    lang_void *(*init)(conf_object_t *obj);\n    void (*finalize)(conf_object_t *obj);\n    void (*objects_finalized)(conf_object_t *obj);\n    void (*deinit)(conf_object_t *obj);\n    void (*dealloc)(conf_object_t *obj);\n    const char *description;\n    const char *short_desc;\n    class_kind_t kind;\n} class_info_t;"
   ]
  ],
  "s:class_info_t:alloc;init;finalize;objects_finalized;deinit;dealloc;description;short_desc;kind"
 ],
 "class_interface_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void class_interface_t;"
   ]
  ],
  "t"
 ],
 "class_kind_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Class_Kind_Vanilla   = 0,\n    Sim_Class_Kind_Session   = 1,\n    Sim_Class_Kind_Pseudo    = 2,\n    Sim_Class_Kind_Extension = 3\n} class_kind_t;"
   ]
  ],
  "e:class_kind_t:Sim_Class_Kind_Vanilla;Sim_Class_Kind_Session;Sim_Class_Kind_Pseudo;Sim_Class_Kind_Extension"
 ],
 "cmd_line_frontend_interface_t": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cmd_line_frontend_interface {\n    void (*write)(conf_object_t *obj, const char *NOTNULL str);\n    void (*delete_line)(conf_object_t *obj);\n    void (*disconnect)(conf_object_t *obj);\n    void (*cursor_left)(conf_object_t *obj, int num);\n    void (*cursor_right)(conf_object_t *obj, int num);\n    void (*clear_screen)(conf_object_t *obj);\n    void (*prompt_end)(conf_object_t *obj, int pos);\n    void (*bell)(conf_object_t *obj);\n} cmd_line_frontend_interface_t;"
   ]
  ],
  "s:cmd_line_frontend_interface_t:write;delete_line;disconnect;cursor_left;cursor_right;clear_screen;prompt_end;bell"
 ],
 "cmd_line_id_t": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int cmd_line_id_t;"
   ]
  ],
  "t"
 ],
 "cmd_line_key_t": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Cmd_Line_Key_Left,\n    Cmd_Line_Key_Right,\n    Cmd_Line_Key_Up,\n    Cmd_Line_Key_Down,\n    Cmd_Line_Key_PgUp,\n    Cmd_Line_Key_PgDn,\n    Cmd_Line_Key_Home,\n    Cmd_Line_Key_End,\n    Cmd_Line_Key_Back,\n    Cmd_Line_Key_Tab,\n    Cmd_Line_Key_Enter,\n    Cmd_Line_Key_Del,\n    Cmd_Line_Key_Ins,\n    Cmd_Line_Key_F1,\n    Cmd_Line_Key_F2,\n    Cmd_Line_Key_F3,\n    Cmd_Line_Key_F4,\n    Cmd_Line_Key_F5,\n    Cmd_Line_Key_F6,\n    Cmd_Line_Key_F7,\n    Cmd_Line_Key_F8,\n    Cmd_Line_Key_F9,\n    Cmd_Line_Key_F10,\n    Cmd_Line_Key_F11,\n    Cmd_Line_Key_F12\n} cmd_line_key_t;"
   ]
  ],
  "e:cmd_line_key_t:Cmd_Line_Key_Left;Cmd_Line_Key_Right;Cmd_Line_Key_Up;Cmd_Line_Key_Down;Cmd_Line_Key_PgUp;Cmd_Line_Key_PgDn;Cmd_Line_Key_Home;Cmd_Line_Key_End;Cmd_Line_Key_Back;Cmd_Line_Key_Tab;Cmd_Line_Key_Enter;Cmd_Line_Key_Del;Cmd_Line_Key_Ins;Cmd_Line_Key_F1;Cmd_Line_Key_F2;Cmd_Line_Key_F3;Cmd_Line_Key_F4;Cmd_Line_Key_F5;Cmd_Line_Key_F6;Cmd_Line_Key_F7;Cmd_Line_Key_F8;Cmd_Line_Key_F9;Cmd_Line_Key_F10;Cmd_Line_Key_F11;Cmd_Line_Key_F12"
 ],
 "cmd_line_mod_t": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Cmd_Line_Mod_None,\n    Cmd_Line_Mod_Shift = 1,\n    Cmd_Line_Mod_Ctrl  = 2,\n    Cmd_Line_Mod_Alt   = 4\n} cmd_line_mod_t;"
   ]
  ],
  "e:cmd_line_mod_t:Cmd_Line_Mod_None;Cmd_Line_Mod_Shift;Cmd_Line_Mod_Ctrl;Cmd_Line_Mod_Alt"
 ],
 "cmd_line_selection_interface_t": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cmd_line_selection_interface {\n    void (*new_selection)(conf_object_t *obj, int x, int y);\n    void (*to_clipboard)(conf_object_t *obj, const char *NOTNULL str);\n} cmd_line_selection_interface_t;"
   ]
  ],
  "s:cmd_line_selection_interface_t:new_selection;to_clipboard"
 ],
 "co_execute_interface_t": [
  "model-iface/co-execute.h",
  "model-iface/co-execute.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct co_execute_interface {\n    void (*start_thread)(conf_object_t *NOTNULL obj, void (*entry)(lang_void *arg), lang_void *arg);\n    void (*yield)(conf_object_t *NOTNULL obj);\n} co_execute_interface_t;"
   ]
  ],
  "s:co_execute_interface_t:start_thread;yield"
 ],
 "column_key_t": [
  "simulator-iface/table.h",
  "simulator-iface/table.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Column_Key_Name                        = 1000,\n    Column_Key_Description,\n    Column_Key_Alignment,\n    Column_Key_Int_Radix,\n    Column_Key_Float_Percent,\n    Column_Key_Float_Decimals,\n    Column_Key_Sort_Descending,\n    Column_Key_Hide_Homogeneous,\n    Column_Key_Generate_Percent_Column,\n    Column_Key_Generate_Acc_Percent_Column,\n    Column_Key_Footer_Sum,\n    Column_Key_Footer_Mean,\n    Column_Key_Int_Grouping,\n    Column_Key_Int_Pad_Width,\n    Column_Key_Metric_Prefix,\n    Column_Key_Binary_Prefix,\n    Column_Key_Time_Format,\n    Column_Key_Unique_Id,\n    Column_Key_Width,\n    Column_Key_Word_Delimiters\n} column_key_t;"
   ]
  ],
  "e:column_key_t:Column_Key_Name;Column_Key_Description;Column_Key_Alignment;Column_Key_Int_Radix;Column_Key_Float_Percent;Column_Key_Float_Decimals;Column_Key_Sort_Descending;Column_Key_Hide_Homogeneous;Column_Key_Generate_Percent_Column;Column_Key_Generate_Acc_Percent_Column;Column_Key_Footer_Sum;Column_Key_Footer_Mean;Column_Key_Int_Grouping;Column_Key_Int_Pad_Width;Column_Key_Metric_Prefix;Column_Key_Binary_Prefix;Column_Key_Time_Format;Column_Key_Unique_Id;Column_Key_Width;Column_Key_Word_Delimiters"
 ],
 "completion_t": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct completion completion_t;"
   ]
  ],
  "s:completion_t"
 ],
 "component_connector_interface_t": [
  "model-iface/components.h",
  "model-iface/components.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct component_connector_interface {\n    attr_value_t (*get_check_data)(conf_object_t *obj, conf_object_t *NOTNULL connector);\n    attr_value_t (*get_connect_data)(conf_object_t *obj, conf_object_t *NOTNULL connector);\n    bool (*check)(conf_object_t *obj, conf_object_t *NOTNULL connector, attr_value_t attr);\n    void (*connect)(conf_object_t *obj, conf_object_t *NOTNULL connector, attr_value_t attr);\n    void (*disconnect)(conf_object_t *obj, conf_object_t *NOTNULL connector);\n} component_connector_interface_t;"
   ]
  ],
  "s:component_connector_interface_t:get_check_data;get_connect_data;check;connect;disconnect"
 ],
 "component_interface_t": [
  "model-iface/components.h",
  "model-iface/components.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct component_interface {\n    bool (*pre_instantiate)(conf_object_t *obj);\n    void (*post_instantiate)(conf_object_t *obj);\n    bool (*create_cell)(conf_object_t *obj);\n    attr_value_t (*get_slots)(conf_object_t *obj);\n    attr_value_t (*get_slot_objects)(conf_object_t *obj);\n    attr_value_t (*get_slot_value)(conf_object_t *obj, const char *NOTNULL slot);\n    void (*set_slot_value)(conf_object_t *obj, const char *NOTNULL slot, attr_value_t value);\n    bool (*has_slot)(conf_object_t *obj, const char *NOTNULL slot);\n    bool (*add_slot)(conf_object_t *obj, const char *NOTNULL slot);\n    bool (*del_slot)(conf_object_t *obj, const char *NOTNULL slot);\n} component_interface_t;"
   ]
  ],
  "s:component_interface_t:pre_instantiate;post_instantiate;create_cell;get_slots;get_slot_objects;get_slot_value;set_slot_value;has_slot;add_slot;del_slot"
 ],
 "con_input_code_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct con_input_code_interface {\n    void (*input)(conf_object_t *NOTNULL obj, sim_key_t code, bool down);\n} con_input_code_interface_t;"
   ]
  ],
  "s:con_input_code_interface_t:input"
 ],
 "con_input_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct con_input_interface {\n    void (*input_str)(conf_object_t *NOTNULL obj, const char *str);\n    void (*input_data)(conf_object_t *NOTNULL obj, bytes_t data);\n} con_input_interface_t;"
   ]
  ],
  "s:con_input_interface_t:input_str;input_data"
 ],
 "concurrency_group_interface_t": [
  "model-iface/concurrency.h",
  "model-iface/concurrency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct concurrency_group_interface {\n    attr_value_t (*serialized_memory_group)(conf_object_t *NOTNULL obj, unsigned group_index);\n    attr_value_t (*execution_group)(conf_object_t *NOTNULL obj, unsigned group_index);\n} concurrency_group_interface_t;"
   ]
  ],
  "s:concurrency_group_interface_t:serialized_memory_group;execution_group"
 ],
 "concurrency_mode_interface_t": [
  "model-iface/concurrency.h",
  "model-iface/concurrency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct concurrency_mode_interface {\n    concurrency_mode_t (*supported_modes)(conf_object_t *NOTNULL obj);\n    concurrency_mode_t (*current_mode)(conf_object_t *NOTNULL obj);\n    void (*switch_mode)(conf_object_t *NOTNULL obj, concurrency_mode_t mode);\n} concurrency_mode_interface_t;"
   ]
  ],
  "s:concurrency_mode_interface_t:supported_modes;current_mode;switch_mode"
 ],
 "concurrency_mode_t": [
  "model-iface/concurrency.h",
  "model-iface/concurrency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Concurrency_Mode_Serialized        = 1,\n    Sim_Concurrency_Mode_Serialized_Memory = 2,\n    Sim_Concurrency_Mode_Full              = 4\n} concurrency_mode_t;"
   ]
  ],
  "e:concurrency_mode_t:Sim_Concurrency_Mode_Serialized;Sim_Concurrency_Mode_Serialized_Memory;Sim_Concurrency_Mode_Full"
 ],
 "conf_class_t": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct conf_class conf_class_t;"
   ]
  ],
  "s:conf_class_t"
 ],
 "conf_object_t": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct conf_object conf_object_t;"
   ]
  ],
  "s:conf_object_t"
 ],
 "connector_direction_t": [
  "model-iface/components.h",
  "model-iface/components.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Connector_Direction_Up,\n    Sim_Connector_Direction_Down,\n    Sim_Connector_Direction_Any\n} connector_direction_t;"
   ]
  ],
  "e:connector_direction_t:Sim_Connector_Direction_Up;Sim_Connector_Direction_Down;Sim_Connector_Direction_Any"
 ],
 "connector_interface_t": [
  "model-iface/components.h",
  "model-iface/components.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct connector_interface {\n    char *(*type)(conf_object_t *obj);\n    bool (*hotpluggable)(conf_object_t *obj);\n    bool (*required)(conf_object_t *obj);\n    bool (*multi)(conf_object_t *obj);\n    connector_direction_t (*direction)(conf_object_t *obj);\n    bool (*add_destination)(conf_object_t *obj, conf_object_t *connector);\n    bool (*remove_destination)(conf_object_t *obj, conf_object_t *connector);\n    attr_value_t (*destination)(conf_object_t *obj);\n    void (*update)(conf_object_t *obj);\n    bool (*check)(conf_object_t *obj, attr_value_t attr);\n    void (*connect)(conf_object_t *obj, attr_value_t attr);\n    void (*disconnect)(conf_object_t *obj);\n    bool (*deletion_requested)(conf_object_t *obj);\n} connector_interface_t;"
   ]
  ],
  "s:connector_interface_t:type;hotpluggable;required;multi;direction;add_destination;remove_destination;destination;update;check;connect;disconnect;deletion_requested"
 ],
 "context_handler_interface_t": [
  "simulator-iface/context-tracker.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct context_handler_interface {\n    conf_object_t *(*get_current_context)(conf_object_t *obj);\n    int (*set_current_context)(conf_object_t *obj, conf_object_t *ctx);\n} context_handler_interface_t;"
   ]
  ],
  "s:context_handler_interface_t:get_current_context;set_current_context"
 ],
 "controllable_cache_t": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    conf_object_t *obj;\n    const cache_control_interface_t *ifc;\n} controllable_cache_t;"
   ]
  ],
  "s:controllable_cache_t:obj;ifc"
 ],
 "cpu_access_scope_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    CPU_Access_Scope_Explicit,\n    CPU_Access_Scope_Implicit\n} cpu_access_scope_t;"
   ]
  ],
  "e:cpu_access_scope_t:CPU_Access_Scope_Explicit;CPU_Access_Scope_Implicit"
 ],
 "cpu_address_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef logical_address_t (*cpu_address_cb_t)(conf_object_t *obj, conf_object_t *cpu, logical_address_t address, address_handle_t *handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_bytes_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_bytes {\n    size_t size;\n    const uint8 *data;\n} cpu_bytes_t;"
   ]
  ],
  "s:cpu_bytes_t:size;data"
 ],
 "cpu_cached_instruction_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*cpu_cached_instruction_cb_t)(conf_object_t *obj, conf_object_t *cpu, cached_instruction_handle_t *ci_handle, instruction_handle_t *iq_handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_cached_instruction_interface_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_cached_instruction_interface {\n    void (*register_instruction_before_cb)(conf_object_t *cpu, cached_instruction_handle_t *ci_handle, cpu_instruction_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_instruction_after_cb)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_instruction_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_read_before_cb)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_memory_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_read_after_cb)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_memory_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_write_before_cb)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_memory_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_write_after_cb)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_memory_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*add_counter)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, uint64 *counter, bool use_atomic_increment);\n} cpu_cached_instruction_interface_t;"
   ]
  ],
  "s:cpu_cached_instruction_interface_t:register_instruction_before_cb;register_instruction_after_cb;register_read_before_cb;register_read_after_cb;register_write_before_cb;register_write_after_cb;add_counter"
 ],
 "cpu_cached_instruction_once_interface_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_cached_instruction_once_interface {\n    void (*register_instruction_before_once_cb)(conf_object_t *cpu, cached_instruction_handle_t *ci_handle, cpu_instruction_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_instruction_after_once_cb)(conf_object_t *cpu, cached_instruction_handle_t *ci_handle, cpu_instruction_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n} cpu_cached_instruction_once_interface_t;"
   ]
  ],
  "s:cpu_cached_instruction_once_interface_t:register_instruction_before_once_cb;register_instruction_after_once_cb"
 ],
 "cpu_cached_stream_interface_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_cached_stream_interface {\n    void (*add_stream)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_stream_bits_t bits, cpu_stream_data_t **data, uint64 user_data);\n} cpu_cached_stream_interface_t;"
   ]
  ],
  "s:cpu_cached_stream_interface_t:add_stream"
 ],
 "cpu_callback_free_user_data_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*cpu_callback_free_user_data_cb_t)(conf_object_t *obj, conf_object_t *cpu, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_cb_handle_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef _cpu_instrumentation_entry_t cpu_cb_handle_t;"
   ]
  ],
  "s:_cpu_instrumentation_entry_t"
 ],
 "cpu_control_register_read_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*cpu_control_register_read_cb_t)(conf_object_t *obj, conf_object_t *cpu, int register_number, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_control_register_scope_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    CPU_Control_Register_All = ...\n} cpu_control_register_scope_t;"
   ]
  ],
  "e:cpu_control_register_scope_t:CPU_Control_Register_All"
 ],
 "cpu_control_register_write_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*cpu_control_register_write_cb_t)(conf_object_t *obj, conf_object_t *cpu, int register_number, uint64 value, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_emulation_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef cpu_emulation_t (*cpu_emulation_cb_t)(conf_object_t *obj, conf_object_t *cpu, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_emulation_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    CPU_Emulation_Fall_Through,\n    CPU_Emulation_Control_Flow,\n    CPU_Emulation_Default_Semantics,\n    CPU_Emulation_Stall\n} cpu_emulation_t;"
   ]
  ],
  "e:cpu_emulation_t:CPU_Emulation_Fall_Through;CPU_Emulation_Control_Flow;CPU_Emulation_Default_Semantics;CPU_Emulation_Stall"
 ],
 "cpu_endian_t": [
  "processor/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Endian_Little,\n    Sim_Endian_Big\n} cpu_endian_t;"
   ]
  ],
  "e:cpu_endian_t:Sim_Endian_Little;Sim_Endian_Big"
 ],
 "cpu_exception_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*cpu_exception_cb_t)(conf_object_t *obj, conf_object_t *cpu, exception_handle_t *exception_handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_exception_query_interface_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_exception_query_interface {\n    int (*exception_number)(conf_object_t *cpu, exception_handle_t *handle);\n    logical_address_t (*fault_pc)(conf_object_t *cpu, exception_handle_t *handle);\n} cpu_exception_query_interface_t;"
   ]
  ],
  "s:cpu_exception_query_interface_t:exception_number;fault_pc"
 ],
 "cpu_exception_return_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*cpu_exception_return_cb_t)(conf_object_t *obj, conf_object_t *cpu, exception_return_handle_t *exception_handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_exception_scope_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    CPU_Exception_All = ...\n} cpu_exception_scope_t;"
   ]
  ],
  "e:cpu_exception_scope_t:CPU_Exception_All"
 ],
 "cpu_group_interface_t": [
  "model-iface/cpu-group.h",
  "model-iface/cpu-group.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_group_interface {\n    const cpu_list_t *(*get_cpu_list)(conf_object_t *cpu_group);\n} cpu_group_interface_t;"
   ]
  ],
  "s:cpu_group_interface_t:get_cpu_list"
 ],
 "cpu_instruction_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*cpu_instruction_cb_t)(conf_object_t *obj, conf_object_t *cpu, instruction_handle_t *handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_instruction_decoder_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int (*cpu_instruction_decoder_cb_t)(conf_object_t *obj, conf_object_t *cpu, decoder_handle_t *decoder_handle, instruction_handle_t *iq_handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_instruction_decoder_interface_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_instruction_decoder_interface {\n    void (*register_emulation_cb)(conf_object_t *cpu, cpu_emulation_cb_t cb, decoder_handle_t *handle, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n} cpu_instruction_decoder_interface_t;"
   ]
  ],
  "s:cpu_instruction_decoder_interface_t:register_emulation_cb"
 ],
 "cpu_instruction_disassemble_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef tuple_int_string_t (*cpu_instruction_disassemble_cb_t)(conf_object_t *obj, conf_object_t *cpu, generic_address_t addr, cpu_bytes_t bytes);"
   ]
  ],
  "t"
 ],
 "cpu_instruction_query_interface_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_instruction_query_interface {\n    logical_address_t (*logical_address)(conf_object_t *cpu, instruction_handle_t *handle);\n    physical_address_t (*physical_address)(conf_object_t *cpu, instruction_handle_t *handle);\n    cpu_bytes_t (*get_instruction_bytes)(conf_object_t *cpu, instruction_handle_t *handle);\n} cpu_instruction_query_interface_t;"
   ]
  ],
  "s:cpu_instruction_query_interface_t:logical_address;physical_address;get_instruction_bytes"
 ],
 "cpu_instrumentation_stream_interface_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_instrumentation_stream_interface {\n    cpu_stream_handle_t *(*add_stream)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_stream_bits_t bits, cpu_stream_data_t **data, cpu_access_scope_t scope);\n    void (*remove_stream)(conf_object_t *cpu, cpu_stream_handle_t *handle);\n} cpu_instrumentation_stream_interface_t;"
   ]
  ],
  "s:cpu_instrumentation_stream_interface_t:add_stream;remove_stream"
 ],
 "cpu_instrumentation_subscribe_interface_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_instrumentation_subscribe_interface {\n    void (*remove_callback)(conf_object_t *NOTNULL cpu, cpu_cb_handle_t *handle);\n    void (*enable_callback)(conf_object_t *NOTNULL cpu, cpu_cb_handle_t *handle);\n    void (*disable_callback)(conf_object_t *NOTNULL cpu, cpu_cb_handle_t *handle);\n    void (*remove_connection_callbacks)(conf_object_t *NOTNULL cpu, conf_object_t *NOTNULL connection);\n    void (*enable_connection_callbacks)(conf_object_t *NOTNULL cpu, conf_object_t *NOTNULL connection);\n    void (*disable_connection_callbacks)(conf_object_t *NOTNULL cpu, conf_object_t *NOTNULL connection);\n    cpu_cb_handle_t *(*register_instruction_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_instruction_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_instruction_after_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_instruction_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_read_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_access_scope_t scope, cpu_memory_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_read_after_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_access_scope_t scope, cpu_memory_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_write_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_access_scope_t scope, cpu_memory_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_write_after_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_access_scope_t scope, cpu_memory_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_address_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_address_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_cached_instruction_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_cached_instruction_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_instruction_decoder_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_instruction_decoder_cb_t cb, cpu_instruction_disassemble_cb_t disass_cb, lang_void *data);\n    cpu_cb_handle_t *(*register_exception_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, int exception_number, cpu_exception_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_exception_after_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, int exception_number, cpu_exception_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_exception_return_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_exception_return_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_exception_return_after_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_exception_return_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_mode_change_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_mode_change_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_control_register_read_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, int register_number, cpu_control_register_read_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_control_register_write_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, int register_number, cpu_control_register_write_cb_t cb, lang_void *data);\n} cpu_instrumentation_subscribe_interface_t;"
   ]
  ],
  "s:cpu_instrumentation_subscribe_interface_t:remove_callback;enable_callback;disable_callback;remove_connection_callbacks;enable_connection_callbacks;disable_connection_callbacks;register_instruction_before_cb;register_instruction_after_cb;register_read_before_cb;register_read_after_cb;register_write_before_cb;register_write_after_cb;register_address_before_cb;register_cached_instruction_cb;register_instruction_decoder_cb;register_exception_before_cb;register_exception_after_cb;register_exception_return_before_cb;register_exception_return_after_cb;register_mode_change_cb;register_control_register_read_before_cb;register_control_register_write_before_cb"
 ],
 "cpu_list_t": [
  "model-iface/cpu-group.h",
  "model-iface/cpu-group.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    int size;\n    int used;\n    conf_object_t **elements;\n} cpu_list_t;"
   ]
  ],
  "s:cpu_list_t:size;used;elements"
 ],
 "cpu_memory_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*cpu_memory_cb_t)(conf_object_t *obj, conf_object_t *cpu, memory_handle_t *handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_memory_query_interface_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_memory_query_interface {\n    logical_address_t (*logical_address)(conf_object_t *cpu, memory_handle_t *handle);\n    physical_address_t (*physical_address)(conf_object_t *cpu, memory_handle_t *handle);\n    void (*set_host_ptr)(conf_object_t *cpu, memory_handle_t *handle, void *p);\n    cpu_bytes_t (*get_bytes)(conf_object_t *cpu, memory_handle_t *handle);\n    void (*set_bytes)(conf_object_t *cpu, memory_handle_t *handle, cpu_bytes_t bytes);\n    bool (*atomic)(conf_object_t *obj, memory_handle_t *handle);\n    ini_type_t (*arch)(conf_object_t *obj, memory_handle_t *handle);\n    page_crossing_info_t (*get_page_crossing_info)(conf_object_t *obj, memory_handle_t *handle);\n    buffer_t (*get_surrounding_bytes)(conf_object_t *cpu, memory_handle_t *handle, unsigned granularity_log2);\n} cpu_memory_query_interface_t;"
   ]
  ],
  "s:cpu_memory_query_interface_t:logical_address;physical_address;set_host_ptr;get_bytes;set_bytes;atomic;arch;get_page_crossing_info;get_surrounding_bytes"
 ],
 "cpu_mode_change_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*cpu_mode_change_cb_t)(conf_object_t *obj, conf_object_t *cpu, processor_mode_t old_mode, processor_mode_t new_mode, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cpu_stream_bits_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 cpu_stream_bits_t;"
   ]
  ],
  "t"
 ],
 "cpu_stream_data_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 tag;\n    uint64 data;\n} cpu_stream_data_t;"
   ]
  ],
  "s:cpu_stream_data_t:tag;data"
 ],
 "cpu_stream_enum_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    CPU_Stream_Instruction_PA,\n    CPU_Stream_Instruction_VA,\n    CPU_Stream_Instruction_VA_After,\n    CPU_Stream_Read_PA,\n    CPU_Stream_Read_VA,\n    CPU_Stream_Write_PA,\n    CPU_Stream_Write_VA,\n    CPU_Stream_Read_Bytes,\n    CPU_Stream_Written_Bytes,\n    CPU_Stream_Address_VA,\n    CPU_Stream_Object,\n    CPU_Stream_Opcode               = 17,\n    CPU_Stream_Local                = 32,\n    CPU_Stream_User_Data            = 63\n} cpu_stream_enum_t;"
   ]
  ],
  "e:cpu_stream_enum_t:CPU_Stream_Instruction_PA;CPU_Stream_Instruction_VA;CPU_Stream_Instruction_VA_After;CPU_Stream_Read_PA;CPU_Stream_Read_VA;CPU_Stream_Write_PA;CPU_Stream_Write_VA;CPU_Stream_Read_Bytes;CPU_Stream_Written_Bytes;CPU_Stream_Address_VA;CPU_Stream_Object;CPU_Stream_Opcode;CPU_Stream_Local;CPU_Stream_User_Data"
 ],
 "cpu_stream_handle_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef _cpu_instrumentation_entry_t cpu_stream_handle_t;"
   ]
  ],
  "s:_cpu_instrumentation_entry_t"
 ],
 "cpuid_ret_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    int taken;\n    uint64 out_a;\n    uint64 out_b;\n    uint64 out_c;\n    uint64 out_d;\n} cpuid_ret_t;"
   ]
  ],
  "s:cpuid_ret_t:taken;out_a;out_b;out_c;out_d"
 ],
 "cpuid_value_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 a;\n    uint64 b;\n    uint64 c;\n    uint64 d;\n} cpuid_value_t;"
   ]
  ],
  "s:cpuid_value_t:a;b;c;d"
 ],
 "cxl_map_interface_t": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cxl_map_interface {\n    void (*add_map)(conf_object_t *obj, conf_object_t *map_obj, map_info_t info, cxl_type_t type);\n    void (*del_map)(conf_object_t *obj, conf_object_t *map_obj, physical_address_t base, cxl_type_t type);\n} cxl_map_interface_t;"
   ]
  ],
  "s:cxl_map_interface_t:add_map;del_map"
 ],
 "cxl_mbox_cmd_rc_t": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    CXL_MBOX_CMD_RC_SUCCESS                               = 0,\n    CXL_MBOX_CMD_RC_BACKGROUND_COMMAND_STARTED            = 1,\n    CXL_MBOX_CMD_RC_INVALID_INPUT                         = 2,\n    CXL_MBOX_CMD_RC_UNSUPPORTED                           = 3,\n    CXL_MBOX_CMD_RC_INTERNAL_ERROR                        = 4,\n    CXL_MBOX_CMD_RC_RETRY_REQUIRED                        = 5,\n    CXL_MBOX_CMD_RC_BUSY                                  = 6,\n    CXL_MBOX_CMD_RC_MEDIA_DISABLED                        = 7,\n    CXL_MBOX_CMD_RC_FW_TRANSFER_IN_PROGRESS               = 8,\n    CXL_MBOX_CMD_RC_FW_TRANSFER_OUT_OF_ORDER              = 9,\n    CXL_MBOX_CMD_RC_FW_AUTHENTICATION_FAILED              = 10,\n    CXL_MBOX_CMD_RC_INVALID_SLOT                          = 11,\n    CXL_MBOX_CMD_RC_ACTIVATION_FAILED_FW_ROLLED_BACK      = 12,\n    CXL_MBOX_CMD_RC_ACTIVATION_FAILED_COLD_RESET_REQUIRED = 13,\n    CXL_MBOX_CMD_RC_INVALID_HANDLE                        = 14,\n    CXL_MBOX_CMD_RC_INVALID_PHYSICAL_ADDRESS              = 15,\n    CXL_MBOX_CMD_RC_INJECT_POISON_LIMIT_REACHED           = 16,\n    CXL_MBOX_CMD_RC_PERMANENT_MEDIA_FAILURE               = 17,\n    CXL_MBOX_CMD_RC_ABORTED                               = 18,\n    CXL_MBOX_CMD_RC_INVALID_SECURITY_STATE                = 19,\n    CXL_MBOX_CMD_RC_INCORRECT_PASSPHRASE                  = 20,\n    CXL_MBOX_CMD_RC_UNSUPPORTED_MAILBOX                   = 21,\n    CXL_MBOX_CMD_RC_INVALID_PAYLOAD_LENGTH                = 22\n} cxl_mbox_cmd_rc_t;"
   ]
  ],
  "e:cxl_mbox_cmd_rc_t:CXL_MBOX_CMD_RC_SUCCESS;CXL_MBOX_CMD_RC_BACKGROUND_COMMAND_STARTED;CXL_MBOX_CMD_RC_INVALID_INPUT;CXL_MBOX_CMD_RC_UNSUPPORTED;CXL_MBOX_CMD_RC_INTERNAL_ERROR;CXL_MBOX_CMD_RC_RETRY_REQUIRED;CXL_MBOX_CMD_RC_BUSY;CXL_MBOX_CMD_RC_MEDIA_DISABLED;CXL_MBOX_CMD_RC_FW_TRANSFER_IN_PROGRESS;CXL_MBOX_CMD_RC_FW_TRANSFER_OUT_OF_ORDER;CXL_MBOX_CMD_RC_FW_AUTHENTICATION_FAILED;CXL_MBOX_CMD_RC_INVALID_SLOT;CXL_MBOX_CMD_RC_ACTIVATION_FAILED_FW_ROLLED_BACK;CXL_MBOX_CMD_RC_ACTIVATION_FAILED_COLD_RESET_REQUIRED;CXL_MBOX_CMD_RC_INVALID_HANDLE;CXL_MBOX_CMD_RC_INVALID_PHYSICAL_ADDRESS;CXL_MBOX_CMD_RC_INJECT_POISON_LIMIT_REACHED;CXL_MBOX_CMD_RC_PERMANENT_MEDIA_FAILURE;CXL_MBOX_CMD_RC_ABORTED;CXL_MBOX_CMD_RC_INVALID_SECURITY_STATE;CXL_MBOX_CMD_RC_INCORRECT_PASSPHRASE;CXL_MBOX_CMD_RC_UNSUPPORTED_MAILBOX;CXL_MBOX_CMD_RC_INVALID_PAYLOAD_LENGTH"
 ],
 "cxl_mbox_op_t": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    CXL_MBOX_OP_INVALID                                        = 0,\n    CXL_MBOX_OP_GET_EVENT_RECORD                               = 256,\n    CXL_MBOX_OP_CLEAR_EVENT_RECORD                             = 257,\n    CXL_MBOX_OP_GET_EVT_INT_POLICY                             = 258,\n    CXL_MBOX_OP_SET_EVT_INT_POLICY                             = 259,\n    CXL_MBOX_OP_GET_FW_INFO                                    = 512,\n    CXL_MBOX_OP_TRANSFER_FW                                    = 513,\n    CXL_MBOX_OP_ACTIVATE_FW                                    = 514,\n    CXL_MBOX_OP_GET_TIMESTAMP                                  = 768,\n    CXL_MBOX_OP_SET_TIMESTAMP                                  = 769,\n    CXL_MBOX_OP_GET_SUPPORTED_LOGS                             = 1024,\n    CXL_MBOX_OP_GET_LOG                                        = 0x401,\n    CXL_MBOX_OP_IDENTIFY                                       = 0x4000,\n    CXL_MBOX_OP_GET_PARTITION_INFO                             = 0x4100,\n    CXL_MBOX_OP_SET_PARTITION_INFO                             = 0x4101,\n    CXL_MBOX_OP_GET_LSA                                        = 0x4102,\n    CXL_MBOX_OP_SET_LSA                                        = 0x4103,\n    CXL_MBOX_OP_GET_HEALTH_INFO                                = 0x4200,\n    CXL_MBOX_OP_GET_ALERT_CONFIG                               = 0x4201,\n    CXL_MBOX_OP_SET_ALERT_CONFIG                               = 0x4202,\n    CXL_MBOX_OP_GET_SHUTDOWN_STATE                             = 0x4203,\n    CXL_MBOX_OP_SET_SHUTDOWN_STATE                             = 0x4204,\n    CXL_MBOX_OP_GET_POISON                                     = 0x4300,\n    CXL_MBOX_OP_INJECT_POISON                                  = 0x4301,\n    CXL_MBOX_OP_CLEAR_POISON                                   = 0x4302,\n    CXL_MBOX_OP_GET_SCAN_MEDIA_CAPS                            = 0x4303,\n    CXL_MBOX_OP_SCAN_MEDIA                                     = 0x4304,\n    CXL_MBOX_OP_GET_SCAN_MEDIA                                 = 0x4305,\n    CXL_MBOX_OP_SANITIZE                                       = 0x4400,\n    CXL_MBOX_OP_SECURE_ERASE                                   = 0x4401,\n    CXL_MBOX_OP_GET_SECURITY_STATE                             = 0x4500,\n    CXL_MBOX_OP_SET_PASSPHRASE                                 = 0x4501,\n    CXL_MBOX_OP_DISABLE_PASSPHRASE                             = 0x4502,\n    CXL_MBOX_OP_UNLOCK                                         = 0x4503,\n    CXL_MBOX_OP_FREEZE_SECURITY                                = 0x4504,\n    CXL_MBOX_OP_PASSPHRASE_SECURE_ERASE                        = 0x4505,\n    CXL_MBOX_OP_SECURITY_SEND                                  = 0x4600,\n    CXL_MBOX_OP_SECURITY_RECEIVE                               = 0x4601,\n    CXL_MBOX_OP_GET_SLD_QOS_CONTROL                            = 0x4700,\n    CXL_MBOX_OP_SET_SLD_QOS_CONTROL                            = 0x4701,\n    CXL_MBOX_OP_GET_SLD_QOS_STATUS                             = 0x4702,\n    CXL_MBOX_OP_EVENT_NOTIFICATION                             = 0x5000,\n    CXL_MBOX_OP_IDENTIFY_SWITCH_DEVICE                         = 0x5100,\n    CXL_MBOX_OP_GET_PHYSICAL_PORT_STATE                        = 0x5101,\n    CXL_MBOX_OP_PHYSICAL_PORT_CONTROL                          = 0x5102,\n    CXL_MBOX_OP_SEND_PPB_CXL_IO_CONFIGURATION_REQUEST_PHYSICAL = 0x5103,\n    CXL_MBOX_OP_GET_VIRTUAL_CXL_SWITCH_INFO                    = 0x5200,\n    CXL_MBOX_OP_BIND_VPPB                                      = 0x5201,\n    CXL_MBOX_OP_UNBIND_VPPB                                    = 0x5202,\n    CXL_MBOX_OP_GENERATE_AER_EVENT                             = 0x5203,\n    CXL_MBOX_OP_TUNNEL_MANAGEMENT_COMMAND                      = 0x5300,\n    CXL_MBOX_OP_SEND_PPB_CXL_IO_CONFIGURATION_REQUEST_MLD      = 0x5301,\n    CXL_MBOX_OP_SEND_PPB_CXL_IO_MEMORY_REQUEST                 = 0x5302,\n    CXL_MBOX_OP_GET_LD_INFO                                    = 0x5400,\n    CXL_MBOX_OP_GET_LD_ALLOCATIONS                             = 0x5401,\n    CXL_MBOX_OP_SET_LD_ALLOCATIONS                             = 0x5402,\n    CXL_MBOX_OP_GET_QOS_CONTROL                                = 0x5403,\n    CXL_MBOX_OP_SET_QOS_CONTROL                                = 0x5404,\n    CXL_MBOX_OP_GET_QOS_STATUS                                 = 0x5405,\n    CXL_MBOX_OP_GET_QOS_ALLOCATED_BW                           = 0x5406,\n    CXL_MBOX_OP_SET_QOS_ALLOCATED_BW                           = 0x5407,\n    CXL_MBOX_OP_GET_QOS_BW_LIMIT                               = 0x5408,\n    CXL_MBOX_OP_SET_QOS_BW_LIMIT                               = 0x5409\n} cxl_mbox_op_t;"
   ]
  ],
  "e:cxl_mbox_op_t:CXL_MBOX_OP_INVALID;CXL_MBOX_OP_GET_EVENT_RECORD;CXL_MBOX_OP_CLEAR_EVENT_RECORD;CXL_MBOX_OP_GET_EVT_INT_POLICY;CXL_MBOX_OP_SET_EVT_INT_POLICY;CXL_MBOX_OP_GET_FW_INFO;CXL_MBOX_OP_TRANSFER_FW;CXL_MBOX_OP_ACTIVATE_FW;CXL_MBOX_OP_GET_TIMESTAMP;CXL_MBOX_OP_SET_TIMESTAMP;CXL_MBOX_OP_GET_SUPPORTED_LOGS;CXL_MBOX_OP_GET_LOG;CXL_MBOX_OP_IDENTIFY;CXL_MBOX_OP_GET_PARTITION_INFO;CXL_MBOX_OP_SET_PARTITION_INFO;CXL_MBOX_OP_GET_LSA;CXL_MBOX_OP_SET_LSA;CXL_MBOX_OP_GET_HEALTH_INFO;CXL_MBOX_OP_GET_ALERT_CONFIG;CXL_MBOX_OP_SET_ALERT_CONFIG;CXL_MBOX_OP_GET_SHUTDOWN_STATE;CXL_MBOX_OP_SET_SHUTDOWN_STATE;CXL_MBOX_OP_GET_POISON;CXL_MBOX_OP_INJECT_POISON;CXL_MBOX_OP_CLEAR_POISON;CXL_MBOX_OP_GET_SCAN_MEDIA_CAPS;CXL_MBOX_OP_SCAN_MEDIA;CXL_MBOX_OP_GET_SCAN_MEDIA;CXL_MBOX_OP_SANITIZE;CXL_MBOX_OP_SECURE_ERASE;CXL_MBOX_OP_GET_SECURITY_STATE;CXL_MBOX_OP_SET_PASSPHRASE;CXL_MBOX_OP_DISABLE_PASSPHRASE;CXL_MBOX_OP_UNLOCK;CXL_MBOX_OP_FREEZE_SECURITY;CXL_MBOX_OP_PASSPHRASE_SECURE_ERASE;CXL_MBOX_OP_SECURITY_SEND;CXL_MBOX_OP_SECURITY_RECEIVE;CXL_MBOX_OP_GET_SLD_QOS_CONTROL;CXL_MBOX_OP_SET_SLD_QOS_CONTROL;CXL_MBOX_OP_GET_SLD_QOS_STATUS;CXL_MBOX_OP_EVENT_NOTIFICATION;CXL_MBOX_OP_IDENTIFY_SWITCH_DEVICE;CXL_MBOX_OP_GET_PHYSICAL_PORT_STATE;CXL_MBOX_OP_PHYSICAL_PORT_CONTROL;CXL_MBOX_OP_SEND_PPB_CXL_IO_CONFIGURATION_REQUEST_PHYSICAL;CXL_MBOX_OP_GET_VIRTUAL_CXL_SWITCH_INFO;CXL_MBOX_OP_BIND_VPPB;CXL_MBOX_OP_UNBIND_VPPB;CXL_MBOX_OP_GENERATE_AER_EVENT;CXL_MBOX_OP_TUNNEL_MANAGEMENT_COMMAND;CXL_MBOX_OP_SEND_PPB_CXL_IO_CONFIGURATION_REQUEST_MLD;CXL_MBOX_OP_SEND_PPB_CXL_IO_MEMORY_REQUEST;CXL_MBOX_OP_GET_LD_INFO;CXL_MBOX_OP_GET_LD_ALLOCATIONS;CXL_MBOX_OP_SET_LD_ALLOCATIONS;CXL_MBOX_OP_GET_QOS_CONTROL;CXL_MBOX_OP_SET_QOS_CONTROL;CXL_MBOX_OP_GET_QOS_STATUS;CXL_MBOX_OP_GET_QOS_ALLOCATED_BW;CXL_MBOX_OP_SET_QOS_ALLOCATED_BW;CXL_MBOX_OP_GET_QOS_BW_LIMIT;CXL_MBOX_OP_SET_QOS_BW_LIMIT"
 ],
 "cxl_mem_downstream_port_managing_interface_t": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cxl_mem_downstream_port_managing_interface {\n    bool (*register_port_mem_obj)(conf_object_t *obj, uint8 port_number, conf_object_t *port_mem_obj);\n    void (*unregister_port_mem_obj)(conf_object_t *obj, uint8 port_number);\n} cxl_mem_downstream_port_managing_interface_t;"
   ]
  ],
  "s:cxl_mem_downstream_port_managing_interface_t:register_port_mem_obj;unregister_port_mem_obj"
 ],
 "cxl_non_device_decoder_handling_interface_t": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cxl_non_device_decoder_handling_interface {\n    int (*enable_decoder)(conf_object_t *obj, uint8 index, uint8 ig, uint8 iw, uint64 base, uint64 size, uint64 target_list);\n    int (*disable_decoder)(conf_object_t *obj, uint8 decoder_index);\n} cxl_non_device_decoder_handling_interface_t;"
   ]
  ],
  "s:cxl_non_device_decoder_handling_interface_t:enable_decoder;disable_decoder"
 ],
 "cxl_type_t": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    CXL_Type_Not_Set,\n    CXL_Type_Io,\n    CXL_Type_Mem,\n    CXL_Type_Cache,\n    CXL_Type_Other\n} cxl_type_t;"
   ]
  ],
  "e:cxl_type_t:CXL_Type_Not_Set;CXL_Type_Io;CXL_Type_Mem;CXL_Type_Cache;CXL_Type_Other"
 ],
 "cycle_control_interface_t": [
  "model-iface/cycle-event.h",
  "model-iface/cycle-event.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cycle_control_interface {\n    void (*stop)(conf_object_t *NOTNULL obj);\n    void (*start)(conf_object_t *NOTNULL obj);\n    void (*set_cycle_count)(conf_object_t *NOTNULL obj, cycles_t cycle_count);\n} cycle_control_interface_t;"
   ]
  ],
  "s:cycle_control_interface_t:stop;start;set_cycle_count"
 ],
 "cycle_event_cb_t": [
  "model-iface/event-instrumentation.h",
  "model-iface/event-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*cycle_event_cb_t)(conf_object_t *obj, conf_object_t *step_obj, conf_object_t *event_obj, cycles_t cycles, const char *event_class_name, const char *description, attr_value_t value, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "cycle_event_instrumentation_interface_t": [
  "model-iface/event-instrumentation.h",
  "model-iface/event-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cycle_event_instrumentation_interface {\n    cycle_handle_t *(*register_cycle_event_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cycle_event_cb_t cb, lang_void *data);\n    void (*remove_cycle_event_cb)(conf_object_t *cpu, cycle_handle_t *handle);\n} cycle_event_instrumentation_interface_t;"
   ]
  ],
  "s:cycle_event_instrumentation_interface_t:register_cycle_event_cb;remove_cycle_event_cb"
 ],
 "cycle_event_interface_t": [
  "model-iface/cycle-event.h",
  "model-iface/cycle-event.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cycle_event_interface {\n    cycles_t (*cycles)(conf_object_t *NOTNULL obj);\n    void (*post)(conf_object_t *NOTNULL obj, const event_class_t *NOTNULL evclass, conf_object_t *NOTNULL ev_obj, cycles_t cycles, lang_void *param);\n    void (*cancel)(conf_object_t *NOTNULL obj, const event_class_t *NOTNULL evclass, conf_object_t *NOTNULL ev_obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    cycles_t (*lookup)(conf_object_t *NOTNULL obj, const event_class_t *NOTNULL evclass, conf_object_t *NOTNULL ev_obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    attr_value_t (*events)(conf_object_t *NOTNULL obj);\n} cycle_event_interface_t;"
   ]
  ],
  "s:cycle_event_interface_t:cycles;post;cancel;lookup;events"
 ],
 "cycle_handle_t": [
  "model-iface/event-instrumentation.h",
  "model-iface/event-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct clock_instrumentation cycle_handle_t;"
   ]
  ],
  "s:cycle_handle_t"
 ],
 "cycle_interface_t": [
  "model-iface/cycle.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cycle_interface {\n    cycles_t (*get_cycle_count)(conf_object_t *queue);\n    double (*get_time)(conf_object_t *queue);\n    cycles_t (*cycles_delta)(conf_object_t *NOTNULL clock, double when);\n    uint64 (*get_frequency)(conf_object_t *queue);\n    void (*post_cycle)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, cycles_t cycles, lang_void *user_data);\n    void (*post_time)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, double seconds, lang_void *user_data);\n    void (*cancel)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    cycles_t (*find_next_cycle)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    double (*find_next_time)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    attr_value_t (*events)(conf_object_t *NOTNULL obj);\n    local_time_t (*get_time_in_ps)(conf_object_t *queue);\n    cycles_t (*cycles_delta_from_ps)(conf_object_t *NOTNULL clock, local_time_t when);\n    void (*post_time_in_ps)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, duration_t picoseconds, lang_void *user_data);\n    duration_t (*find_next_time_in_ps)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n} cycle_interface_t;"
   ]
  ],
  "s:cycle_interface_t:get_cycle_count;get_time;cycles_delta;get_frequency;post_cycle;post_time;cancel;find_next_cycle;find_next_time;events;get_time_in_ps;cycles_delta_from_ps;post_time_in_ps;find_next_time_in_ps"
 ],
 "cycles_t": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef simtime_t cycles_t;"
   ]
  ],
  "t"
 ],
 "data_or_instr_t": [
  "processor/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_DI_Instruction = 0,\n    Sim_DI_Data        = 1\n} data_or_instr_t;"
   ]
  ],
  "e:data_or_instr_t:Sim_DI_Instruction;Sim_DI_Data"
 ],
 "data_profiler_flush_t": [
  "processor/data-profiler.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*data_profiler_flush_t)(conf_object_t *profiler, void *param);"
   ]
  ],
  "t"
 ],
 "data_profiler_interface_t": [
  "model-iface/data-profiler.h",
  "model-iface/data-profiler.h",
  [
   [
    [
     "6"
    ],
    "typedef struct data_profiler_interface {\n    uint64 (*accum_in_range)(conf_object_t *profiler, uint64 start, uint64 end);\n    void (*save)(conf_object_t *profiler, const char *NOTNULL file);\n    void (*load)(conf_object_t *profiler, const char *NOTNULL file);\n    void (*clear)(conf_object_t *profiler);\n    void *(*get_prof_data)(conf_object_t *profiler);\n} data_profiler_interface_t;"
   ],
   [
    [
     "7"
    ],
    "typedef struct data_profiler_interface {\n    uint64 (*_deprecated_accum_in_range)(conf_object_t *profiler, uint64 start, uint64 end);\n    void (*save)(conf_object_t *profiler, const char *NOTNULL file);\n    void (*load)(conf_object_t *profiler, const char *NOTNULL file);\n    void (*clear)(conf_object_t *profiler);\n    void *(*get_prof_data)(conf_object_t *profiler);\n} data_profiler_interface_t;"
   ]
  ],
  "s:data_profiler_interface_t:_deprecated_accum_in_range;save;load;clear;get_prof_data"
 ],
 "datagram_link_interface_t": [
  "devs/datagram-link.h",
  "devs/datagram-link.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct datagram_link_interface {\n    void (*receive)(conf_object_t *NOTNULL obj, bytes_t msg);\n} datagram_link_interface_t;"
   ]
  ],
  "s:datagram_link_interface_t:receive"
 ],
 "dbuffer_append": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_append(dbuffer_t *dbuffer, size_t len);"
   ]
  ],
  "f"
 ],
 "dbuffer_append_data": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void dbuffer_append_data(dbuffer_t *buf, const void *data, size_t nmemb);"
   ]
  ],
  "f"
 ],
 "dbuffer_append_external_data": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_append_external_data(dbuffer_t *dbuffer, void *data, size_t len, bool adopt);"
   ]
  ],
  "f"
 ],
 "dbuffer_append_value": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_append_value(dbuffer_t *dbuffer, int value, size_t len);"
   ]
  ],
  "f"
 ],
 "dbuffer_bytes": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bytes_t dbuffer_bytes(dbuffer_t *dbuffer);"
   ]
  ],
  "f"
 ],
 "dbuffer_clear": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void dbuffer_clear(dbuffer_t *dbuffer);"
   ]
  ],
  "f"
 ],
 "dbuffer_clone": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "dbuffer_t *dbuffer_clone(dbuffer_t *dbuffer);"
   ]
  ],
  "f"
 ],
 "dbuffer_copy_append": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void dbuffer_copy_append(dbuffer_t *dst, dbuffer_t *src, size_t offset, size_t len);"
   ]
  ],
  "f"
 ],
 "dbuffer_copy_prepend": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void dbuffer_copy_prepend(dbuffer_t *dst, dbuffer_t *src, size_t offset, size_t len);"
   ]
  ],
  "f"
 ],
 "dbuffer_free": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void dbuffer_free(dbuffer_t *dbuffer);"
   ]
  ],
  "f"
 ],
 "dbuffer_insert": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_insert(dbuffer_t *dbuffer, size_t offset, size_t len);"
   ]
  ],
  "f"
 ],
 "dbuffer_len": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "size_t dbuffer_len(const dbuffer_t *dbuffer);"
   ]
  ],
  "f"
 ],
 "dbuffer_prepend": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_prepend(dbuffer_t *dbuffer, size_t len);"
   ]
  ],
  "f"
 ],
 "dbuffer_prepend_external_data": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_prepend_external_data(dbuffer_t *dbuffer, void *data, size_t len, bool adopt);"
   ]
  ],
  "f"
 ],
 "dbuffer_prepend_value": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_prepend_value(dbuffer_t *dbuffer, int value, size_t len);"
   ]
  ],
  "f"
 ],
 "dbuffer_read": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const uint8 *dbuffer_read(dbuffer_t *dbuffer, size_t offset, size_t len);"
   ]
  ],
  "f"
 ],
 "dbuffer_read_all": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const uint8 *dbuffer_read_all(dbuffer_t *dbuffer);"
   ]
  ],
  "f"
 ],
 "dbuffer_read_some": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "const uint8 *dbuffer_read_some(dbuffer_t *dbuffer, size_t offset, size_t len, size_t *actual_len);"
   ]
  ],
  "f"
 ],
 "dbuffer_remove": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void dbuffer_remove(dbuffer_t *dbuffer, size_t offset, size_t remove_len);"
   ]
  ],
  "f"
 ],
 "dbuffer_remove_head": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void dbuffer_remove_head(dbuffer_t *dbuffer, size_t remove_len);"
   ]
  ],
  "f"
 ],
 "dbuffer_remove_tail": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void dbuffer_remove_tail(dbuffer_t *dbuffer, size_t remove_len);"
   ]
  ],
  "f"
 ],
 "dbuffer_replace": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_replace(dbuffer_t *dbuffer, size_t offset, size_t len);"
   ]
  ],
  "f"
 ],
 "dbuffer_replace_all": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_replace_all(dbuffer_t *dbuffer);"
   ]
  ],
  "f"
 ],
 "dbuffer_replace_some": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_replace_some(dbuffer_t *dbuffer, size_t offset, size_t len, size_t *actual_len);"
   ]
  ],
  "f"
 ],
 "dbuffer_set": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void dbuffer_set(dbuffer_t *dbuffer, int val, size_t len);"
   ]
  ],
  "f"
 ],
 "dbuffer_split": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "dbuffer_t *dbuffer_split(dbuffer_t *dbuffer, size_t offset);"
   ]
  ],
  "f"
 ],
 "dbuffer_t": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct dbuffer dbuffer_t;"
   ]
  ],
  "s:dbuffer_t"
 ],
 "dbuffer_truncate": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void dbuffer_truncate(dbuffer_t *dbuffer, size_t new_size);"
   ]
  ],
  "f"
 ],
 "dbuffer_update": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_update(dbuffer_t *dbuffer, size_t offset, size_t len);"
   ]
  ],
  "f"
 ],
 "dbuffer_update_all": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_update_all(dbuffer_t *dbuffer);"
   ]
  ],
  "f"
 ],
 "dbuffer_update_some": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint8 *dbuffer_update_some(dbuffer_t *dbuffer, size_t offset, size_t len, size_t *actual_len);"
   ]
  ],
  "f"
 ],
 "debug_cancel_id_t": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 debug_cancel_id_t;"
   ]
  ],
  "t"
 ],
 "debug_notification_interface_t": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct debug_notification_interface {\n    attr_value_t (*notify_context_creation)(conf_object_t *NOTNULL obj, const char *query, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, bool updated), cbdata_register_t data);\n    attr_value_t (*notify_context_destruction)(conf_object_t *NOTNULL obj, const char *query, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id), cbdata_register_t data);\n    attr_value_t (*notify_location)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL location, unsigned size, access_t access, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, conf_object_t *cpu, uint64 instruction_address, uint64 data_address, unsigned size), cbdata_register_t data);\n    attr_value_t (*notify_address)(conf_object_t *NOTNULL obj, const char *query, uint64 address, unsigned size, access_t access, bool physical, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, conf_object_t *cpu, uint64 instruction_address, uint64 data_address, unsigned size), cbdata_register_t data);\n    attr_value_t (*notify_line)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL file, unsigned line, unsigned column, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, conf_object_t *cpu, uint64 instruction_address, uint64 data_address, unsigned size), cbdata_register_t data);\n    attr_value_t (*notify_activated)(conf_object_t *NOTNULL obj, const char *query, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, conf_object_t *cpu), cbdata_register_t data);\n    attr_value_t (*notify_deactivated)(conf_object_t *NOTNULL obj, const char *query, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, conf_object_t *cpu), cbdata_register_t data);\n    attr_value_t (*notify_callbacks_done)(conf_object_t *NOTNULL obj, void (*cb)(cbdata_call_t data, conf_object_t *obj), cbdata_register_t data);\n    attr_value_t (*cancel)(conf_object_t *NOTNULL obj, debug_cancel_id_t cid);\n} debug_notification_interface_t;"
   ]
  ],
  "s:debug_notification_interface_t:notify_context_creation;notify_context_destruction;notify_location;notify_address;notify_line;notify_activated;notify_deactivated;notify_callbacks_done;cancel"
 ],
 "debug_query_interface_t": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct debug_query_interface {\n    attr_value_t (*matching_contexts)(conf_object_t *NOTNULL obj, const char *query);\n    attr_value_t (*get_context_group)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*get_context_parent)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*get_context_children)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*query_for_context_group)(conf_object_t *NOTNULL obj, const char *ctx_id);\n    attr_value_t (*query_for_context_id)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*query_for_context_tree)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*context_name)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*context_id_for_object)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL ctx_obj);\n    attr_value_t (*object_for_context)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*context_has_state)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*get_active_processor)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n} debug_query_interface_t;"
   ]
  ],
  "s:debug_query_interface_t:matching_contexts;get_context_group;get_context_parent;get_context_children;query_for_context_group;query_for_context_id;query_for_context_tree;context_name;context_id_for_object;object_for_context;context_has_state;get_active_processor"
 ],
 "debug_setup_id_t": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int64 debug_setup_id_t;"
   ]
  ],
  "t"
 ],
 "debug_setup_interface_t": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct debug_setup_interface {\n    attr_value_t (*add_symbol_file)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL symbol_file, uint64 address, bool absolute_address);\n    attr_value_t (*add_symbol_segment)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL symbol_file, unsigned segment, uint64 address, bool absolute_address);\n    attr_value_t (*add_symbol_section)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL symbol_file, const char *NOTNULL section, uint64 address, bool absolute_address);\n    attr_value_t (*remove_symbol_file)(conf_object_t *NOTNULL obj, debug_setup_id_t id);\n    void (*clear_symbol_files)(conf_object_t *NOTNULL obj);\n    attr_value_t (*symbol_files)(conf_object_t *NOTNULL obj);\n    attr_value_t (*symbol_files_for_ctx)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*list_all_mappings)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*add_path_map_entry)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL source, const char *NOTNULL dest);\n    attr_value_t (*remove_path_map_entry)(conf_object_t *NOTNULL obj, debug_setup_id_t id);\n    void (*clear_path_map_entries)(conf_object_t *NOTNULL obj);\n    attr_value_t (*path_map_entries)(conf_object_t *NOTNULL obj);\n    attr_value_t (*path_map_entries_for_ctx)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*apply_path_map)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, const char *NOTNULL filename);\n} debug_setup_interface_t;"
   ]
  ],
  "s:debug_setup_interface_t:add_symbol_file;add_symbol_segment;add_symbol_section;remove_symbol_file;clear_symbol_files;symbol_files;symbol_files_for_ctx;list_all_mappings;add_path_map_entry;remove_path_map_entry;clear_path_map_entries;path_map_entries;path_map_entries_for_ctx;apply_path_map"
 ],
 "debug_step_interface_t": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct debug_step_interface {\n    attr_value_t (*instruction_into)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*into)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*instruction_over)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*over)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*out)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*reverse_instruction_into)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*reverse_into)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*reverse_instruction_over)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*reverse_over)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*reverse_out)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n} debug_step_interface_t;"
   ]
  ],
  "s:debug_step_interface_t:instruction_into;into;instruction_over;over;out;reverse_instruction_into;reverse_into;reverse_instruction_over;reverse_over;reverse_out"
 ],
 "debug_symbol_file_interface_t": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct debug_symbol_file_interface {\n    attr_value_t (*open_symbol_file)(conf_object_t *NOTNULL obj, const char *NOTNULL filename, uint64 address, bool absolute_address);\n    attr_value_t (*close_symbol_file)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*symbol_file_info)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*sections_info)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*segments_info)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*open_symbol_section)(conf_object_t *NOTNULL obj, const char *NOTNULL filename, const char *NOTNULL section, uint64 address, bool absolute_address);\n} debug_symbol_file_interface_t;"
   ]
  ],
  "s:debug_symbol_file_interface_t:open_symbol_file;close_symbol_file;symbol_file_info;sections_info;segments_info;open_symbol_section"
 ],
 "debug_symbol_interface_t": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct debug_symbol_interface {\n    attr_value_t (*address_source)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address, uint64 size, void (*cb)(cbdata_call_t data, attr_value_t code_area), cbdata_register_t data);\n    attr_value_t (*source_address)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, const char *NOTNULL filename, uint32 line, uint32 column, void (*cb)(cbdata_call_t data, attr_value_t code_area), cbdata_register_t data);\n    attr_value_t (*address_symbol)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address);\n    attr_value_t (*stack_depth)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*stack_frames)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int min, int max);\n    attr_value_t (*local_variables)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int frame);\n    attr_value_t (*local_arguments)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int frame);\n    attr_value_t (*expression_value)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int32 frame, uint64 address_scope, const char *NOTNULL expr);\n    attr_value_t (*expression_type)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int32 frame, uint64 address_scope, const char *NOTNULL expr);\n    attr_value_t (*type_info)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address_scope, const char *NOTNULL type);\n    attr_value_t (*type_to_string)(conf_object_t *NOTNULL obj, attr_value_t type);\n    attr_value_t (*symbol_address)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int32 frame, const char *NOTNULL symbol);\n    attr_value_t (*address_string)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address, int maxlen);\n    attr_value_t (*lvalue_write)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int32 frame, const char *NOTNULL symbol, attr_value_t value);\n    attr_value_t (*address_write)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address, attr_value_t value);\n    attr_value_t (*address_read)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address, unsigned size);\n    attr_value_t (*struct_members)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address_scope, const char *NOTNULL struct_name);\n    attr_value_t (*struct_field)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address_scope, const char *NOTNULL struct_name, const char *NOTNULL field);\n    attr_value_t (*list_functions)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*list_global_variables)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*list_source_files)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n} debug_symbol_interface_t;"
   ]
  ],
  "s:debug_symbol_interface_t:address_source;source_address;address_symbol;stack_depth;stack_frames;local_variables;local_arguments;expression_value;expression_type;type_info;type_to_string;symbol_address;address_string;lvalue_write;address_write;address_read;struct_members;struct_field;list_functions;list_global_variables;list_source_files"
 ],
 "debugger_error_t": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Debugger_No_Error                         = 0,\n    Debugger_Not_Allowed_In_Execution_Context,\n    Debugger_Unknown_Context,\n    Debugger_Not_Supported_For_Context,\n    Debugger_Context_Does_Not_Have_State,\n    Debugger_Context_Is_Not_Active,\n    Debugger_Lookup_Failure,\n    Debugger_Failed_To_Get_Stack_Frame,\n    Debugger_Failed_To_Get_PC,\n    Debugger_Failed_To_Read,\n    Debugger_Failed_To_Write,\n    Debugger_Frame_Outside_Of_Known_Stack,\n    Debugger_Failed_To_Evaluate_Expression,\n    Debugger_Incorrect_Type,\n    Debugger_Incorrect_Size,\n    Debugger_Incorrect_Context_Query,\n    Debugger_Unknown_Id,\n    Debugger_Source_Not_Found,\n    Debugger_File_Not_Found,\n    Debugger_Unrecognized_File_Format,\n    Debugger_Unsupported_For_File_Format,\n    Debugger_Failed_To_Open_File,\n    Debugger_Not_Relocatable,\n    Debugger_Segment_Info_Missing,\n    Debugger_Section_Info_Missing,\n    Debugger_Segment_Not_Found,\n    Debugger_Section_Not_Found,\n    Debugger_Already_Running,\n    Debugger_Failed_To_Continue,\n    Debugger_No_Context_For_Object,\n    Debugger_Invalid_Path,\n    Debugger_Missing_Object,\n    Debugger_Unexpected_Error,\n    Debugger_Step_Interrupted\n} debugger_error_t;"
   ]
  ],
  "e:debugger_error_t:Debugger_No_Error;Debugger_Not_Allowed_In_Execution_Context;Debugger_Unknown_Context;Debugger_Not_Supported_For_Context;Debugger_Context_Does_Not_Have_State;Debugger_Context_Is_Not_Active;Debugger_Lookup_Failure;Debugger_Failed_To_Get_Stack_Frame;Debugger_Failed_To_Get_PC;Debugger_Failed_To_Read;Debugger_Failed_To_Write;Debugger_Frame_Outside_Of_Known_Stack;Debugger_Failed_To_Evaluate_Expression;Debugger_Incorrect_Type;Debugger_Incorrect_Size;Debugger_Incorrect_Context_Query;Debugger_Unknown_Id;Debugger_Source_Not_Found;Debugger_File_Not_Found;Debugger_Unrecognized_File_Format;Debugger_Unsupported_For_File_Format;Debugger_Failed_To_Open_File;Debugger_Not_Relocatable;Debugger_Segment_Info_Missing;Debugger_Section_Info_Missing;Debugger_Segment_Not_Found;Debugger_Section_Not_Found;Debugger_Already_Running;Debugger_Failed_To_Continue;Debugger_No_Context_For_Object;Debugger_Invalid_Path;Debugger_Missing_Object;Debugger_Unexpected_Error;Debugger_Step_Interrupted"
 ],
 "decoder_handle_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_replace_info decoder_handle_t;"
   ]
  ],
  "s:decoder_handle_t"
 ],
 "decoder_interface_t": [
  "model-iface/decoder.h",
  "model-iface/decoder.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct decoder_interface {\n    void (*register_decoder)(conf_object_t *obj, decoder_t *NOTNULL decoder);\n    void (*unregister_decoder)(conf_object_t *obj, decoder_t *NOTNULL decoder);\n} decoder_interface_t;"
   ]
  ],
  "s:decoder_interface_t:register_decoder;unregister_decoder"
 ],
 "decoder_t": [
  "model-iface/decoder.h",
  "model-iface/decoder.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    void *user_data;\n    int (*NOTNULL decode)(uint8 *code, int valid_bytes, conf_object_t *cpu, instruction_info_t *ii, void *user_data);\n    tuple_int_string_t (*NOTNULL disassemble)(uint8 *code, int valid_bytes, conf_object_t *cpu, void *user_data);\n    int (*NOTNULL flush)(instruction_info_t *ii, void *user_data);\n} decoder_t;"
   ]
  ],
  "s:decoder_t:user_data;decode;disassemble;flush"
 ],
 "describe_registers_interface_t": [
  "model-iface/describe-registers.h",
  "model-iface/describe-registers.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct describe_registers_interface {\n    const description_t *(*first_child)(conf_object_t *NOTNULL obj, const description_t *parent);\n    const description_t *(*next_description)(conf_object_t *NOTNULL obj, const description_t *prev);\n    void (*free_description)(conf_object_t *NOTNULL obj, const description_t *desc);\n    const named_value_t *(*first_named_value)(conf_object_t *NOTNULL obj, const description_t *parent);\n    const named_value_t *(*next_named_value)(conf_object_t *NOTNULL obj, const named_value_t *prev);\n    void (*free_named_value)(conf_object_t *NOTNULL obj, const named_value_t *nv);\n    void (*get)(conf_object_t *NOTNULL obj, int reg_id, buffer_t dest);\n    void (*set)(conf_object_t *NOTNULL obj, int reg_id, bytes_t value);\n} describe_registers_interface_t;"
   ]
  ],
  "s:describe_registers_interface_t:first_child;next_description;free_description;first_named_value;next_named_value;free_named_value;get;set"
 ],
 "description_t": [
  "model-iface/describe-registers.h",
  "model-iface/describe-registers.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    description_type_t type;\n    const char *name;\n    const char *description;\n    int16 dwarf_id;\n    reg_bitorder_t bitorder;\n    reg_role_t role;\n    bool memory_mapped;\n    uint64 offset;\n    bool catchable;\n    int msb;\n    int lsb;\n    int regsize;\n    int reg_id;\n} description_t;"
   ]
  ],
  "s:description_t:type;name;description;dwarf_id;bitorder;role;memory_mapped;offset;catchable;msb;lsb;regsize;reg_id"
 ],
 "description_type_t": [
  "model-iface/describe-registers.h",
  "model-iface/describe-registers.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Description_Type_Group,\n    Description_Type_Int_Reg,\n    Description_Type_Float_Reg,\n    Description_Type_Fields_Reg,\n    Description_Type_Int_Field,\n    Description_Type_Float_Field\n} description_type_t;"
   ]
  ],
  "e:description_type_t:Description_Type_Group;Description_Type_Int_Reg;Description_Type_Float_Reg;Description_Type_Fields_Reg;Description_Type_Int_Field;Description_Type_Float_Field"
 ],
 "device_identification_interface_t": [
  "model-iface/device-identification.h",
  "model-iface/device-identification.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct device_identification_interface {\n    const char *(*get_id)(conf_object_t *NOTNULL obj, const char *key);\n    const char *(*get_key)(conf_object_t *NOTNULL obj, unsigned int index);\n} device_identification_interface_t;"
   ]
  ],
  "s:device_identification_interface_t:get_id;get_key"
 ],
 "direct_memory_ack_id_t": [
  "base/direct-memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 direct_memory_ack_id_t;"
   ]
  ],
  "t"
 ],
 "direct_memory_flush_interface_t": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct direct_memory_flush_interface {\n    void (*revoke)(conf_object_t *NOTNULL obj, uint64 base, uint64 size, access_t access, access_t perm, access_t inhibit);\n    bool (*set_access_bits)(conf_object_t *NOTNULL obj, conf_object_t *requester, uint64 base, uint64 size, access_t access);\n} direct_memory_flush_interface_t;"
   ]
  ],
  "s:direct_memory_flush_interface_t:revoke;set_access_bits"
 ],
 "direct_memory_handle_t": [
  "base/direct-memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef granted_mem_t *direct_memory_handle_t;"
   ]
  ],
  "t"
 ],
 "direct_memory_interface_t": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct direct_memory_interface {\n    direct_memory_handle_t (*get_handle)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL requester, uint64 subsystem, uint64 offs, unsigned size);\n    direct_memory_t (*request)(conf_object_t *NOTNULL obj, direct_memory_handle_t handle, access_t permission, access_t inhibit);\n    void (*revoke)(conf_object_t *NOTNULL obj, access_t access, access_t permission, access_t inhibit);\n    void *(*get_user_data)(conf_object_t *NOTNULL obj, direct_memory_handle_t handle);\n    void (*set_user_data)(conf_object_t *NOTNULL obj, direct_memory_handle_t handle, void *user_data);\n    void (*release)(conf_object_t *NOTNULL obj, direct_memory_handle_t handle);\n    void (*ack)(conf_object_t *NOTNULL obj, direct_memory_ack_id_t id);\n} direct_memory_interface_t;"
   ]
  ],
  "s:direct_memory_interface_t:get_handle;request;revoke;get_user_data;set_user_data;release;ack"
 ],
 "direct_memory_lookup_interface_t": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct direct_memory_lookup_interface {\n    direct_memory_lookup_t (*lookup)(conf_object_t *NOTNULL obj, conf_object_t *requester, physical_address_t addr, unsigned size, access_t access);\n} direct_memory_lookup_interface_t;"
   ]
  ],
  "s:direct_memory_lookup_interface_t:lookup"
 ],
 "direct_memory_lookup_t": [
  "base/direct-memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    conf_object_t *target;\n    uint64 offs;\n    access_t breakpoints;\n    access_t tracers;\n    access_t access;\n} direct_memory_lookup_t;"
   ]
  ],
  "s:direct_memory_lookup_t:target;offs;breakpoints;tracers;access"
 ],
 "direct_memory_lookup_v2_interface_t": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct direct_memory_lookup_v2_interface {\n    direct_memory_lookup_t (*lookup)(conf_object_t *NOTNULL obj, transaction_t *NOTNULL transaction, physical_address_t addr, access_t access);\n} direct_memory_lookup_v2_interface_t;"
   ]
  ],
  "s:direct_memory_lookup_v2_interface_t:lookup"
 ],
 "direct_memory_t": [
  "base/direct-memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint8 *data;\n    access_t permission;\n    access_t inhibit;\n} direct_memory_t;"
   ]
  ],
  "s:direct_memory_t:data;permission;inhibit"
 ],
 "direct_memory_tags_interface_t": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct direct_memory_tags_interface {\n    direct_memory_tags_t (*get_tags_data)(conf_object_t *NOTNULL obj, direct_memory_handle_t handle);\n} direct_memory_tags_interface_t;"
   ]
  ],
  "s:direct_memory_tags_interface_t:get_tags_data"
 ],
 "direct_memory_tags_t": [
  "base/direct-memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint8 *data;\n    unsigned len;\n} direct_memory_tags_t;"
   ]
  ],
  "s:direct_memory_tags_t:data;len"
 ],
 "direct_memory_update_interface_t": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct direct_memory_update_interface {\n    void (*release)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL target, direct_memory_handle_t handle, direct_memory_ack_id_t id);\n    void (*update_permission)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL target, direct_memory_handle_t handle, access_t lost_access, access_t lost_permission, access_t lost_inhibit, direct_memory_ack_id_t id);\n    void (*conflicting_access)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL target, direct_memory_handle_t handle, access_t conflicting_permission, direct_memory_ack_id_t id);\n} direct_memory_update_interface_t;"
   ]
  ],
  "s:direct_memory_update_interface_t:release;update_permission;conflicting_access"
 ],
 "disasm_instr_t": [
  "simulator-iface/disassemble.h",
  "simulator-iface/disassemble.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    int start;\n    int length;\n    char *string;\n} disasm_instr_t;"
   ]
  ],
  "s:disasm_instr_t:start;length;string"
 ],
 "disassemble_interface_t": [
  "simulator-iface/disassemble.h",
  "simulator-iface/disassemble.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct disassemble_interface {\n    void (*init)(conf_object_t *obj, uint8 *buff, int buff_len, uint64 address);\n    disasm_instr_t (*next)(conf_object_t *obj);\n} disassemble_interface_t;"
   ]
  ],
  "s:disassemble_interface_t:init;next"
 ],
 "disk_component_interface_t": [
  "model-iface/components.h",
  "model-iface/components.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct disk_component_interface {\n    uint64 (*size)(conf_object_t *obj);\n} disk_component_interface_t;"
   ]
  ],
  "s:disk_component_interface_t:size"
 ],
 "do_map_target_cb_t": [
  "model-iface/transaction-instrumentation.h",
  "model-iface/transaction-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef next_map_t (*do_map_target_cb_t)(const map_target_t *mt, transaction_t *org_t, uint64 addr, map_info_t *map, lang_void *handle);"
   ]
  ],
  "t"
 ],
 "domain_lock_t": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct domain_lock domain_lock_t;"
   ]
  ],
  "s:domain_lock_t"
 ],
 "dummy_memory_page_interface_t": [
  "model-iface/memory-page.h",
  "model-iface/memory-page.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct dummy_memory_page_interface {\n    void (*dummy)(conf_object_t *NOTNULL obj);\n} dummy_memory_page_interface_t;"
   ]
  ],
  "s:dummy_memory_page_interface_t:dummy"
 ],
 "duration_as_ps": [
  "base/duration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int64 duration_as_ps(duration_t dt);"
   ]
  ],
  "f"
 ],
 "duration_as_sec": [
  "base/duration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline double duration_as_sec(duration_t dt);"
   ]
  ],
  "f"
 ],
 "duration_double": [
  "base/duration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline duration_t duration_double(duration_t dt);"
   ]
  ],
  "f"
 ],
 "duration_eq": [
  "base/duration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool duration_eq(duration_t a, duration_t b);"
   ]
  ],
  "f"
 ],
 "duration_from_ps": [
  "base/duration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline duration_t duration_from_ps(int64 ps);"
   ]
  ],
  "f"
 ],
 "duration_from_sec": [
  "base/duration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline duration_t duration_from_sec(double dt);"
   ]
  ],
  "f"
 ],
 "duration_gt": [
  "base/duration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool duration_gt(duration_t a, duration_t b);"
   ]
  ],
  "f"
 ],
 "duration_half": [
  "base/duration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline duration_t duration_half(duration_t dt);"
   ]
  ],
  "f"
 ],
 "duration_is_illegal": [
  "base/duration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool duration_is_illegal(duration_t dt);"
   ]
  ],
  "f"
 ],
 "duration_lt": [
  "base/duration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool duration_lt(duration_t a, duration_t b);"
   ]
  ],
  "f"
 ],
 "duration_t": [
  "base/duration.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    int64 t;\n} duration_t;"
   ]
  ],
  "s:duration_t:t"
 ],
 "endianness_t": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Endian_Target,\n    Sim_Endian_Host_From_BE,\n    Sim_Endian_Host_From_LE\n} endianness_t;"
   ]
  ],
  "e:endianness_t:Sim_Endian_Target;Sim_Endian_Host_From_BE;Sim_Endian_Host_From_LE"
 ],
 "entity_id_t": [
  "simulator-iface/osa-types.h",
  "simulator-iface/osa-types.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 entity_id_t;"
   ]
  ],
  "t"
 ],
 "enum breakpoint_flag": [
  "simulator/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "enum breakpoint_flag {\n    Sim_Breakpoint_Temporary  = 1,\n    Sim_Breakpoint_Simulation = 2,\n    Sim_Breakpoint_Private    = 4\n};"
   ]
  ],
  "e:breakpoint_flag_t:Sim_Breakpoint_Temporary;Sim_Breakpoint_Simulation;Sim_Breakpoint_Private"
 ],
 "enum event_queue_type": [
  "processor/event.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "enum event_queue_type {\n    Sim_Queue_Step,\n    Sim_Queue_Time\n};"
   ]
  ],
  "e:event_queue_type_t:Sim_Queue_Step;Sim_Queue_Time"
 ],
 "enum i2c_device_state": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "enum i2c_device_state {\n    I2C_idle,\n    I2C_master_transmit,\n    I2C_master_receive,\n    I2C_slave_transmit,\n    I2C_slave_receive,\n    I2C_max_states\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "e:i2c_device_state_t:I2C_idle;I2C_master_transmit;I2C_master_receive;I2C_slave_transmit;I2C_slave_receive;I2C_max_states"
 ],
 "enum serial_peripheral_interface_flags": [
  "devs/serial-peripheral-interface.h",
  "devs/serial-peripheral-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "enum serial_peripheral_interface_flags {\n    SPI_Flags_CPHA = 1,\n    SPI_Flags_CPOL = 2\n};"
   ]
  ],
  "e:serial_peripheral_interface_flags_t:SPI_Flags_CPHA;SPI_Flags_CPOL"
 ],
 "enum sim_exception": [
  "base/sim-exception.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "enum sim_exception {\n    SimExc_No_Exception,\n    SimExc_General,\n    SimExc_Lookup,\n    SimExc_Attribute,\n    SimExc_IOError,\n    SimExc_Index,\n    SimExc_Memory,\n    SimExc_Type,\n    SimExc_Break,\n    SimExc_Stop,\n    SimExc_PythonTranslation,\n    SimExc_License,\n    SimExc_IllegalValue,\n    SimExc_InquiryOutsideMemory,\n    SimExc_InquiryUnhandled,\n    SimExc_InterfaceNotFound,\n    SimExc_AttrNotFound,\n    SimExc_AttrNotReadable,\n    SimExc_AttrNotWritable,\n    Sim_Exceptions\n};"
   ]
  ],
  "e:sim_exception_t:SimExc_No_Exception;SimExc_General;SimExc_Lookup;SimExc_Attribute;SimExc_IOError;SimExc_Index;SimExc_Memory;SimExc_Type;SimExc_Break;SimExc_Stop;SimExc_PythonTranslation;SimExc_License;SimExc_IllegalValue;SimExc_InquiryOutsideMemory;SimExc_InquiryUnhandled;SimExc_InterfaceNotFound;SimExc_AttrNotFound;SimExc_AttrNotReadable;SimExc_AttrNotWritable;Sim_Exceptions"
 ],
 "enum swap_mode": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "enum swap_mode {\n    Sim_Swap_None      = 0,\n    Sim_Swap_Bus       = 1,\n    Sim_Swap_Bus_Trans = 2,\n    Sim_Swap_Trans     = 3\n};"
   ]
  ],
  "e:swap_mode_t:Sim_Swap_None;Sim_Swap_Bus;Sim_Swap_Bus_Trans;Sim_Swap_Trans"
 ],
 "enum x86_access_type": [
  "arch/x86-memop.h",
  "arch/x86-memop.h",
  [
   [
    [
     "6",
     "7"
    ],
    "enum x86_access_type {\n    X86_Other,\n    X86_Vanilla,\n    X86_Instruction,\n    X86_Clflush,\n    X86_Fpu_Env,\n    X86_Fpu_State,\n    X86_Idt,\n    X86_Gdt,\n    X86_Ldt,\n    X86_Task_Segment,\n    X86_Task_Switch,\n    X86_Far_Call_Parameter,\n    X86_Stack,\n    X86_Pml4,\n    X86_Pdp,\n    X86_Pd,\n    X86_Pt,\n    X86_Sse,\n    X86_Fpu,\n    X86_Access_Simple,\n    X86_Microcode_Update,\n    X86_Non_Temporal,\n    X86_Prefetch_3DNow,\n    X86_Prefetchw_3DNow,\n    X86_Prefetch_T0,\n    X86_Prefetch_T1,\n    X86_Prefetch_T2,\n    X86_Prefetch_NTA,\n    X86_Loadall,\n    X86_Atomic_Info,\n    X86_Cmpxchg16b,\n    X86_Smm_State,\n    X86_Vmcs,\n    X86_Vmx_IO_Bitmap,\n    X86_Vmx_Vapic,\n    X86_Vmx_Msr,\n    X86_Vmx_Msr_Bitmaps,\n    X86_Pml4e,\n    X86_Pdpte,\n    X86_Pde,\n    X86_Pte,\n    X86_Invept_Descriptor,\n    X86_Shadow_Stack,\n    X86_Invvpid_Descriptor,\n    X86_Processor_Trace,\n    X86_Pml5,\n    X86_Pml5e,\n    X86_Pdp_Pae,\n    X86_Vmx_EPTP_List,\n    X86_Vmx_VE_Info,\n    X86_Sppt,\n    X86_Pml_Log,\n    X86_Pebs,\n    X86_Vmx_Pasid_Translation,\n    X86_Stack_Explicit,\n    X86_Mtt_Metadata,\n    X86_Prefetch_Other,\n    X86_Access_Type_Last\n};"
   ]
  ],
  "e:x86_access_type_t:X86_Other;X86_Vanilla;X86_Instruction;X86_Clflush;X86_Fpu_Env;X86_Fpu_State;X86_Idt;X86_Gdt;X86_Ldt;X86_Task_Segment;X86_Task_Switch;X86_Far_Call_Parameter;X86_Stack;X86_Pml4;X86_Pdp;X86_Pd;X86_Pt;X86_Sse;X86_Fpu;X86_Access_Simple;X86_Microcode_Update;X86_Non_Temporal;X86_Prefetch_3DNow;X86_Prefetchw_3DNow;X86_Prefetch_T0;X86_Prefetch_T1;X86_Prefetch_T2;X86_Prefetch_NTA;X86_Loadall;X86_Atomic_Info;X86_Cmpxchg16b;X86_Smm_State;X86_Vmcs;X86_Vmx_IO_Bitmap;X86_Vmx_Vapic;X86_Vmx_Msr;X86_Vmx_Msr_Bitmaps;X86_Pml4e;X86_Pdpte;X86_Pde;X86_Pte;X86_Invept_Descriptor;X86_Shadow_Stack;X86_Invvpid_Descriptor;X86_Processor_Trace;X86_Pml5;X86_Pml5e;X86_Pdp_Pae;X86_Vmx_EPTP_List;X86_Vmx_VE_Info;X86_Sppt;X86_Pml_Log;X86_Pebs;X86_Vmx_Pasid_Translation;X86_Stack_Explicit;X86_Mtt_Metadata;X86_Prefetch_Other;X86_Access_Type_Last"
 ],
 "eth_frame_crc_status_t": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Eth_Frame_CRC_Match,\n    Eth_Frame_CRC_Mismatch,\n    Eth_Frame_CRC_Unknown\n} eth_frame_crc_status_t;"
   ]
  ],
  "e:eth_frame_crc_status_t:Eth_Frame_CRC_Match;Eth_Frame_CRC_Mismatch;Eth_Frame_CRC_Unknown"
 ],
 "eth_probe_side_t": [
  "devs/eth-probe.h",
  "devs/eth-probe.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Eth_Probe_Port_A = 0,\n    Eth_Probe_Port_B = 1\n} eth_probe_side_t;"
   ]
  ],
  "e:eth_probe_side_t:Eth_Probe_Port_A;Eth_Probe_Port_B"
 ],
 "ethernet_cable_interface_t": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ethernet_cable_interface {\n    void (*link_status)(conf_object_t *NOTNULL ep, bool link_up);\n} ethernet_cable_interface_t;"
   ]
  ],
  "s:ethernet_cable_interface_t:link_status"
 ],
 "ethernet_common_interface_t": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ethernet_common_interface {\n    void (*frame)(conf_object_t *NOTNULL obj, const frags_t *frame, eth_frame_crc_status_t crc_status);\n} ethernet_common_interface_t;"
   ]
  ],
  "s:ethernet_common_interface_t:frame"
 ],
 "ethernet_link_snoop_t": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*ethernet_link_snoop_t)(lang_void *user_data, conf_object_t *clock, const frags_t *packet, eth_frame_crc_status_t crc_status);"
   ]
  ],
  "t"
 ],
 "ethernet_probe_interface_t": [
  "devs/eth-probe.h",
  "devs/eth-probe.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ethernet_probe_interface {\n    void (*attach_snooper)(conf_object_t *NOTNULL probe, ethernet_probe_snoop_t snoop_fun, lang_void *user_data);\n    void (*attach_probe)(conf_object_t *NOTNULL probe, ethernet_probe_snoop_t snoop_fun, lang_void *user_data);\n    void (*detach)(conf_object_t *NOTNULL probe);\n    void (*send_frame)(conf_object_t *NOTNULL probe, eth_probe_side_t to_side, const frags_t *frame, eth_frame_crc_status_t crc_status);\n} ethernet_probe_interface_t;"
   ]
  ],
  "s:ethernet_probe_interface_t:attach_snooper;attach_probe;detach;send_frame"
 ],
 "ethernet_probe_snoop_t": [
  "devs/eth-probe.h",
  "devs/eth-probe.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*ethernet_probe_snoop_t)(lang_void *user_data, conf_object_t *probe, eth_probe_side_t to_side, const frags_t *frame, eth_frame_crc_status_t crc_status);"
   ]
  ],
  "t"
 ],
 "ethernet_snoop_interface_t": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ethernet_snoop_interface {\n    conf_object_t *(*attach)(conf_object_t *NOTNULL link, conf_object_t *clock, ethernet_link_snoop_t snoop_fun, lang_void *user_data);\n} ethernet_snoop_interface_t;"
   ]
  ],
  "s:ethernet_snoop_interface_t:attach"
 ],
 "ethernet_vlan_snoop_interface_t": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ethernet_vlan_snoop_interface {\n    conf_object_t *(*attach)(conf_object_t *NOTNULL link, conf_object_t *clock, ethernet_link_snoop_t snoop_fun, lang_void *user_data, uint16 vlan_id, bool is_vlan_trunk);\n} ethernet_vlan_snoop_interface_t;"
   ]
  ],
  "s:ethernet_vlan_snoop_interface_t:attach"
 ],
 "event_class_flag_t": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_EC_No_Flags     = 0,\n    Sim_EC_Notsaved     = 1,\n    Sim_EC_Slot_Early   = 2,\n    Sim_EC_Slot_Late    = 4,\n    Sim_EC_Machine_Sync = 8,\n    Sim_EC_No_Serialize = 16\n} event_class_flag_t;"
   ]
  ],
  "e:event_class_flag_t:Sim_EC_No_Flags;Sim_EC_Notsaved;Sim_EC_Slot_Early;Sim_EC_Slot_Late;Sim_EC_Machine_Sync;Sim_EC_No_Serialize"
 ],
 "event_class_t": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct event_class {\n    const char *name;\n    conf_class_t *conf_class;\n    event_class_flag_t flags;\n    void (*callback)(conf_object_t *obj, lang_void *data);\n    void (*destroy)(conf_object_t *obj, lang_void *data);\n    attr_value_t (*get_value)(conf_object_t *obj, lang_void *data);\n    lang_void *(*set_value)(conf_object_t *obj, attr_value_t value);\n    char *(*describe)(conf_object_t *obj, lang_void *data);\n    unsigned slot;\n} event_class_t;"
   ]
  ],
  "s:event_class_t:name;conf_class;flags;callback;destroy;get_value;set_value;describe;slot"
 ],
 "event_delta_interface_t": [
  "model-iface/event-delta.h",
  "model-iface/event-delta.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct event_delta_interface {\n    uint64 (*set_delta)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL event_handler_obj, const event_class_t *next_event_ec, uint64 delta);\n    uint64 (*get_delta)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL event_handler_obj);\n} event_delta_interface_t;"
   ]
  ],
  "s:event_delta_interface_t:set_delta;get_delta"
 ],
 "event_handler_interface_t": [
  "model-iface/event-delta.h",
  "model-iface/event-delta.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct event_handler_interface {\n    bool (*handle_event)(conf_object_t *NOTNULL obj);\n    void (*stop)(conf_object_t *NOTNULL obj);\n} event_handler_interface_t;"
   ]
  ],
  "s:event_handler_interface_t:handle_event;stop"
 ],
 "event_queue_type_t": [
  "processor/event.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum event_queue_type {\n    Sim_Queue_Step,\n    Sim_Queue_Time\n} event_queue_type_t;"
   ]
  ],
  "e:event_queue_type_t:Sim_Queue_Step;Sim_Queue_Time"
 ],
 "exception_handle_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_exception_info exception_handle_t;"
   ]
  ],
  "s:exception_handle_t"
 ],
 "exception_interface_t": [
  "model-iface/exception.h",
  "model-iface/exception.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct exception_interface {\n    int (*get_number)(conf_object_t *NOTNULL obj, const char *NOTNULL name);\n    const char *(*get_name)(conf_object_t *NOTNULL obj, int exc);\n    int (*get_source)(conf_object_t *NOTNULL obj, int exc);\n    attr_value_t (*all_exceptions)(conf_object_t *NOTNULL obj);\n} exception_interface_t;"
   ]
  ],
  "s:exception_interface_t:get_number;get_name;get_source;all_exceptions"
 ],
 "exception_return_handle_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_exception_return_info exception_return_handle_t;"
   ]
  ],
  "s:exception_return_handle_t"
 ],
 "exception_type_t": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_PE_Cancelled              = 1022,\n    Sim_PE_Async_Required         = 1023,\n    Sim_PE_Deferred               = 1024,\n    Sim_PE_No_Exception           = 0x401,\n    Sim_PE_Silent_Break           = 0x402,\n    Sim_PE_Stop_Request           = 0x403,\n    Sim_PE_Inquiry_Outside_Memory = 0x404,\n    Sim_PE_Inquiry_Unhandled      = 0x405,\n    Sim_PE_Execute_Outside_Memory = 0x406,\n    Sim_PE_IO_Not_Taken           = 0x407,\n    Sim_PE_IO_Error               = 0x408,\n    Sim_PE_Stall_Cpu              = 0x409,\n    Sim_PE_Instruction_Finished   = 0x40a,\n    Sim_PE_Default_Semantics      = 0x40b,\n    Sim_PE_Ignore_Semantics       = 0x40c,\n    Sim_PE_Last                   = 0x40d\n} exception_type_t;"
   ]
  ],
  "e:exception_type_t:Sim_PE_Cancelled;Sim_PE_Async_Required;Sim_PE_Deferred;Sim_PE_No_Exception;Sim_PE_Silent_Break;Sim_PE_Stop_Request;Sim_PE_Inquiry_Outside_Memory;Sim_PE_Inquiry_Unhandled;Sim_PE_Execute_Outside_Memory;Sim_PE_IO_Not_Taken;Sim_PE_IO_Error;Sim_PE_Stall_Cpu;Sim_PE_Instruction_Finished;Sim_PE_Default_Semantics;Sim_PE_Ignore_Semantics;Sim_PE_Last"
 ],
 "exec_trace_interface_t": [
  "model-iface/exec-trace.h",
  "model-iface/exec-trace.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct exec_trace_interface {\n    void (*register_tracer)(conf_object_t *NOTNULL cpu_obj, instruction_trace_callback_t tracer, lang_void *tracer_data);\n    void (*unregister_tracer)(conf_object_t *NOTNULL cpu_obj, instruction_trace_callback_t tracer, lang_void *tracer_data);\n} exec_trace_interface_t;"
   ]
  ],
  "s:exec_trace_interface_t:register_tracer;unregister_tracer"
 ],
 "execute_control_interface_t": [
  "model-iface/execute.h",
  "model-iface/execute.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct execute_control_interface {\n    void (*message_pending)(conf_object_t *obj);\n    void (*yield_request)(conf_object_t *obj);\n} execute_control_interface_t;"
   ]
  ],
  "s:execute_control_interface_t:message_pending;yield_request"
 ],
 "execute_environ_t": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct execute_environ execute_environ_t;"
   ]
  ],
  "s:execute_environ_t"
 ],
 "execute_interface_t": [
  "model-iface/execute.h",
  "model-iface/execute.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct execute_interface {\n    void (*run)(conf_object_t *obj);\n    void (*stop)(conf_object_t *obj);\n    void (*switch_in)(conf_object_t *obj);\n    void (*switch_out)(conf_object_t *obj);\n} execute_interface_t;"
   ]
  ],
  "s:execute_interface_t:run;stop;switch_in;switch_out"
 ],
 "extended_serial_interface_t": [
  "devs/serial-device.h",
  "devs/serial-device.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct extended_serial_interface {\n    void (*write_at)(conf_object_t *obj, int value, int x, int y, int fg, int bg);\n    void (*graphics_mode)(conf_object_t *obj, int in_graphics_mode);\n} extended_serial_interface_t;"
   ]
  ],
  "s:extended_serial_interface_t:write_at;graphics_mode"
 ],
 "extra_header_key_t": [
  "simulator-iface/table.h",
  "simulator-iface/table.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Extra_Header_Key_Row          = 0x7d0,\n    Extra_Header_Key_Name,\n    Extra_Header_Key_Description,\n    Extra_Header_Key_First_Column,\n    Extra_Header_Key_Last_Column\n} extra_header_key_t;"
   ]
  ],
  "e:extra_header_key_t:Extra_Header_Key_Row;Extra_Header_Key_Name;Extra_Header_Key_Description;Extra_Header_Key_First_Column;Extra_Header_Key_Last_Column"
 ],
 "fatal_error": [
  "util/help-macros.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void fatal_error(const char *fmt, ...);"
   ]
  ],
  "f"
 ],
 "firewire_ack_code_t": [
  "devs/firewire.h",
  "devs/firewire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Firewire_Ack_Complete       = 1,\n    Firewire_Ack_Pending        = 2,\n    Firewire_Ack_Busy_X         = 4,\n    Firewire_Ack_Busy_A         = 5,\n    Firewire_Ack_Busy_B         = 6,\n    Firewire_Ack_Tardy          = 11,\n    Firewire_Ack_Conflict_Error = 12,\n    Firewire_Ack_Data_Error     = 13,\n    Firewire_Ack_Type_Error     = 14,\n    Firewire_Ack_Address_Error  = 15,\n    Firewire_Ack_No_Destination = 16,\n    Firewire_Ack_No_Ack         = 17\n} firewire_ack_code_t;"
   ]
  ],
  "e:firewire_ack_code_t:Firewire_Ack_Complete;Firewire_Ack_Pending;Firewire_Ack_Busy_X;Firewire_Ack_Busy_A;Firewire_Ack_Busy_B;Firewire_Ack_Tardy;Firewire_Ack_Conflict_Error;Firewire_Ack_Data_Error;Firewire_Ack_Type_Error;Firewire_Ack_Address_Error;Firewire_Ack_No_Destination;Firewire_Ack_No_Ack"
 ],
 "firewire_async_lock_code_t": [
  "devs/firewire.h",
  "devs/firewire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Firewire_Lock_Maskswap    = 1,\n    Firewire_Lock_Compareswap = 2,\n    Firewire_Lock_Fetchadd    = 3,\n    Firewire_Lock_Littleadd   = 4,\n    Firewire_Lock_Boundedadd  = 5,\n    Firewire_Lock_Wrapadd     = 6,\n    Firewire_Lock_Vendor      = 7\n} firewire_async_lock_code_t;"
   ]
  ],
  "e:firewire_async_lock_code_t:Firewire_Lock_Maskswap;Firewire_Lock_Compareswap;Firewire_Lock_Fetchadd;Firewire_Lock_Littleadd;Firewire_Lock_Boundedadd;Firewire_Lock_Wrapadd;Firewire_Lock_Vendor"
 ],
 "firewire_bus_interface_t": [
  "devs/firewire.h",
  "devs/firewire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct firewire_bus_interface {\n    int (*connect_device)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev);\n    int (*disconnect_device)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev);\n    void (*set_device_bus_id)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev, uint16 bus_id);\n    void (*set_id_mask)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev, uint16 id_mask);\n    firewire_ack_code_t (*transfer)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL source, dbuffer_t *packet, int crc_calculated);\n    int (*register_channel)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev, uint32 channel);\n    int (*unregister_channel)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev, uint32 channel);\n    void (*reset)(conf_object_t *NOTNULL bus);\n} firewire_bus_interface_t;"
   ]
  ],
  "s:firewire_bus_interface_t:connect_device;disconnect_device;set_device_bus_id;set_id_mask;transfer;register_channel;unregister_channel;reset"
 ],
 "firewire_device_interface_t": [
  "devs/firewire.h",
  "devs/firewire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct firewire_device_interface {\n    firewire_ack_code_t (*transfer)(conf_object_t *NOTNULL dev, dbuffer_t *packet, int crc_calculated);\n    void (*reset)(conf_object_t *NOTNULL dev, uint16 id, uint8 root_id, uint32_array_t self_ids);\n    uint32 (*get_self_id_template)(conf_object_t *NOTNULL dev);\n    int (*get_rhb)(conf_object_t *NOTNULL dev);\n    uint8 (*get_port_count)(conf_object_t *NOTNULL dev);\n    uint16 (*get_port_mask)(conf_object_t *NOTNULL dev);\n} firewire_device_interface_t;"
   ]
  ],
  "s:firewire_device_interface_t:transfer;reset;get_self_id_template;get_rhb;get_port_count;get_port_mask"
 ],
 "firewire_iso_tag_t": [
  "devs/firewire.h",
  "devs/firewire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Firewire_Tag_Unformatted = 0\n} firewire_iso_tag_t;"
   ]
  ],
  "e:firewire_iso_tag_t:Firewire_Tag_Unformatted"
 ],
 "firewire_port_status_t": [
  "devs/firewire.h",
  "devs/firewire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Firewire_Port_No_Port       = 0,\n    Firewire_Port_Not_Connected = 1,\n    Firewire_Port_Parent        = 2,\n    Firewire_Port_Child         = 3\n} firewire_port_status_t;"
   ]
  ],
  "e:firewire_port_status_t:Firewire_Port_No_Port;Firewire_Port_Not_Connected;Firewire_Port_Parent;Firewire_Port_Child"
 ],
 "firewire_response_code_t": [
  "devs/firewire.h",
  "devs/firewire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Firewire_Response_Complete      = 0,\n    Firewire_Response_Data_Error    = 5,\n    Firewire_Response_Type_Error    = 6,\n    Firewire_Response_Address_Error = 7\n} firewire_response_code_t;"
   ]
  ],
  "e:firewire_response_code_t:Firewire_Response_Complete;Firewire_Response_Data_Error;Firewire_Response_Type_Error;Firewire_Response_Address_Error"
 ],
 "firewire_transaction_code_t": [
  "devs/firewire.h",
  "devs/firewire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Firewire_Write_Quadlet         = 0,\n    Firewire_Write_Block           = 1,\n    Firewire_Write_Response        = 2,\n    Firewire_Read_Quadlet          = 4,\n    Firewire_Read_Block            = 5,\n    Firewire_Read_Quadlet_Response = 6,\n    Firewire_Read_Block_Response   = 7,\n    Firewire_Cycle_Start           = 8,\n    Firewire_Lock                  = 9,\n    Firewire_Streaming             = 10,\n    Firewire_Lock_Response         = 11\n} firewire_transaction_code_t;"
   ]
  ],
  "e:firewire_transaction_code_t:Firewire_Write_Quadlet;Firewire_Write_Block;Firewire_Write_Response;Firewire_Read_Quadlet;Firewire_Read_Block;Firewire_Read_Quadlet_Response;Firewire_Read_Block_Response;Firewire_Cycle_Start;Firewire_Lock;Firewire_Streaming;Firewire_Lock_Response"
 ],
 "fmn_station_control_interface_t": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct fmn_station_control_interface {\n    uint64 (*send_message)(conf_object_t *NOTNULL obj, uint32 thread_id, uint64 rt_value);\n    void (*load_message)(conf_object_t *NOTNULL obj, uint32 thread_id, uint8 bucket);\n    int (*wait)(conf_object_t *NOTNULL obj, uint32 thread_id, uint8 vector);\n    void (*sync)(conf_object_t *NOTNULL obj, uint32 thread_id);\n} fmn_station_control_interface_t;"
   ]
  ],
  "s:fmn_station_control_interface_t:send_message;load_message;wait;sync"
 ],
 "fmn_station_control_v2_interface_t": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct fmn_station_control_v2_interface {\n    uint64 (*send_message)(conf_object_t *NOTNULL obj, uint32 thread_id, uint64 rt_value);\n    uint64 (*load_message)(conf_object_t *NOTNULL obj, uint32 thread_id, uint64 rt_value);\n    int (*wait)(conf_object_t *NOTNULL obj, uint32 thread_id, uint64 rt_value);\n    void (*sync)(conf_object_t *NOTNULL obj, uint32 thread_id);\n} fmn_station_control_v2_interface_t;"
   ]
  ],
  "s:fmn_station_control_v2_interface_t:send_message;load_message;wait;sync"
 ],
 "frags_add": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void frags_add(frags_t *buf, const void *data, size_t len);"
   ]
  ],
  "f"
 ],
 "frags_add_from_frags": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void frags_add_from_frags(frags_t *dst, const frags_t *src, size_t offset, size_t len);"
   ]
  ],
  "f"
 ],
 "frags_extract": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void frags_extract(const frags_t *buf, void *vdst);"
   ]
  ],
  "f"
 ],
 "frags_extract_8": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 frags_extract_8(const frags_t *buf, size_t offset);"
   ]
  ],
  "f"
 ],
 "frags_extract_alloc": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void *frags_extract_alloc(const frags_t *buf);"
   ]
  ],
  "f"
 ],
 "frags_extract_be16": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 frags_extract_be16(const frags_t *buf, size_t offset);"
   ]
  ],
  "f"
 ],
 "frags_extract_be32": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 frags_extract_be32(const frags_t *buf, size_t offset);"
   ]
  ],
  "f"
 ],
 "frags_extract_be64": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 frags_extract_be64(const frags_t *buf, size_t offset);"
   ]
  ],
  "f"
 ],
 "frags_extract_le16": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 frags_extract_le16(const frags_t *buf, size_t offset);"
   ]
  ],
  "f"
 ],
 "frags_extract_le32": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 frags_extract_le32(const frags_t *buf, size_t offset);"
   ]
  ],
  "f"
 ],
 "frags_extract_le64": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 frags_extract_le64(const frags_t *buf, size_t offset);"
   ]
  ],
  "f"
 ],
 "frags_extract_slice": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void frags_extract_slice(const frags_t *buf, void *vdst, size_t offset, size_t len);"
   ]
  ],
  "f"
 ],
 "frags_extract_slice_alloc": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void *frags_extract_slice_alloc(const frags_t *buf, size_t offset, size_t len);"
   ]
  ],
  "f"
 ],
 "frags_init": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void frags_init(frags_t *buf);"
   ]
  ],
  "f"
 ],
 "frags_init_add": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void frags_init_add(frags_t *buf, const void *data, size_t len);"
   ]
  ],
  "f"
 ],
 "frags_init_add_from_frags": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void frags_init_add_from_frags(frags_t *dst, const frags_t *src, size_t offset, size_t len);"
   ]
  ],
  "f"
 ],
 "frags_it": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline frags_it_t frags_it(const frags_t *buf, size_t offset, size_t len);"
   ]
  ],
  "f"
 ],
 "frags_it_data": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline const uint8 *frags_it_data(frags_it_t it);"
   ]
  ],
  "f"
 ],
 "frags_it_end": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool frags_it_end(frags_it_t it);"
   ]
  ],
  "f"
 ],
 "frags_it_len": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline size_t frags_it_len(frags_it_t it);"
   ]
  ],
  "f"
 ],
 "frags_it_next": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline frags_it_t frags_it_next(frags_it_t it);"
   ]
  ],
  "f"
 ],
 "frags_it_t": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct frags_it frags_it_t;"
   ]
  ],
  "s:frags_it_t"
 ],
 "frags_len": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline size_t frags_len(const frags_t *buf);"
   ]
  ],
  "f"
 ],
 "frags_prefix": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline frags_t frags_prefix(const void *header, size_t header_len, const frags_t *body);"
   ]
  ],
  "f"
 ],
 "frags_suffix": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline frags_t frags_suffix(const frags_t *body, void *header, size_t header_len);"
   ]
  ],
  "f"
 ],
 "frags_t": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct frags frags_t;"
   ]
  ],
  "s:frags_t"
 ],
 "freerun_interface_t": [
  "model-iface/freerun.h",
  "model-iface/freerun.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct freerun_interface {\n    bool (*enabled)(conf_object_t *NOTNULL obj);\n    int64 (*advance_clock)(conf_object_t *NOTNULL obj, int64 ps_limit, int64 steps, bool idle);\n    void (*start_clock)(conf_object_t *NOTNULL obj);\n    void (*stop_clock)(conf_object_t *NOTNULL obj);\n    uint64 (*current_itime)(conf_object_t *NOTNULL obj);\n} freerun_interface_t;"
   ]
  ],
  "s:freerun_interface_t:enabled;advance_clock;start_clock;stop_clock;current_itime"
 ],
 "frequency_interface_t": [
  "devs/frequency.h",
  "devs/frequency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct frequency_interface {\n    double (*get)(conf_object_t *NOTNULL obj);\n} frequency_interface_t;"
   ]
  ],
  "s:frequency_interface_t:get"
 ],
 "frequency_listener_interface_t": [
  "devs/frequency.h",
  "devs/frequency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct frequency_listener_interface {\n    void (*set)(conf_object_t *NOTNULL obj, uint64 numerator, uint64 denominator);\n} frequency_listener_interface_t;"
   ]
  ],
  "s:frequency_listener_interface_t:set"
 ],
 "gbic_transceiver_interface_t": [
  "devs/gbic.h",
  "devs/gbic.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct gbic_transceiver_interface {\n    mod_def_t (*read_mod_def)(conf_object_t *obj);\n    void (*write_mod_def)(conf_object_t *obj, mod_def_t mod_def);\n    void (*loopback)(conf_object_t *obj, int loopback);\n} gbic_transceiver_interface_t;"
   ]
  ],
  "s:gbic_transceiver_interface_t:read_mod_def;write_mod_def;loopback"
 ],
 "gbp_header_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint32 magic;\n    uint32 format;\n    uint64 bytes;\n    uint32 minx;\n    uint32 miny;\n    uint32 maxx;\n    uint32 maxy;\n} gbp_header_t;"
   ]
  ],
  "s:gbp_header_t:magic;format;bytes;minx;miny;maxx;maxy"
 ],
 "gen_spr_access_type_t": [
  "processor/generic-spr.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Gen_Spr_Instruction_Access,\n    Sim_Gen_Spr_Attribute_Access,\n    Sim_Gen_Spr_Int_Register_Access,\n    Sim_PPC_Spr_Instruction_Access  = ...,\n    Sim_PPC_Spr_Attribute_Access    = ...,\n    Sim_PPC_Spr_Int_Register_Access = ...\n} gen_spr_access_type_t;"
   ]
  ],
  "e:gen_spr_access_type_t:Sim_Gen_Spr_Instruction_Access;Sim_Gen_Spr_Attribute_Access;Sim_Gen_Spr_Int_Register_Access;Sim_PPC_Spr_Instruction_Access;Sim_PPC_Spr_Attribute_Access;Sim_PPC_Spr_Int_Register_Access"
 ],
 "gen_spr_ret_t": [
  "processor/generic-spr.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Gen_Spr_Ok,\n    Sim_Gen_Spr_Illegal,\n    Sim_Gen_Spr_Privilege,\n    Sim_Gen_Spr_Processor_Sleeps,\n    Sim_PPC_Spr_Ok               = ...,\n    Sim_PPC_Spr_Illegal          = ...,\n    Sim_PPC_Spr_Privilege        = ...\n} gen_spr_ret_t;"
   ]
  ],
  "e:gen_spr_ret_t:Sim_Gen_Spr_Ok;Sim_Gen_Spr_Illegal;Sim_Gen_Spr_Privilege;Sim_Gen_Spr_Processor_Sleeps;Sim_PPC_Spr_Ok;Sim_PPC_Spr_Illegal;Sim_PPC_Spr_Privilege"
 ],
 "gen_spr_user_getter_func_t": [
  "processor/generic-spr.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef gen_spr_ret_t (*gen_spr_user_getter_func_t)(conf_object_t *cpu, int64 spr_number, gen_spr_access_type_t type, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "gen_spr_user_setter_func_t": [
  "processor/generic-spr.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef gen_spr_ret_t (*gen_spr_user_setter_func_t)(conf_object_t *cpu, int64 spr_number, uint64 value, gen_spr_access_type_t type, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "generic_address_t": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 generic_address_t;"
   ]
  ],
  "t"
 ],
 "generic_loadswab16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 generic_loadswab16(const uint16 *p);"
   ]
  ],
  "f"
 ],
 "generic_loadswab32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 generic_loadswab32(const uint32 *p);"
   ]
  ],
  "f"
 ],
 "generic_loadswab64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 generic_loadswab64(const uint64 *p);"
   ]
  ],
  "f"
 ],
 "generic_storeswab16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void generic_storeswab16(uint16 *p, uint16 x);"
   ]
  ],
  "f"
 ],
 "generic_storeswab32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void generic_storeswab32(uint32 *p, uint32 x);"
   ]
  ],
  "f"
 ],
 "generic_storeswab64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void generic_storeswab64(uint64 *p, uint64 x);"
   ]
  ],
  "f"
 ],
 "generic_swab16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 generic_swab16(uint16 x);"
   ]
  ],
  "f"
 ],
 "generic_swab32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 generic_swab32(uint32 x);"
   ]
  ],
  "f"
 ],
 "generic_swab64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 generic_swab64(uint64 x);"
   ]
  ],
  "f"
 ],
 "generic_transaction_t": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct generic_transaction {\n    logical_address_t logical_address;\n    physical_address_t physical_address;\n    unsigned int size;\n    mem_op_type_t type;\n    unsigned int atomic : 1;\n    unsigned int inquiry : 1;\n    unsigned int non_coherent : 1;\n    unsigned int _deprecated_ignore : 1;\n    unsigned int may_stall : 1;\n    unsigned int reissue : 1;\n    unsigned int block_STC : 1;\n    unsigned int use_page_cache : 1;\n    unsigned int inverse_endian : 1;\n    unsigned int page_cross : 2;\n    unsigned int mem_hier_on_fetch : 1;\n    unsigned int block_flags;\n    ini_type_t ini_type;\n    conf_object_t *ini_ptr;\n    exception_type_t exception;\n    void *user_ptr;\n    uint8 *real_address;\n    int space_count;\n    struct transaction *transaction;\n    page_t *reserved;\n    unsigned int reserved2;\n} generic_transaction_t;"
   ]
  ],
  "s:generic_transaction_t:logical_address;physical_address;size;type;atomic;inquiry;non_coherent;_deprecated_ignore;may_stall;reissue;block_STC;use_page_cache;inverse_endian;page_cross;mem_hier_on_fetch;block_flags;ini_type;ini_ptr;exception;user_ptr;real_address;space_count;transaction;reserved;reserved2"
 ],
 "generic_unaligned_load_be16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 generic_unaligned_load_be16(const void *p);"
   ]
  ],
  "f"
 ],
 "generic_unaligned_load_be32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 generic_unaligned_load_be32(const void *p);"
   ]
  ],
  "f"
 ],
 "generic_unaligned_load_be64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 generic_unaligned_load_be64(const void *p);"
   ]
  ],
  "f"
 ],
 "generic_unaligned_load_le16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 generic_unaligned_load_le16(const void *p);"
   ]
  ],
  "f"
 ],
 "generic_unaligned_load_le32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 generic_unaligned_load_le32(const void *p);"
   ]
  ],
  "f"
 ],
 "generic_unaligned_load_le64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 generic_unaligned_load_le64(const void *p);"
   ]
  ],
  "f"
 ],
 "generic_unaligned_store_be16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void generic_unaligned_store_be16(void *p, uint16 x);"
   ]
  ],
  "f"
 ],
 "generic_unaligned_store_be32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void generic_unaligned_store_be32(void *p, uint32 x);"
   ]
  ],
  "f"
 ],
 "generic_unaligned_store_be64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void generic_unaligned_store_be64(void *p, uint64 x);"
   ]
  ],
  "f"
 ],
 "generic_unaligned_store_le16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void generic_unaligned_store_le16(void *p, uint16 x);"
   ]
  ],
  "f"
 ],
 "generic_unaligned_store_le32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void generic_unaligned_store_le32(void *p, uint32 x);"
   ]
  ],
  "f"
 ],
 "generic_unaligned_store_le64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void generic_unaligned_store_le64(void *p, uint64 x);"
   ]
  ],
  "f"
 ],
 "get_attr_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef attr_value_t (*get_attr_t)(lang_void *ptr, conf_object_t *obj, attr_value_t *idx);"
   ]
  ],
  "t"
 ],
 "get_class_attr_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef attr_value_t (*get_class_attr_t)(lang_void *ptr, conf_class_t *c, attr_value_t *idx);"
   ]
  ],
  "t"
 ],
 "gfx_break_cb_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int (*gfx_break_cb_t)(conf_object_t *obj, int64 break_id, lang_void *arg);"
   ]
  ],
  "t"
 ],
 "gfx_break_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct gfx_break_interface {\n    bool (*store)(conf_object_t *NOTNULL obj, const char *file, int minx, int miny, int maxx, int maxy);\n    int64 (*add)(conf_object_t *NOTNULL obj, const char *file, const char *name, bool oneshot, double interval, gfx_break_cb_t cb, lang_void *arg);\n    bool (*remove)(conf_object_t *NOTNULL obj, int64 break_id);\n    int (*match)(conf_object_t *NOTNULL obj, const char *file);\n    gbp_header_t (*info)(conf_object_t *NOTNULL obj, const char *file);\n    bool (*export_png)(conf_object_t *NOTNULL obj, const char *file, const char *png_file);\n    int64 (*add_bytes)(conf_object_t *NOTNULL obj, bytes_t data, const char *name, bool oneshot, double interval, gfx_break_cb_t cb, lang_void *arg);\n} gfx_break_interface_t;"
   ]
  ],
  "s:gfx_break_interface_t:store;add;remove;match;info;export_png;add_bytes"
 ],
 "gfx_con_interface_t": [
  "model-iface/gfx-console.h",
  "model-iface/gfx-console.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct gfx_con_interface {\n    int (*set_color)(conf_object_t *obj, uint8 index, uint8 r, uint8 g, uint8 b);\n    void (*set_size)(conf_object_t *obj, int width, int height);\n    void (*put_pixel)(conf_object_t *obj, int x, int y, uint8 index);\n    void (*put_pixel_rgb)(conf_object_t *obj, int x, int y, uint32 rgb);\n    void (*put_block_old)(conf_object_t *obj, uint8 *src, int minx, int miny, int maxx, int maxy, int src_fmt, int src_stride, int unused);\n    void (*redraw)(conf_object_t *obj);\n    void (*update_keyboard_leds)(conf_object_t *obj, int led_change);\n    void (*put_pixel_col)(conf_object_t *obj, int x, int y, int r, int g, int b);\n    void (*put_block)(conf_object_t *obj, bytes_t block, int minx, int miny, int maxx, int maxy, gfx_con_pixel_fmt_t src_fmt, int src_stride);\n} gfx_con_interface_t;"
   ]
  ],
  "s:gfx_con_interface_t:set_color;set_size;put_pixel;put_pixel_rgb;put_block_old;redraw;update_keyboard_leds;put_pixel_col;put_block"
 ],
 "gfx_con_pixel_fmt_t": [
  "model-iface/gfx-console.h",
  "model-iface/gfx-console.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    GFX_8BIT_INDEXED = 8,\n    GFX_RGB_565      = 16,\n    GFX_RGB_888      = 24,\n    GFX_xRGB_8888    = 32\n} gfx_con_pixel_fmt_t;"
   ]
  ],
  "e:gfx_con_pixel_fmt_t:GFX_8BIT_INDEXED;GFX_RGB_565;GFX_RGB_888;GFX_xRGB_8888"
 ],
 "gfx_console_backend_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct gfx_console_backend_interface {\n    void (*kbd_event)(conf_object_t *NOTNULL obj, sim_key_t code, bool down);\n    void (*mouse_event)(conf_object_t *NOTNULL obj, int x, int y, int z, gfx_console_mouse_button_t buttons);\n    void (*request_refresh)(conf_object_t *NOTNULL obj);\n    void (*set_visible)(conf_object_t *NOTNULL obj, bool visible);\n    gfx_console_screen_text_t (*text_data)(conf_object_t *NOTNULL obj);\n    void (*got_grab_keys)(conf_object_t *NOTNULL obj);\n} gfx_console_backend_interface_t;"
   ]
  ],
  "s:gfx_console_backend_interface_t:kbd_event;mouse_event;request_refresh;set_visible;text_data;got_grab_keys"
 ],
 "gfx_console_frontend_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct gfx_console_frontend_interface {\n    int (*start)(conf_object_t *NOTNULL obj, conf_object_t *backend);\n    void (*stop)(conf_object_t *NOTNULL obj, int handle);\n    void (*set_title)(conf_object_t *NOTNULL obj, int handle, const char *short_title, const char *long_title);\n    void (*set_size)(conf_object_t *NOTNULL obj, int handle, int width, int height);\n    void (*set_visible)(conf_object_t *NOTNULL obj, int handle, bool visible);\n    void (*set_contents)(conf_object_t *NOTNULL obj, int handle, int left, int top, int right, int bottom, const uint32 *data);\n    void (*invalidate_contents)(conf_object_t *NOTNULL obj, int handle);\n    void (*set_text_mode)(conf_object_t *NOTNULL obj, int handle, bool text_mode);\n    void (*signal_text_update)(conf_object_t *NOTNULL obj, int handle);\n    void (*set_grab_mode)(conf_object_t *NOTNULL obj, int handle, bool active);\n    void (*set_mouse_pos)(conf_object_t *NOTNULL obj, int handle, int x, int y);\n    void (*set_keyboard_leds)(conf_object_t *NOTNULL obj, int handle, gfx_console_led_t led_state);\n    void (*set_grab_modifier)(conf_object_t *NOTNULL obj, int handle, sim_key_t modifier);\n    void (*set_grab_button)(conf_object_t *NOTNULL obj, int handle, gfx_console_mouse_button_t button);\n} gfx_console_frontend_interface_t;"
   ]
  ],
  "s:gfx_console_frontend_interface_t:start;stop;set_title;set_size;set_visible;set_contents;invalidate_contents;set_text_mode;signal_text_update;set_grab_mode;set_mouse_pos;set_keyboard_leds;set_grab_modifier;set_grab_button"
 ],
 "gfx_console_led_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Gfx_Console_Led_None   = 0,\n    Gfx_Console_Led_Caps   = 1,\n    Gfx_Console_Led_Num    = 2,\n    Gfx_Console_Led_Scroll = 4\n} gfx_console_led_t;"
   ]
  ],
  "e:gfx_console_led_t:Gfx_Console_Led_None;Gfx_Console_Led_Caps;Gfx_Console_Led_Num;Gfx_Console_Led_Scroll"
 ],
 "gfx_console_mouse_button_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Gfx_Console_Mouse_Button_Left   = 1,\n    Gfx_Console_Mouse_Button_Right  = 2,\n    Gfx_Console_Mouse_Button_Middle = 4\n} gfx_console_mouse_button_t;"
   ]
  ],
  "e:gfx_console_mouse_button_t:Gfx_Console_Mouse_Button_Left;Gfx_Console_Mouse_Button_Right;Gfx_Console_Mouse_Button_Middle"
 ],
 "gfx_console_screen_text_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    bytes_t text;\n    int rows;\n    int columns;\n    int font_width;\n    int font_height;\n    bytes_t line_lengths;\n} gfx_console_screen_text_t;"
   ]
  ],
  "s:gfx_console_screen_text_t:text;rows;columns;font_width;font_height;line_lengths"
 ],
 "gic_reg_info_t": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct gic_reg_info {\n    int op1;\n    int crn;\n    int crm;\n    int op2;\n    arm_cpu_state_t cpu_state;\n} gic_reg_info_t;"
   ]
  ],
  "s:gic_reg_info_t:op1;crn;crm;op2;cpu_state"
 ],
 "global_notifier_callback_t": [
  "base/global-notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct global_notifier_callback global_notifier_callback_t;"
   ]
  ],
  "s:global_notifier_callback_t"
 ],
 "global_notifier_type_t": [
  "base/global-notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Global_Notify_Object_Delete           = 100,\n    Sim_Global_Notify_Objects_Finalized,\n    Sim_Global_Notify_Message,\n    Sim_Global_Notify_Before_Snapshot_Restore = 150,\n    Sim_Global_Notify_After_Snapshot_Restore\n} global_notifier_type_t;"
   ]
  ],
  "e:global_notifier_type_t:Sim_Global_Notify_Object_Delete;Sim_Global_Notify_Objects_Finalized;Sim_Global_Notify_Message;Sim_Global_Notify_Before_Snapshot_Restore;Sim_Global_Notify_After_Snapshot_Restore"
 ],
 "granted_mem_t": [
  "base/direct-memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct granted_mem granted_mem_t;"
   ]
  ],
  "s:granted_mem_t"
 ],
 "gui_console_backend_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct gui_console_backend_interface {\n    void (*start)(conf_object_t *NOTNULL obj, lang_void *console);\n    void (*stop)(conf_object_t *NOTNULL obj);\n} gui_console_backend_interface_t;"
   ]
  ],
  "s:gui_console_backend_interface_t:start;stop"
 ],
 "hap_flags_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef int hap_flags_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "t"
 ],
 "hap_handle_t": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int hap_handle_t;"
   ]
  ],
  "t"
 ],
 "hap_listen_interface_t": [
  "model-iface/hap-listen.h",
  "model-iface/hap-listen.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct hap_listen_interface {\n    void (*occurred)(conf_object_t *obj, conf_object_t *origin, hap_type_t hap, int64 value, va_list ap, bool always);\n} hap_listen_interface_t;"
   ]
  ],
  "s:hap_listen_interface_t:occurred"
 ],
 "hap_type_t": [
  "base/hap-producer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int hap_type_t;"
   ]
  ],
  "t"
 ],
 "host_serial_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct host_serial_interface {\n    bool (*setup)(conf_object_t *NOTNULL obj, const char *name);\n    const char *(*name)(conf_object_t *NOTNULL obj);\n    void (*shutdown)(conf_object_t *NOTNULL obj);\n} host_serial_interface_t;"
   ]
  ],
  "s:host_serial_interface_t:setup;name;shutdown"
 ],
 "i2c_ack_t": [
  "devs/i2c.h",
  "devs/i2c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    I2C_ack   = 0,\n    I2C_noack = 1\n} i2c_ack_t;"
   ]
  ],
  "e:i2c_ack_t:I2C_ack;I2C_noack"
 ],
 "i2c_bridge_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct i2c_bridge_interface {\n    void (*address_added)(conf_object_t *device, uint32 addr, uint32 mask);\n    void (*address_removed)(conf_object_t *device, uint32 addr, uint32 mask);\n} i2c_bridge_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_bridge_interface_t:address_added;address_removed"
 ],
 "i2c_bus_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct i2c_bus_interface {\n    int (*start)(conf_object_t *i2c_bus, uint8 address);\n    int (*stop)(conf_object_t *i2c_bus);\n    uint8 (*read_data)(conf_object_t *i2c_bus);\n    void (*write_data)(conf_object_t *i2c_bus, uint8 value);\n    int (*register_device)(conf_object_t *i2c_bus, conf_object_t *device, uint8 address, uint8 mask, i2c_device_flag_t flags);\n    void (*unregister_device)(conf_object_t *i2c_bus, conf_object_t *device, uint8 address, uint8 mask);\n} i2c_bus_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_bus_interface_t:start;stop;read_data;write_data;register_device;unregister_device"
 ],
 "i2c_device_flag_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef enum {\n    I2C_flag_exclusive,\n    I2C_flag_shared\n} i2c_device_flag_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "e:i2c_device_flag_t:I2C_flag_exclusive;I2C_flag_shared"
 ],
 "i2c_device_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct i2c_device_interface {\n    int (*set_state)(conf_object_t *device, i2c_device_state_t state, uint8 address);\n    uint8 (*read_data)(conf_object_t *device);\n    void (*write_data)(conf_object_t *device, uint8 value);\n} i2c_device_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_device_interface_t:set_state;read_data;write_data"
 ],
 "i2c_device_state_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef enum i2c_device_state {\n    I2C_idle,\n    I2C_master_transmit,\n    I2C_master_receive,\n    I2C_slave_transmit,\n    I2C_slave_receive,\n    I2C_max_states\n} i2c_device_state_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "e:i2c_device_state_t:I2C_idle;I2C_master_transmit;I2C_master_receive;I2C_slave_transmit;I2C_slave_receive;I2C_max_states"
 ],
 "i2c_link_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct i2c_link_interface {\n    void (*register_slave_address)(conf_object_t *i2c_link, conf_object_t *slave, uint32 address, uint32 mask);\n    void (*unregister_slave_address)(conf_object_t *i2c_link, conf_object_t *slave, uint32 address, uint32 mask);\n    void (*register_bridge)(conf_object_t *i2c_link, conf_object_t *bridge);\n    void (*disconnect_device)(conf_object_t *i2c_link, conf_object_t *device);\n    void (*start_request)(conf_object_t *i2c_link, conf_object_t *master, uint32 address);\n    void (*read_request)(conf_object_t *i2c_link, conf_object_t *master);\n    void (*ack_read_request)(conf_object_t *i2c_link, conf_object_t *master, i2c_status_t ack);\n    void (*write_request)(conf_object_t *i2c_link, conf_object_t *master, uint8 value);\n    void (*read_response)(conf_object_t *i2c_link, conf_object_t *slave, uint8 value);\n    void (*ack_read_response)(conf_object_t *i2c_link, conf_object_t *slave);\n    void (*write_response)(conf_object_t *i2c_link, conf_object_t *slave, i2c_status_t status);\n    void (*start_response)(conf_object_t *i2c_link, conf_object_t *slave, i2c_status_t status);\n    void (*stop)(conf_object_t *i2c_link, conf_object_t *master);\n} i2c_link_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_link_interface_t:register_slave_address;unregister_slave_address;register_bridge;disconnect_device;start_request;read_request;ack_read_request;write_request;read_response;ack_read_response;write_response;start_response;stop"
 ],
 "i2c_master_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct i2c_master_interface {\n    void (*bus_freed)(conf_object_t *device);\n    void (*read_response)(conf_object_t *device, uint8 value);\n    void (*ack_read_response)(conf_object_t *device);\n    void (*write_response)(conf_object_t *device, i2c_status_t status);\n    void (*start_response)(conf_object_t *device, i2c_status_t status);\n} i2c_master_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_master_interface_t:bus_freed;read_response;ack_read_response;write_response;start_response"
 ],
 "i2c_master_v2_interface_t": [
  "devs/i2c.h",
  "devs/i2c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct i2c_master_v2_interface {\n    void (*acknowledge)(conf_object_t *device, i2c_ack_t ack);\n    void (*read_response)(conf_object_t *device, uint8 value);\n} i2c_master_v2_interface_t;"
   ]
  ],
  "s:i2c_master_v2_interface_t:acknowledge;read_response"
 ],
 "i2c_slave_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct i2c_slave_interface {\n    void (*start_request)(conf_object_t *device, uint32 address);\n    void (*read_request)(conf_object_t *device);\n    void (*ack_read_request)(conf_object_t *device, i2c_status_t ack);\n    void (*write_request)(conf_object_t *device, uint8 value);\n    void (*stop)(conf_object_t *device, uint8 repeated_start);\n} i2c_slave_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_slave_interface_t:start_request;read_request;ack_read_request;write_request;stop"
 ],
 "i2c_slave_v2_interface_t": [
  "devs/i2c.h",
  "devs/i2c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct i2c_slave_v2_interface {\n    void (*start)(conf_object_t *device, uint8 address);\n    void (*read)(conf_object_t *device);\n    void (*write)(conf_object_t *device, uint8 value);\n    void (*stop)(conf_object_t *device);\n    attr_value_t (*addresses)(conf_object_t *device);\n} i2c_slave_v2_interface_t;"
   ]
  ],
  "s:i2c_slave_v2_interface_t:start;read;write;stop;addresses"
 ],
 "i2c_status_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef enum {\n    I2C_status_success  = 0,\n    I2C_status_noack    = 1,\n    I2C_status_bus_busy\n} i2c_status_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "e:i2c_status_t:I2C_status_success;I2C_status_noack;I2C_status_bus_busy"
 ],
 "i3c_ack_t": [
  "devs/i3c.h",
  "devs/i3c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    I3C_ack   = 0,\n    I3C_noack\n} i3c_ack_t;"
   ]
  ],
  "e:i3c_ack_t:I3C_ack;I3C_noack"
 ],
 "i3c_daa_snoop_interface_t": [
  "devs/i3c.h",
  "devs/i3c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct i3c_daa_snoop_interface {\n    void (*assigned_address)(conf_object_t *obj, uint64 id, uint8 bcr, uint8 dcr, uint8 address);\n} i3c_daa_snoop_interface_t;"
   ]
  ],
  "s:i3c_daa_snoop_interface_t:assigned_address"
 ],
 "i3c_hdr_master_interface_t": [
  "devs/i3c.h",
  "devs/i3c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct i3c_hdr_master_interface {\n    void (*hdr_read_response)(conf_object_t *obj, bytes_t bytes, bool more);\n    void (*hdr_acknowledge)(conf_object_t *obj, i3c_ack_t ack);\n} i3c_hdr_master_interface_t;"
   ]
  ],
  "s:i3c_hdr_master_interface_t:hdr_read_response;hdr_acknowledge"
 ],
 "i3c_hdr_slave_interface_t": [
  "devs/i3c.h",
  "devs/i3c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct i3c_hdr_slave_interface {\n    void (*hdr_write)(conf_object_t *obj, bytes_t data);\n    void (*hdr_read)(conf_object_t *obj, uint32 max_len);\n    void (*hdr_restart)(conf_object_t *obj);\n    void (*hdr_exit)(conf_object_t *obj);\n} i3c_hdr_slave_interface_t;"
   ]
  ],
  "s:i3c_hdr_slave_interface_t:hdr_write;hdr_read;hdr_restart;hdr_exit"
 ],
 "i3c_master_interface_t": [
  "devs/i3c.h",
  "devs/i3c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct i3c_master_interface {\n    void (*acknowledge)(conf_object_t *obj, i3c_ack_t ack);\n    void (*read_response)(conf_object_t *obj, uint8 value, bool more);\n    void (*daa_response)(conf_object_t *obj, uint64 id, uint8 bcr, uint8 dcr);\n    void (*ibi_request)(conf_object_t *obj);\n    void (*ibi_address)(conf_object_t *obj, uint8 address);\n} i3c_master_interface_t;"
   ]
  ],
  "s:i3c_master_interface_t:acknowledge;read_response;daa_response;ibi_request;ibi_address"
 ],
 "i3c_slave_interface_t": [
  "devs/i3c.h",
  "devs/i3c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct i3c_slave_interface {\n    void (*start)(conf_object_t *obj, uint8 address);\n    void (*write)(conf_object_t *obj, uint8 value);\n    void (*sdr_write)(conf_object_t *obj, bytes_t data);\n    void (*read)(conf_object_t *obj);\n    void (*daa_read)(conf_object_t *obj);\n    void (*stop)(conf_object_t *obj);\n    void (*ibi_start)(conf_object_t *obj);\n    void (*ibi_acknowledge)(conf_object_t *obj, i3c_ack_t ack);\n} i3c_slave_interface_t;"
   ]
  ],
  "s:i3c_slave_interface_t:start;write;sdr_write;read;daa_read;stop;ibi_start;ibi_acknowledge"
 ],
 "i8051_interrupt_interface_t": [
  "arch/i8051.h",
  "arch/i8051.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct i8051_interrupt_interface {\n    int (*active_interrupt)(conf_object_t *NOTNULL obj);\n    void (*reti)(conf_object_t *NOTNULL obj);\n    bool (*suppress_irq)(conf_object_t *NOTNULL obj, uint32 addr);\n} i8051_interrupt_interface_t;"
   ]
  ],
  "s:i8051_interrupt_interface_t:active_interrupt;reti;suppress_irq"
 ],
 "i8051_timer_interface_t": [
  "arch/i8051.h",
  "arch/i8051.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct i8051_timer_interface {\n    void (*change_mode)(conf_object_t *NOTNULL obj, uint8 mode);\n    void (*switch_timer)(conf_object_t *obj, uint8 caller, bool onoff);\n} i8051_timer_interface_t;"
   ]
  ],
  "s:i8051_timer_interface_t:change_mode;switch_timer"
 ],
 "identity16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 identity16(uint16 x);"
   ]
  ],
  "f"
 ],
 "identity32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 identity32(uint32 x);"
   ]
  ],
  "f"
 ],
 "identity64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 identity64(uint64 x);"
   ]
  ],
  "f"
 ],
 "identity8": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 identity8(uint8 x);"
   ]
  ],
  "f"
 ],
 "ieee_802_3_duplex_mode_t": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    IEEE_half_duplex,\n    IEEE_full_duplex\n} ieee_802_3_duplex_mode_t;"
   ]
  ],
  "e:ieee_802_3_duplex_mode_t:IEEE_half_duplex;IEEE_full_duplex"
 ],
 "ieee_802_3_link_status_t": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    IEEE_link_unconnected,\n    IEEE_link_down,\n    IEEE_link_up\n} ieee_802_3_link_status_t;"
   ]
  ],
  "e:ieee_802_3_link_status_t:IEEE_link_unconnected;IEEE_link_down;IEEE_link_up"
 ],
 "ieee_802_3_mac_interface_t": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ieee_802_3_mac_interface {\n    int (*receive_frame)(conf_object_t *obj, int phy, dbuffer_t *buf, int crc_ok);\n    void (*tx_bandwidth_available)(conf_object_t *obj, int phy);\n    void (*link_status_changed)(conf_object_t *obj, int phy, ieee_802_3_link_status_t status);\n} ieee_802_3_mac_interface_t;"
   ]
  ],
  "s:ieee_802_3_mac_interface_t:receive_frame;tx_bandwidth_available;link_status_changed"
 ],
 "ieee_802_3_mac_v3_interface_t": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ieee_802_3_mac_v3_interface {\n    void (*receive_frame)(conf_object_t *obj, int phy, const frags_t *frame, int crc_ok);\n    void (*tx_bandwidth_available)(conf_object_t *obj, int phy);\n    void (*link_status_changed)(conf_object_t *obj, int phy, ieee_802_3_link_status_t status);\n} ieee_802_3_mac_v3_interface_t;"
   ]
  ],
  "s:ieee_802_3_mac_v3_interface_t:receive_frame;tx_bandwidth_available;link_status_changed"
 ],
 "ieee_802_3_media_t": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    IEEE_no_media,\n    IEEE_media_unknown,\n    IEEE_10base2,\n    IEEE_10base5,\n    IEEE_10baseF,\n    IEEE_10baseT,\n    IEEE_100baseFX,\n    IEEE_100baseT,\n    IEEE_100baseT2,\n    IEEE_100baseT4,\n    IEEE_100baseTX,\n    IEEE_100baseX,\n    IEEE_1000baseX,\n    IEEE_1000baseCX,\n    IEEE_1000baseLX,\n    IEEE_1000baseSX,\n    IEEE_1000baseT,\n    IEEE_10broad36,\n    IEEE_1base5\n} ieee_802_3_media_t;"
   ]
  ],
  "e:ieee_802_3_media_t:IEEE_no_media;IEEE_media_unknown;IEEE_10base2;IEEE_10base5;IEEE_10baseF;IEEE_10baseT;IEEE_100baseFX;IEEE_100baseT;IEEE_100baseT2;IEEE_100baseT4;IEEE_100baseTX;IEEE_100baseX;IEEE_1000baseX;IEEE_1000baseCX;IEEE_1000baseLX;IEEE_1000baseSX;IEEE_1000baseT;IEEE_10broad36;IEEE_1base5"
 ],
 "ieee_802_3_phy_interface_t": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ieee_802_3_phy_interface {\n    int (*send_frame)(conf_object_t *obj, dbuffer_t *buf, int replace_crc);\n    int (*check_tx_bandwidth)(conf_object_t *obj);\n    void (*add_mac)(conf_object_t *obj, const uint8 *mac);\n    void (*del_mac)(conf_object_t *obj, const uint8 *mac);\n    void (*add_mac_mask)(conf_object_t *obj, const uint8 *mac, const uint8 *mask);\n    void (*del_mac_mask)(conf_object_t *obj, const uint8 *mac, const uint8 *mask);\n    void (*set_promiscous_mode)(conf_object_t *obj, int enable);\n} ieee_802_3_phy_interface_t;"
   ]
  ],
  "s:ieee_802_3_phy_interface_t:send_frame;check_tx_bandwidth;add_mac;del_mac;add_mac_mask;del_mac_mask;set_promiscous_mode"
 ],
 "ieee_802_3_phy_v2_interface_t": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ieee_802_3_phy_v2_interface {\n    int (*send_frame)(conf_object_t *obj, dbuffer_t *buf, int replace_crc);\n    int (*check_tx_bandwidth)(conf_object_t *obj);\n    void (*add_mac)(conf_object_t *obj, byte_string_t mac);\n    void (*del_mac)(conf_object_t *obj, byte_string_t mac);\n    void (*add_mac_mask)(conf_object_t *obj, byte_string_t mac, byte_string_t mask);\n    void (*del_mac_mask)(conf_object_t *obj, byte_string_t mac, byte_string_t mask);\n    void (*set_promiscous_mode)(conf_object_t *obj, int enable);\n} ieee_802_3_phy_v2_interface_t;"
   ]
  ],
  "s:ieee_802_3_phy_v2_interface_t:send_frame;check_tx_bandwidth;add_mac;del_mac;add_mac_mask;del_mac_mask;set_promiscous_mode"
 ],
 "ieee_802_3_phy_v3_interface_t": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ieee_802_3_phy_v3_interface {\n    int (*send_frame)(conf_object_t *obj, const frags_t *frame, int replace_crc);\n    int (*check_tx_bandwidth)(conf_object_t *obj);\n} ieee_802_3_phy_v3_interface_t;"
   ]
  ],
  "s:ieee_802_3_phy_v3_interface_t:send_frame;check_tx_bandwidth"
 ],
 "image_interface_t": [
  "model-iface/image.h",
  "model-iface/image.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct image_interface {\n    void (*read)(conf_object_t *img, void *NOTNULL to_buf, uint64 start, size_t length);\n    void (*write)(conf_object_t *img, const void *NOTNULL from_buf, uint64 start, size_t length);\n    int (*for_all_spages)(conf_object_t *img, int (*NOTNULL f)(image_spage_t *NOTNULL p, uint64 ofs, void *arg), void *arg);\n    void (*set_persistent)(conf_object_t *obj);\n    void (*save_to_file)(conf_object_t *NOTNULL obj, const char *NOTNULL file, uint64 start, uint64 length, save_flags_t flags);\n    void (*save_diff)(conf_object_t *NOTNULL obj, const char *NOTNULL file, save_flags_t flags);\n    void (*clear_range)(conf_object_t *NOTNULL obj, uint64 start, uint64 length);\n    void (*fill)(conf_object_t *NOTNULL obj, uint64 start, uint64 length, uint8 value);\n    uint64 (*size)(conf_object_t *NOTNULL obj);\n    void (*set)(conf_object_t *NOTNULL obj, uint64 ofs, bytes_t b);\n    bytes_t (*get)(conf_object_t *NOTNULL obj, uint64 ofs, size_t size);\n    void (*flush_writable)(conf_object_t *NOTNULL obj);\n} image_interface_t;"
   ]
  ],
  "s:image_interface_t:read;write;for_all_spages;set_persistent;save_to_file;save_diff;clear_range;fill;size;set;get;flush_writable"
 ],
 "image_snoop_interface_t": [
  "model-iface/image.h",
  "model-iface/image.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct image_snoop_interface {\n    void (*page_modified)(conf_object_t *obj, conf_object_t *img, uint64 offset, uint8 *page_data, image_spage_t *spage);\n} image_snoop_interface_t;"
   ]
  ],
  "s:image_snoop_interface_t:page_modified"
 ],
 "image_spage_t": [
  "model-iface/image.h",
  "model-iface/image.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct image_spage image_spage_t;"
   ]
  ],
  "s:image_spage_t"
 ],
 "ini_type_t": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Initiator_Illegal      = 0,\n    Sim_Initiator_CPU          = 0x1000,\n    Sim_Initiator_CPU_V9       = 0x1100,\n    Sim_Initiator_CPU_X86      = 0x1200,\n    Sim_Initiator_CPU_PPC      = 0x1300,\n    Sim_Initiator_CPU_Alpha    = 0x1400,\n    Sim_Initiator_CPU_MIPS     = 0x1600,\n    Sim_Initiator_CPU_ARM      = 0x1700,\n    Sim_Initiator_CPU_V8       = 0x1800,\n    Sim_Initiator_CPU_H8       = 0x1900,\n    Sim_Initiator_CPU_SH       = 0x1a00,\n    Sim_Initiator_Device       = 0x2000,\n    Sim_Initiator_PCI_Device   = 0x2010,\n    Sim_Initiator_Cache        = 0x3000,\n    Sim_Initiator_Other        = 0x4000,\n    Sim_Initiator_User_Defined = 0x5000\n} ini_type_t;"
   ]
  ],
  "e:ini_type_t:Sim_Initiator_Illegal;Sim_Initiator_CPU;Sim_Initiator_CPU_V9;Sim_Initiator_CPU_X86;Sim_Initiator_CPU_PPC;Sim_Initiator_CPU_Alpha;Sim_Initiator_CPU_MIPS;Sim_Initiator_CPU_ARM;Sim_Initiator_CPU_V8;Sim_Initiator_CPU_H8;Sim_Initiator_CPU_SH;Sim_Initiator_Device;Sim_Initiator_PCI_Device;Sim_Initiator_Cache;Sim_Initiator_Other;Sim_Initiator_User_Defined"
 ],
 "init_arg_t": [
  "simulator/embed.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    const char *name;\n    bool boolean;\n    union {\n        const char *string;\n        bool enabled;\n    } u;\n} init_arg_t;"
   ]
  ],
  "s:init_arg_t:name;boolean;u"
 ],
 "init_prefs_t": [
  "simulator/embed.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    bool batch_mode;\n    bool quiet;\n    bool verbose;\n    bool python_verbose;\n    bool disable_istc;\n    bool disable_dstc;\n    bool module_cache_enable;\n    bool rdp;\n    bool sign_module;\n    const char *log_file;\n    const char *project;\n    const char *package_list;\n    bool no_windows;\n    bool fail_on_warnings;\n    const char *deprecation_level;\n    bool warn_deprecated;\n    bool no_warn_deprecated;\n    bool warn_multithread;\n    bool check_ifaces;\n    bool no_global_settings;\n    int log_enable;\n} init_prefs_t;"
   ]
  ],
  "s:init_prefs_t:batch_mode;quiet;verbose;python_verbose;disable_istc;disable_dstc;module_cache_enable;rdp;sign_module;log_file;project;package_list;no_windows;fail_on_warnings;deprecation_level;warn_deprecated;no_warn_deprecated;warn_multithread;check_ifaces;no_global_settings;log_enable"
 ],
 "init_vtmem": [
  "util/alloc.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void init_vtmem(void);"
   ]
  ],
  "f"
 ],
 "inner_object_iter_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    conf_object_t *node;\n    unsigned depth;\n    unsigned kind;\n} inner_object_iter_t;"
   ]
  ],
  "s:inner_object_iter_t:node;depth;kind"
 ],
 "instruction_fetch_interface_t": [
  "model-iface/instruction-fetch.h",
  "model-iface/instruction-fetch.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct instruction_fetch_interface {\n    instruction_fetch_mode_t (*get_mode)(conf_object_t *obj);\n    void (*set_mode)(conf_object_t *obj, instruction_fetch_mode_t mode);\n    int (*get_line_size)(conf_object_t *obj);\n    void (*set_line_size)(conf_object_t *obj, int size);\n} instruction_fetch_interface_t;"
   ]
  ],
  "s:instruction_fetch_interface_t:get_mode;set_mode;get_line_size;set_line_size"
 ],
 "instruction_fetch_mode_t": [
  "model-iface/instruction-fetch.h",
  "model-iface/instruction-fetch.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Instruction_Fetch_None               = 0,\n    Instruction_Fetch_Cache_Access_Trace = 1,\n    Instruction_Fetch_Trace              = 2\n} instruction_fetch_mode_t;"
   ]
  ],
  "e:instruction_fetch_mode_t:Instruction_Fetch_None;Instruction_Fetch_Cache_Access_Trace;Instruction_Fetch_Trace"
 ],
 "instruction_handle_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_instrumentation_info instruction_handle_t;"
   ]
  ],
  "s:instruction_handle_t"
 ],
 "instruction_info_t": [
  "model-iface/decoder.h",
  "model-iface/decoder.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct instruction_info {\n    service_routine_t ii_ServiceRoutine;\n    uint64 ii_Arg;\n    unsigned int ii_Type;\n    lang_void *ii_UserData;\n    logical_address_t ii_LogicalAddress;\n    physical_address_t ii_PhysicalAddress;\n} instruction_info_t;"
   ]
  ],
  "s:instruction_info_t:ii_ServiceRoutine;ii_Arg;ii_Type;ii_UserData;ii_LogicalAddress;ii_PhysicalAddress"
 ],
 "instruction_trace_callback_t": [
  "model-iface/exec-trace.h",
  "model-iface/exec-trace.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*instruction_trace_callback_t)(lang_void *tracer_data, conf_object_t *cpu, linear_address_t la, logical_address_t va, physical_address_t pa, byte_string_t opcode);"
   ]
  ],
  "t"
 ],
 "instrumentation_connection_interface_t": [
  "simulator-iface/instrumentation-tool.h",
  "simulator-iface/instrumentation-tool.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct instrumentation_connection_interface {\n    void (*enable)(conf_object_t *obj);\n    void (*disable)(conf_object_t *obj);\n} instrumentation_connection_interface_t;"
   ]
  ],
  "s:instrumentation_connection_interface_t:enable;disable"
 ],
 "instrumentation_filter_master_interface_t": [
  "simulator-iface/instrumentation-filter.h",
  "simulator-iface/instrumentation-filter.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct instrumentation_filter_master_interface {\n    void (*set_source_id)(conf_object_t *obj, unsigned source_id);\n    bool (*add_slave)(conf_object_t *obj, conf_object_t *slave, conf_object_t *provider_obj);\n    void (*remove_slave)(conf_object_t *obj, conf_object_t *slave, conf_object_t *provider_obj);\n    char *(*short_filter_config)(conf_object_t *obj);\n} instrumentation_filter_master_interface_t;"
   ]
  ],
  "s:instrumentation_filter_master_interface_t:set_source_id;add_slave;remove_slave;short_filter_config"
 ],
 "instrumentation_filter_slave_interface_t": [
  "simulator-iface/instrumentation-filter.h",
  "simulator-iface/instrumentation-filter.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct instrumentation_filter_slave_interface {\n    void (*disable)(conf_object_t *obj, unsigned source_id);\n    void (*enable)(conf_object_t *obj, unsigned source_id);\n} instrumentation_filter_slave_interface_t;"
   ]
  ],
  "s:instrumentation_filter_slave_interface_t:disable;enable"
 ],
 "instrumentation_filter_status_interface_t": [
  "simulator-iface/instrumentation-filter.h",
  "simulator-iface/instrumentation-filter.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct instrumentation_filter_status_interface {\n    attr_value_t (*get_disabled_sources)(conf_object_t *obj);\n} instrumentation_filter_status_interface_t;"
   ]
  ],
  "s:instrumentation_filter_status_interface_t:get_disabled_sources"
 ],
 "instrumentation_order_interface_t": [
  "model-iface/instrumentation-provider.h",
  "model-iface/instrumentation-provider.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct instrumentation_order_interface {\n    attr_value_t (*get_connections)(conf_object_t *obj);\n    bool (*move_before)(conf_object_t *self, conf_object_t *connection, conf_object_t *before);\n} instrumentation_order_interface_t;"
   ]
  ],
  "s:instrumentation_order_interface_t:get_connections;move_before"
 ],
 "instrumentation_tool_interface_t": [
  "simulator-iface/instrumentation-tool.h",
  "simulator-iface/instrumentation-tool.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct instrumentation_tool_interface {\n    conf_object_t *(*connect)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL provider, attr_value_t args);\n    void (*disconnect)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL conn_obj);\n} instrumentation_tool_interface_t;"
   ]
  ],
  "s:instrumentation_tool_interface_t:connect;disconnect"
 ],
 "int128": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 lo;\n    int64 hi;\n} int128;"
   ]
  ],
  "s:int128:lo;hi"
 ],
 "int128_add": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int128 int128_add(int128 a, int128 b);"
   ]
  ],
  "f"
 ],
 "int128_add_int64": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int128 int128_add_int64(int128 a, int64 b);"
   ]
  ],
  "f"
 ],
 "int128_as_string": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "char *int128_as_string(int128 v, char *buf);"
   ]
  ],
  "f"
 ],
 "int128_div_int64": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool int128_div_int64(int128 a, int64 b, int128 *q, int64 *r);"
   ]
  ],
  "f"
 ],
 "int128_eq": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool int128_eq(int128 a, int128 b);"
   ]
  ],
  "f"
 ],
 "int128_from_double": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "bool int128_from_double(int128 *dst, double src);"
   ]
  ],
  "f"
 ],
 "int128_from_hi_lo": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int128 int128_from_hi_lo(int64 hi, uint64 lo);"
   ]
  ],
  "f"
 ],
 "int128_from_int64": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int128 int128_from_int64(int64 v);"
   ]
  ],
  "f"
 ],
 "int128_ge": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool int128_ge(int128 a, int128 b);"
   ]
  ],
  "f"
 ],
 "int128_gt": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool int128_gt(int128 a, int128 b);"
   ]
  ],
  "f"
 ],
 "int128_hi": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int64 int128_hi(int128 v);"
   ]
  ],
  "f"
 ],
 "int128_le": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool int128_le(int128 a, int128 b);"
   ]
  ],
  "f"
 ],
 "int128_lo": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 int128_lo(int128 v);"
   ]
  ],
  "f"
 ],
 "int128_lt": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool int128_lt(int128 a, int128 b);"
   ]
  ],
  "f"
 ],
 "int128_mul_int64": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int128 int128_mul_int64(int128 a, int64 b);"
   ]
  ],
  "f"
 ],
 "int128_neg": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int128 int128_neg(int128 t);"
   ]
  ],
  "f"
 ],
 "int128_sub": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int128 int128_sub(int128 a, int128 b);"
   ]
  ],
  "f"
 ],
 "int128_sub_int64": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int128 int128_sub_int64(int128 a, int64 b);"
   ]
  ],
  "f"
 ],
 "int128_to_double": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "double int128_to_double(int128 src);"
   ]
  ],
  "f"
 ],
 "int128_to_int64": [
  "util/int128.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool int128_to_int64(int64 *dst, int128 src);"
   ]
  ],
  "f"
 ],
 "int16": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef short int16;"
   ]
  ],
  "t"
 ],
 "int32": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int int32;"
   ]
  ],
  "t"
 ],
 "int64": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef long long int64;"
   ]
  ],
  "t"
 ],
 "int8": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef signed char int8;"
   ]
  ],
  "t"
 ],
 "int_register_interface_t": [
  "model-iface/int-register.h",
  "model-iface/int-register.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct int_register_interface {\n    int (*get_number)(conf_object_t *NOTNULL obj, const char *NOTNULL name);\n    const char *(*get_name)(conf_object_t *NOTNULL obj, int reg);\n    uint64 (*read)(conf_object_t *NOTNULL obj, int reg);\n    void (*write)(conf_object_t *NOTNULL obj, int reg, uint64 val);\n    attr_value_t (*all_registers)(conf_object_t *NOTNULL obj);\n    int (*register_info)(conf_object_t *NOTNULL obj, int reg, ireg_info_t info);\n} int_register_interface_t;"
   ]
  ],
  "s:int_register_interface_t:get_number;get_name;read;write;all_registers;register_info"
 ],
 "interface_array_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    int size;\n    int used;\n    const interface_t **elements;\n} interface_array_t;"
   ]
  ],
  "s:interface_array_t:size;used;elements"
 ],
 "interface_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void interface_t;"
   ]
  ],
  "t"
 ],
 "internal_cached_instruction_interface_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct internal_cached_instruction_interface {\n    void (*add_counters)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, uint64 *i_counter, uint64 *t_counter, bool use_atomic_increment);\n    const char *(*get_service_routine_name)(conf_object_t *obj, instruction_handle_t *iq_handle);\n} internal_cached_instruction_interface_t;"
   ]
  ],
  "s:internal_cached_instruction_interface_t:add_counters;get_service_routine_name"
 ],
 "interrupt_ack_fn_t": [
  "devs/interrupt-ack.h",
  "devs/interrupt-ack.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int (*interrupt_ack_fn_t)(conf_object_t *NOTNULL);"
   ]
  ],
  "t"
 ],
 "interrupt_ack_interface_t": [
  "devs/interrupt-ack.h",
  "devs/interrupt-ack.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct interrupt_ack_interface {\n    void (*raise_interrupt)(conf_object_t *NOTNULL obj, interrupt_ack_fn_t cb, conf_object_t *ack_obj);\n    void (*lower_interrupt)(conf_object_t *NOTNULL obj, interrupt_ack_fn_t cb);\n} interrupt_ack_interface_t;"
   ]
  ],
  "s:interrupt_ack_interface_t:raise_interrupt;lower_interrupt"
 ],
 "interrupt_changed_state_callback_t": [
  "devs/interrupt.h",
  "devs/interrupt.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*interrupt_changed_state_callback_t)(conf_object_t *interrupt_controller, conf_object_t *device, int irq_level, int enabled, void *data);"
   ]
  ],
  "t"
 ],
 "interrupt_cpu_interface_t": [
  "devs/interrupt-ack.h",
  "devs/interrupt-ack.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct interrupt_cpu_interface {\n    interrupt_ack_fn_t ack;\n} interrupt_cpu_interface_t;"
   ]
  ],
  "s:interrupt_cpu_interface_t:ack"
 ],
 "interrupt_query_interface_t": [
  "devs/interrupt.h",
  "devs/interrupt.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct interrupt_query_interface {\n    int (*is_enabled)(conf_object_t *interrupt_controller, int irq_level);\n    void (*register_callback)(conf_object_t *interrupt_controller, conf_object_t *device, int irq_level, interrupt_changed_state_callback_t cb, void *cb_data);\n} interrupt_query_interface_t;"
   ]
  ],
  "s:interrupt_query_interface_t:is_enabled;register_callback"
 ],
 "interrupt_source_t": [
  "devs/interrupt-subscriber.h",
  "devs/interrupt-subscriber.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Interrupt_Source_Icr_Ipr,\n    Interrupt_Source_Msi,\n    Interrupt_Source_Virtual_Wire,\n    Interrupt_Source_Nmi_Pin,\n    Interrupt_Source_Lvt,\n    Interrupt_Source_Iommu,\n    Interrupt_Source_Int2,\n    Interrupt_Source_Vmcs_Injection,\n    Interrupt_Source_Legacy_Apic_Vector,\n    Interrupt_Source_Self_Ipi,\n    Interrupt_Source_Unknown\n} interrupt_source_t;"
   ]
  ],
  "e:interrupt_source_t:Interrupt_Source_Icr_Ipr;Interrupt_Source_Msi;Interrupt_Source_Virtual_Wire;Interrupt_Source_Nmi_Pin;Interrupt_Source_Lvt;Interrupt_Source_Iommu;Interrupt_Source_Int2;Interrupt_Source_Vmcs_Injection;Interrupt_Source_Legacy_Apic_Vector;Interrupt_Source_Self_Ipi;Interrupt_Source_Unknown"
 ],
 "interrupt_subscriber_interface_t": [
  "devs/interrupt-subscriber.h",
  "devs/interrupt-subscriber.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct interrupt_subscriber_interface {\n    void (*notify)(conf_object_t *NOTNULL obj, apic_delivery_mode_t delivery_mode, bool level_assert, apic_trigger_mode_t trigger_mode, uint8 vector, interrupt_source_t source);\n    void (*reset)(conf_object_t *NOTNULL obj);\n} interrupt_subscriber_interface_t;"
   ]
  ],
  "s:interrupt_subscriber_interface_t:notify;reset"
 ],
 "io_memory_interface_t": [
  "devs/io-memory.h",
  "devs/io-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct io_memory_interface {\n    int (*_deprecated_map)(conf_object_t *NOTNULL obj, addr_space_t memory_or_io, map_info_t map_info);\n    exception_type_t (*operation)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mem_op, map_info_t map_info);\n} io_memory_interface_t;"
   ]
  ],
  "s:io_memory_interface_t:_deprecated_map;operation"
 ],
 "ireg_info_t": [
  "model-iface/int-register.h",
  "model-iface/int-register.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_RegInfo_Catchable\n} ireg_info_t;"
   ]
  ],
  "e:ireg_info_t:Sim_RegInfo_Catchable"
 ],
 "iter_func_t": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef addr_prof_iter_t *(*iter_func_t)(branch_recorder_t *br, generic_address_t start, generic_address_t stop);"
   ]
  ],
  "t"
 ],
 "jit_control_interface_t": [
  "model-iface/jit-control.h",
  "model-iface/jit-control.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct jit_control_interface {\n    void (*set_compile_enable)(conf_object_t *obj, bool enabled);\n} jit_control_interface_t;"
   ]
  ],
  "s:jit_control_interface_t:set_compile_enable"
 ],
 "kbd_console_interface_t": [
  "model-iface/kbd-interface.h",
  "model-iface/kbd-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct kbd_console_interface {\n    void (*keyboard_ready)(conf_object_t *obj);\n} kbd_console_interface_t;"
   ]
  ],
  "s:kbd_console_interface_t:keyboard_ready"
 ],
 "keyboard_console_interface_t": [
  "model-iface/kbd-interface.h",
  "model-iface/kbd-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct keyboard_console_interface {\n    void (*keyboard_ready)(conf_object_t *obj);\n} keyboard_console_interface_t;"
   ]
  ],
  "s:keyboard_console_interface_t:keyboard_ready"
 ],
 "keyboard_interface_t": [
  "model-iface/kbd-interface.h",
  "model-iface/kbd-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct keyboard_interface {\n    int (*keyboard_event)(conf_object_t *obj, int key_up, uint8 key);\n} keyboard_interface_t;"
   ]
  ],
  "s:keyboard_interface_t:keyboard_event"
 ],
 "lang_void": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void lang_void;"
   ]
  ],
  "t"
 ],
 "linear_address_t": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 linear_address_t;"
   ]
  ],
  "t"
 ],
 "linear_image_interface_t": [
  "model-iface/image.h",
  "model-iface/image.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct linear_image_interface {\n    uint8 *(*get_base)(conf_object_t *obj, size_t *retsize);\n    void (*set_base)(conf_object_t *obj, uint8 *NOTNULL base);\n    void (*prepare_range)(conf_object_t *NOTNULL obj, read_or_write_t type, size_t offs, size_t size);\n} linear_image_interface_t;"
   ]
  ],
  "s:linear_image_interface_t:get_base;set_base;prepare_range"
 ],
 "link_endpoint_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct link_endpoint_interface {\n    slave_time_t (*delivery_time)(conf_object_t *obj);\n    uint64 (*delivery_skey)(conf_object_t *obj);\n} link_endpoint_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:link_endpoint_interface_t:delivery_time;delivery_skey"
 ],
 "link_message_t": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    atomic_counter_t refcount;\n} link_message_t;"
   ]
  ],
  "s:link_message_t:refcount"
 ],
 "link_type_t": [
  "devs/liblink.h",
  "devs/liblink.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    attr_value_t (*msg_to_attr)(conf_object_t *link, const link_message_t *msg);\n    link_message_t *(*msg_from_attr)(conf_object_t *link, attr_value_t attr);\n    void (*free_msg)(conf_object_t *link, link_message_t *msg);\n    void (*marshal)(conf_object_t *link, const link_message_t *msg, void (*finish)(void *data, const frags_t *msg), void *finish_data);\n    link_message_t *(*unmarshal)(conf_object_t *link, const frags_t *msg);\n    void (*deliver)(conf_object_t *ep, const link_message_t *msg);\n    void (*update_config_value)(conf_object_t *link, const char *key, const frags_t *value);\n    void (*remove_config_value)(conf_object_t *link, const char *key);\n    void (*device_changed)(conf_object_t *ep, conf_object_t *old_dev);\n} link_type_t;"
   ]
  ],
  "s:link_type_t:msg_to_attr;msg_from_attr;free_msg;marshal;unmarshal;deliver;update_config_value;remove_config_value;device_changed"
 ],
 "local_apic_interrupt_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Apic_Lvt_2e              = 736,\n    Apic_CMCI                = 752,\n    Apic_Performance_Counter = 832,\n    Apic_Thermal_Sensor      = 816\n} local_apic_interrupt_t;"
   ]
  ],
  "e:local_apic_interrupt_t:Apic_Lvt_2e;Apic_CMCI;Apic_Performance_Counter;Apic_Thermal_Sensor"
 ],
 "local_time_add": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline local_time_t local_time_add(local_time_t t, duration_t delta);"
   ]
  ],
  "f"
 ],
 "local_time_as_bigtime": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bigtime_t local_time_as_bigtime(local_time_t t);"
   ]
  ],
  "f"
 ],
 "local_time_as_sec": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline double local_time_as_sec(local_time_t t);"
   ]
  ],
  "f"
 ],
 "local_time_as_string": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void local_time_as_string(local_time_t v, char *str);"
   ]
  ],
  "f"
 ],
 "local_time_clock": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline conf_object_t *local_time_clock(local_time_t t);"
   ]
  ],
  "f"
 ],
 "local_time_diff": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline duration_t local_time_diff(local_time_t t1, local_time_t t2);"
   ]
  ],
  "f"
 ],
 "local_time_eq": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool local_time_eq(local_time_t a, local_time_t b);"
   ]
  ],
  "f"
 ],
 "local_time_from_attr": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "local_time_t local_time_from_attr(attr_value_t val);"
   ]
  ],
  "f"
 ],
 "local_time_from_bigtime": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline local_time_t local_time_from_bigtime(conf_object_t *clock, bigtime_t t);"
   ]
  ],
  "f"
 ],
 "local_time_from_sec": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline local_time_t local_time_from_sec(conf_object_t *clock, double t);"
   ]
  ],
  "f"
 ],
 "local_time_ge": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool local_time_ge(local_time_t a, local_time_t b);"
   ]
  ],
  "f"
 ],
 "local_time_gt": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool local_time_gt(local_time_t a, local_time_t b);"
   ]
  ],
  "f"
 ],
 "local_time_is_illegal": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool local_time_is_illegal(local_time_t t);"
   ]
  ],
  "f"
 ],
 "local_time_le": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool local_time_le(local_time_t a, local_time_t b);"
   ]
  ],
  "f"
 ],
 "local_time_lt": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool local_time_lt(local_time_t a, local_time_t b);"
   ]
  ],
  "f"
 ],
 "local_time_sub": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline local_time_t local_time_sub(local_time_t t, duration_t delta);"
   ]
  ],
  "f"
 ],
 "local_time_t": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    conf_object_t *clock;\n    bigtime_t t;\n} local_time_t;"
   ]
  ],
  "s:local_time_t:clock;t"
 ],
 "local_time_to_attr": [
  "base/local-time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "attr_value_t local_time_to_attr(local_time_t t);"
   ]
  ],
  "f"
 ],
 "log_object_t": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct log_object log_object_t;"
   ]
  ],
  "s:log_object_t"
 ],
 "log_type_t": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Log_Info,\n    Sim_Log_Error,\n    Sim_Log_Spec_Violation,\n    Sim_Log_Unimplemented,\n    Sim_Log_Critical,\n    Sim_Log_Trace,\n    Sim_Log_Warning,\n    Sim_Log_Num_Types\n} log_type_t;"
   ]
  ],
  "e:log_type_t:Sim_Log_Info;Sim_Log_Error;Sim_Log_Spec_Violation;Sim_Log_Unimplemented;Sim_Log_Critical;Sim_Log_Trace;Sim_Log_Warning;Sim_Log_Num_Types"
 ],
 "logical_address_t": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 logical_address_t;"
   ]
  ],
  "t"
 ],
 "map_demap_interface_t": [
  "devs/map-demap.h",
  "devs/map-demap.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct map_demap_interface {\n    int (*add_map)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, conf_object_t *target, map_info_t map_info);\n    int (*remove_map)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, int function);\n    int (*add_default)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, conf_object_t *target, map_info_t map_info);\n    void (*remove_default)(conf_object_t *NOTNULL space);\n    int (*map_simple)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, const char *dev_port, map_info_t map_info);\n    int (*map_bridge)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, const char *dev_port, conf_object_t *target, const char *target_port, map_info_t map_info);\n    int (*unmap)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, const char *dev_port);\n    int (*unmap_address)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, physical_address_t base, const char *dev_port);\n} map_demap_interface_t;"
   ]
  ],
  "s:map_demap_interface_t:add_map;remove_map;add_default;remove_default;map_simple;map_bridge;unmap;unmap_address"
 ],
 "map_info_t": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct map_info {\n    physical_address_t base;\n    physical_address_t start;\n    physical_address_t length;\n    int function;\n    int16 priority;\n    int align_size;\n    swap_mode_t reverse_endian;\n} map_info_t;"
   ]
  ],
  "s:map_info_t:base;start;length;function;priority;align_size;reverse_endian"
 ],
 "map_list_t": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6"
    ],
    "typedef struct map_list {\n    map_type_t map_type;\n    conf_object_t *object;\n    const char *port;\n    const void *interface_ptr;\n    const void *target_interface;\n    const void *breakpoint_interface;\n    const void *breakpoint_query_interface;\n    const void *bridge_interface;\n    conf_object_t *target_object;\n    const char *target_port;\n    conf_object_t *bridge;\n    map_info_t map_info;\n    physical_address_t map_size;\n    int deleted;\n} map_list_t;"
   ],
   [
    [
     "7"
    ],
    "typedef struct map_list {\n    map_type_t map_type;\n    conf_object_t *object;\n    const char *port;\n    const void *interface_ptr;\n    const void *target_interface;\n    const void *breakpoint_interface;\n    const void *breakpoint_query_v2_interface;\n    const void *bridge_interface;\n    conf_object_t *target_object;\n    const char *target_port;\n    conf_object_t *bridge;\n    map_info_t map_info;\n    physical_address_t map_size;\n    int deleted;\n} map_list_t;"
   ]
  ],
  "s:map_list_t:map_type;object;port;interface_ptr;target_interface;breakpoint_interface;breakpoint_query_v2_interface;bridge_interface;target_object;target_port;bridge;map_info;map_size;deleted"
 ],
 "map_target_t": [
  "base/map-target.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct map_target map_target_t;"
   ]
  ],
  "s:map_target_t"
 ],
 "map_type_t": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Map_Ram,\n    Sim_Map_Rom,\n    Sim_Map_IO,\n    Sim_Map_Port,\n    Sim_Map_Translate          = 256,\n    Sim_Map_Translate_To_Space,\n    Sim_Map_Translate_To_Ram,\n    Sim_Map_Translate_To_Rom\n} map_type_t;"
   ]
  ],
  "e:map_type_t:Sim_Map_Ram;Sim_Map_Rom;Sim_Map_IO;Sim_Map_Port;Sim_Map_Translate;Sim_Map_Translate_To_Space;Sim_Map_Translate_To_Ram;Sim_Map_Translate_To_Rom"
 ],
 "maybe_node_id_t": [
  "simulator-iface/osa-types.h",
  "simulator-iface/osa-types.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct maybe_node_id {\n    bool valid;\n    node_id_t id;\n} maybe_node_id_t;"
   ]
  ],
  "s:maybe_node_id_t:valid;id"
 ],
 "mdio45_bus_interface_t": [
  "devs/mii.h",
  "devs/mii.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mdio45_bus_interface {\n    uint16 (*read_register)(conf_object_t *obj, int phy, int mmd, int reg);\n    void (*write_register)(conf_object_t *obj, int phy, int mdd, int reg, uint16 value);\n} mdio45_bus_interface_t;"
   ]
  ],
  "s:mdio45_bus_interface_t:read_register;write_register"
 ],
 "mdio45_phy_interface_t": [
  "devs/mii.h",
  "devs/mii.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mdio45_phy_interface {\n    uint16 (*read_register)(conf_object_t *obj, int mmd, int reg);\n    void (*write_register)(conf_object_t *obj, int mmd, int reg, uint16 value);\n} mdio45_phy_interface_t;"
   ]
  ],
  "s:mdio45_phy_interface_t:read_register;write_register"
 ],
 "mem_op_type_t": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Trans_Load        = 0,\n    Sim_Trans_Store       = ...,\n    Sim_Trans_Instr_Fetch = ...,\n    Sim_Trans_Prefetch    = ...,\n    Sim_Trans_Cache       = ...\n} mem_op_type_t;"
   ]
  ],
  "e:mem_op_type_t:Sim_Trans_Load;Sim_Trans_Store;Sim_Trans_Instr_Fetch;Sim_Trans_Prefetch;Sim_Trans_Cache"
 ],
 "memory_handle_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct cpu_memory_info memory_handle_t;"
   ]
  ],
  "s:memory_handle_t"
 ],
 "memory_profiler_interface_t": [
  "model-iface/memory-profiler.h",
  "model-iface/memory-profiler.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct memory_profiler_interface {\n    conf_object_t *(*get)(conf_object_t *obj, read_or_write_t access);\n    bool (*set)(conf_object_t *obj, read_or_write_t access, conf_object_t *prof);\n    int (*get_granularity_log2)(conf_object_t *obj);\n} memory_profiler_interface_t;"
   ]
  ],
  "s:memory_profiler_interface_t:get;set;get_granularity_log2"
 ],
 "memory_space_interface_t": [
  "devs/memory-space.h",
  "devs/memory-space.h",
  [
   [
    [
     "6"
    ],
    "typedef struct memory_space_interface {\n    map_list_t *(*space_lookup)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mop, map_info_t mapinfo);\n    exception_type_t (*access)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mop);\n    exception_type_t (*access_simple)(conf_object_t *obj, conf_object_t *initiator, physical_address_t addr, uint8 *buf, physical_address_t len, read_or_write_t type, endianness_t endian);\n    exception_type_t (*access_simple_inq)(conf_object_t *obj, conf_object_t *initiator, physical_address_t addr, uint8 *buf, physical_address_t len, read_or_write_t type, endianness_t endian);\n    attr_value_t (*read)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, int length, int inquiry);\n    exception_type_t (*write)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, attr_value_t data, int inquiry);\n    cycles_t (*timing_model_operate)(conf_object_t *NOTNULL space, generic_transaction_t *NOTNULL mop);\n    uint64 (*fill)(conf_object_t *NOTNULL obj, physical_address_t start, uint64 size, uint8 value, bool inquiry);\n} memory_space_interface_t;"
   ],
   [
    [
     "7"
    ],
    "typedef struct memory_space_interface {\n    map_list_t *(*space_lookup)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mop, map_info_t mapinfo);\n    exception_type_t (*access)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mop);\n    exception_type_t (*access_simple)(conf_object_t *obj, conf_object_t *initiator, physical_address_t addr, uint8 *buf, physical_address_t len, read_or_write_t type, endianness_t endian);\n    exception_type_t (*access_simple_inq)(conf_object_t *obj, conf_object_t *initiator, physical_address_t addr, uint8 *buf, physical_address_t len, read_or_write_t type, endianness_t endian);\n    attr_value_t (*read)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, int length, int inquiry);\n    exception_type_t (*write)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, attr_value_t data, int inquiry);\n    cycles_t (*_deprecated_timing_model_operate)(conf_object_t *NOTNULL space, generic_transaction_t *NOTNULL mop);\n    uint64 (*fill)(conf_object_t *NOTNULL obj, physical_address_t start, uint64 size, uint8 value, bool inquiry);\n} memory_space_interface_t;"
   ]
  ],
  "s:memory_space_interface_t:space_lookup;access;access_simple;access_simple_inq;read;write;_deprecated_timing_model_operate;fill"
 ],
 "microwire_interface_t": [
  "devs/microwire.h",
  "devs/microwire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct microwire_interface {\n    void (*set_cs)(conf_object_t *obj, int cs);\n    void (*set_sk)(conf_object_t *obj, int sk);\n    void (*set_di)(conf_object_t *obj, int di);\n    int (*get_do)(conf_object_t *obj);\n    uint16 (*read_word)(conf_object_t *obj, int offset);\n    void (*write_word)(conf_object_t *obj, int offset, uint16 value);\n} microwire_interface_t;"
   ]
  ],
  "s:microwire_interface_t:set_cs;set_sk;set_di;get_do;read_word;write_word"
 ],
 "mii_interface_t": [
  "devs/mii.h",
  "devs/mii.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mii_interface {\n    int (*serial_access)(conf_object_t *obj, int data_in, int clock);\n    uint16 (*read_register)(conf_object_t *obj, int index);\n    void (*write_register)(conf_object_t *obj, int index, uint16 value);\n} mii_interface_t;"
   ]
  ],
  "s:mii_interface_t:serial_access;read_register;write_register"
 ],
 "mii_management_interface_t": [
  "devs/mii.h",
  "devs/mii.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mii_management_interface {\n    int (*serial_access)(conf_object_t *obj, int data_in, int clock);\n    uint16 (*read_register)(conf_object_t *obj, int phy, int reg);\n    void (*write_register)(conf_object_t *obj, int phy, int reg, uint16 value);\n} mii_management_interface_t;"
   ]
  ],
  "s:mii_management_interface_t:serial_access;read_register;write_register"
 ],
 "mips_cache_instruction_interface_t": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mips_cache_instruction_interface {\n    int (*cache_instruction)(conf_object_t *NOTNULL self, conf_object_t *NOTNULL cpu, uint32 op, logical_address_t vaddr);\n} mips_cache_instruction_interface_t;"
   ]
  ],
  "s:mips_cache_instruction_interface_t:cache_instruction"
 ],
 "mips_coprocessor_interface_t": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mips_coprocessor_interface {\n    uint64 (*read_register)(conf_object_t *NOTNULL obj, uint32 thread_id, uint32 reg, uint32 sel);\n    void (*write_register)(conf_object_t *NOTNULL obj, uint32 thread_id, uint64 value, uint32 reg, uint32 sel);\n} mips_coprocessor_interface_t;"
   ]
  ],
  "s:mips_coprocessor_interface_t:read_register;write_register"
 ],
 "mips_eic_interface_t": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mips_eic_interface {\n    void (*cpu_pending_irqs)(conf_object_t *NOTNULL obj, uint32 cause);\n    uint32 (*requested_ipl)(conf_object_t *NOTNULL obj);\n    uint32 (*requested_offset)(conf_object_t *NOTNULL obj);\n    uint32 (*requested_vect_num)(conf_object_t *NOTNULL obj);\n    uint32 (*reg_set)(conf_object_t *NOTNULL obj);\n    void (*handled)(conf_object_t *NOTNULL obj);\n} mips_eic_interface_t;"
   ]
  ],
  "s:mips_eic_interface_t:cpu_pending_irqs;requested_ipl;requested_offset;requested_vect_num;reg_set;handled"
 ],
 "mips_exception_query_interface_t": [
  "arch/mips-instrumentation.h",
  "arch/mips-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mips_exception_query_interface {\n    logical_address_t (*return_pc)(conf_object_t *cpu, exception_handle_t *handle);\n} mips_exception_query_interface_t;"
   ]
  ],
  "s:mips_exception_query_interface_t:return_pc"
 ],
 "mips_interface_t": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mips_interface {\n    int dummy;\n} mips_interface_t;"
   ]
  ],
  "s:mips_interface_t:dummy"
 ],
 "mips_ite_interface_t": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mips_ite_interface {\n    void (*set_dtag_lo)(conf_object_t *NOTNULL obj, uint32 value);\n    uint32 (*get_dtag_lo)(conf_object_t *NOTNULL obj);\n    uint32 (*get_errctl)(conf_object_t *NOTNULL obj);\n    void (*block_tc)(conf_object_t *NOTNULL obj);\n    void (*gated_exception)(conf_object_t *NOTNULL obj);\n    int (*current_tc_num)(conf_object_t *NOTNULL obj);\n    void (*unblock_tc)(conf_object_t *NOTNULL obj, int tc_num);\n    bool (*is_big_endian)(conf_object_t *NOTNULL obj);\n} mips_ite_interface_t;"
   ]
  ],
  "s:mips_ite_interface_t:set_dtag_lo;get_dtag_lo;get_errctl;block_tc;gated_exception;current_tc_num;unblock_tc;is_big_endian"
 ],
 "mips_memory_transaction_t": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mips_memory_transaction {\n    generic_transaction_t s;\n    unsigned int cache_coherency : 3;\n} mips_memory_transaction_t;"
   ]
  ],
  "s:mips_memory_transaction_t:s;cache_coherency"
 ],
 "mm_free": [
  "util/alloc.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void mm_free(void *ptr);"
   ]
  ],
  "f"
 ],
 "mm_malloc": [
  "util/alloc.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void *mm_malloc(size_t size, size_t typesize, const char *type, const char *file, int line);"
   ]
  ],
  "f"
 ],
 "mm_realloc": [
  "util/alloc.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void *mm_realloc(void *ptr, size_t size, size_t typesize, const char *type, const char *file, int line);"
   ]
  ],
  "f"
 ],
 "mm_strdup": [
  "util/alloc.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "char *mm_strdup(const char *str, const char *file, int line);"
   ]
  ],
  "f"
 ],
 "mm_zalloc": [
  "util/alloc.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void *mm_zalloc(size_t size, size_t typesize, const char *type, const char *file, int line);"
   ]
  ],
  "f"
 ],
 "mmc_interface_t": [
  "model-iface/mmc.h",
  "model-iface/mmc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mmc_interface {\n    int (*send_command)(conf_object_t *obj, uint8 cmd, uint32 args, buffer_t response);\n    int (*read_data)(conf_object_t *obj, buffer_t data);\n    int (*write_data)(conf_object_t *obj, bytes_t data);\n} mmc_interface_t;"
   ]
  ],
  "s:mmc_interface_t:send_command;read_data;write_data"
 ],
 "mod_def_t": [
  "devs/gbic.h",
  "devs/gbic.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int mod_def_t;"
   ]
  ],
  "t"
 ],
 "mouse_interface_t": [
  "model-iface/kbd-interface.h",
  "model-iface/kbd-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct mouse_interface {\n    void (*mouse_event)(conf_object_t *obj, int xmicro, int ymicro, int z, int buttons);\n} mouse_interface_t;"
   ]
  ],
  "s:mouse_interface_t:mouse_event"
 ],
 "multi_level_signal_interface_t": [
  "devs/signal.h",
  "devs/signal.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct multi_level_signal_interface {\n    void (*signal_level_change)(conf_object_t *NOTNULL obj, uint64 level);\n    void (*signal_current_level)(conf_object_t *NOTNULL obj, uint64 level);\n} multi_level_signal_interface_t;"
   ]
  ],
  "s:multi_level_signal_interface_t:signal_level_change;signal_current_level"
 ],
 "named_value_t": [
  "model-iface/describe-registers.h",
  "model-iface/describe-registers.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    const char *name;\n    const char *description;\n    const bytes_t value;\n} named_value_t;"
   ]
  ],
  "s:named_value_t:name;description;value"
 ],
 "nand_flash_interface_t": [
  "devs/nand-flash.h",
  "devs/nand-flash.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct nand_flash_interface {\n    uint16 (*read_access)(conf_object_t *obj);\n    void (*write_access)(conf_object_t *obj, uint16 value);\n    void (*set_command_latch_enable)(conf_object_t *obj, int value);\n    void (*set_address_latch_enable)(conf_object_t *obj, int value);\n    void (*set_write_protect)(conf_object_t *obj, int value);\n    void (*set_spare_area_enable)(conf_object_t *obj, int value);\n} nand_flash_interface_t;"
   ]
  ],
  "s:nand_flash_interface_t:read_access;write_access;set_command_latch_enable;set_address_latch_enable;set_write_protect;set_spare_area_enable"
 ],
 "nano_secs_t": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int64 nano_secs_t;"
   ]
  ],
  "t"
 ],
 "network_breakpoint_interface_t": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct network_breakpoint_interface {\n    int64 (*add)(conf_object_t *NOTNULL obj, bytes_t src_mac_addr, bytes_t dst_mac_addr, int ether_type, break_net_cb_t cb, bool once, int64 bp_id);\n    void (*remove)(conf_object_t *NOTNULL obj, int64 bp_id);\n} network_breakpoint_interface_t;"
   ]
  ],
  "s:network_breakpoint_interface_t:add;remove"
 ],
 "new_dbuffer": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "dbuffer_t *new_dbuffer(void);"
   ]
  ],
  "f"
 ],
 "next_map_t": [
  "model-iface/transaction-instrumentation.h",
  "model-iface/transaction-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    const map_target_t *mt;\n    exception_type_t ex;\n    uint64 addr;\n} next_map_t;"
   ]
  ],
  "s:next_map_t:mt;ex;addr"
 ],
 "nios_cache_interface_t": [
  "arch/nios.h",
  "arch/nios.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct nios_cache_interface {\n    void (*flushd)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*flushda)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*flushi)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*flushp)(conf_object_t *NOTNULL self);\n    void (*initd)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*initda)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*initi)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*sync)(conf_object_t *NOTNULL self);\n} nios_cache_interface_t;"
   ]
  ],
  "s:nios_cache_interface_t:flushd;flushda;flushi;flushp;initd;initda;initi;sync"
 ],
 "nios_custom_interface_t": [
  "arch/nios.h",
  "arch/nios.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct nios_custom_interface {\n    uint32 (*custom)(conf_object_t *NOTNULL self, uint32 n, uint32 a, uint32 b, uint32 c, uint32 rA, uint32 rB, bool readra, bool readrb, bool writerc);\n} nios_custom_interface_t;"
   ]
  ],
  "s:nios_custom_interface_t:custom"
 ],
 "nios_eic_interface_t": [
  "arch/nios.h",
  "arch/nios.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct nios_eic_interface {\n    logical_address_t (*handler)(conf_object_t *NOTNULL obj);\n    uint32 (*level)(conf_object_t *NOTNULL obj);\n    uint32 (*reg_set)(conf_object_t *NOTNULL obj);\n    bool (*nmi)(conf_object_t *NOTNULL obj);\n    void (*handled)(conf_object_t *NOTNULL obj);\n} nios_eic_interface_t;"
   ]
  ],
  "s:nios_eic_interface_t:handler;level;reg_set;nmi;handled"
 ],
 "nios_interface_t": [
  "arch/nios.h",
  "arch/nios.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct nios_interface {\n    int dummy;\n} nios_interface_t;"
   ]
  ],
  "s:nios_interface_t:dummy"
 ],
 "nios_memory_transaction_t": [
  "arch/nios.h",
  "arch/nios.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct nios_memory_transaction {\n    generic_transaction_t s;\n} nios_memory_transaction_t;"
   ]
  ],
  "s:nios_memory_transaction_t:s"
 ],
 "node_id_t": [
  "simulator-iface/osa-types.h",
  "simulator-iface/osa-types.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 node_id_t;"
   ]
  ],
  "t"
 ],
 "notifier_handle_t": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct notifier_handle notifier_handle_t;"
   ]
  ],
  "s:notifier_handle_t"
 ],
 "notifier_type_t": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Notify_Queue_Change,\n    Sim_Notify_Cell_Change,\n    Sim_Notify_Frequency_Change,\n    Sim_Notify_Concurrency_Change,\n    Sim_Notify_Object_Delete,\n    Sim_Notify_Map_Change,\n    Sim_Notify_State_Change,\n    Sim_Notify_Freerunning_Mode_Change,\n    Sim_Notify_Bank_Register_Value_Change\n} notifier_type_t;"
   ]
  ],
  "e:notifier_type_t:Sim_Notify_Queue_Change;Sim_Notify_Cell_Change;Sim_Notify_Frequency_Change;Sim_Notify_Concurrency_Change;Sim_Notify_Object_Delete;Sim_Notify_Map_Change;Sim_Notify_State_Change;Sim_Notify_Freerunning_Mode_Change;Sim_Notify_Bank_Register_Value_Change"
 ],
 "notify_mode_t": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_NM_Read,\n    Sim_NM_Write\n} notify_mode_t;"
   ]
  ],
  "e:notify_mode_t:Sim_NM_Read;Sim_NM_Write"
 ],
 "null_arg_error": [
  "util/help-macros.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void null_arg_error(const char *func, const char *arg);"
   ]
  ],
  "f"
 ],
 "obj_hap_func_t": [
  "simulator/hap-consumer.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*obj_hap_func_t)();"
   ]
  ],
  "t"
 ],
 "object_iter_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    inner_object_iter_t inner;\n    struct {\n        conf_class_t *cls;\n        unsigned idx;\n    } c;\n    struct {\n        unsigned idx;\n    } iface;\n} object_iter_t;"
   ]
  ],
  "s:object_iter_t:inner;c;iface"
 ],
 "opcode_info_interface_t": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct opcode_info_interface {\n    opcode_length_info_t (*get_opcode_length_info)(conf_object_t *obj);\n} opcode_info_interface_t;"
   ]
  ],
  "s:opcode_info_interface_t:get_opcode_length_info"
 ],
 "opcode_length_info_t": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    int min_alignment;\n    int max_length;\n    int avg_length;\n} opcode_length_info_t;"
   ]
  ],
  "s:opcode_length_info_t:min_alignment;max_length;avg_length"
 ],
 "operate_func_t": [
  "model-iface/timing-model.h",
  "model-iface/timing-model.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef cycles_t (*operate_func_t)(conf_object_t *NOTNULL mem_hier, conf_object_t *NOTNULL space, map_list_t *NOTNULL map_list, generic_transaction_t *NOTNULL mem_op);"
   ]
  ],
  "t"
 ],
 "osa_component_interface_t": [
  "simulator-iface/osa-component-interface.h",
  "simulator-iface/osa-component-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_component_interface {\n    conf_object_t *(*get_admin)(conf_object_t *NOTNULL obj);\n    maybe_node_id_t (*get_root_node)(conf_object_t *NOTNULL obj);\n    cancel_id_t (*notify_tracker)(conf_object_t *NOTNULL obj, void (*cb)(cbdata_call_t data), cbdata_register_t data);\n    void (*cancel_notify)(conf_object_t *NOTNULL obj, cancel_id_t cancel_id);\n    bool (*has_tracker)(conf_object_t *NOTNULL obj);\n    attr_value_t (*get_processors)(conf_object_t *NOTNULL obj);\n} osa_component_interface_t;"
   ]
  ],
  "s:osa_component_interface_t:get_admin;get_root_node;notify_tracker;cancel_notify;has_tracker;get_processors"
 ],
 "osa_control_interface_t": [
  "simulator-iface/osa-control-interface.h",
  "simulator-iface/osa-control-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_control_interface {\n    request_id_t (*request)(conf_object_t *NOTNULL obj, const char *initiator);\n    void (*release)(conf_object_t *NOTNULL obj, request_id_t id);\n} osa_control_interface_t;"
   ]
  ],
  "s:osa_control_interface_t:request;release"
 ],
 "osa_control_v2_interface_t": [
  "simulator-iface/osa-control-v2-interface.h",
  "simulator-iface/osa-control-v2-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_control_v2_interface {\n    attr_value_t (*request)(conf_object_t *NOTNULL obj, const char *initiator);\n    void (*release)(conf_object_t *NOTNULL obj, request_id_t id);\n    attr_value_t (*clear_state)(conf_object_t *NOTNULL obj);\n} osa_control_v2_interface_t;"
   ]
  ],
  "s:osa_control_v2_interface_t:request;release;clear_state"
 ],
 "osa_machine_notification_interface_t": [
  "simulator-iface/osa-machine-interfaces.h",
  "simulator-iface/osa-machine-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_machine_notification_interface {\n    cancel_id_t (*notify_mode_change)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, void (*cb)(cbdata_call_t data, conf_object_t *cpu, processor_mode_t old_mode, processor_mode_t new_mode), cbdata_register_t data);\n    cancel_id_t (*notify_exception)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, int exc_num, void (*cb)(cbdata_call_t data, conf_object_t *cpu, int exc_num), cbdata_register_t data);\n    cancel_id_t (*notify_control_reg)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, int reg_num, void (*cb)(cbdata_call_t data, conf_object_t *cpu, int reg_num, uint64 value), cbdata_register_t data);\n    cancel_id_t (*notify_exec_breakpoint)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, uint64 address, uint64 len, bool virt, void (*cb)(cbdata_call_t data, conf_object_t *cpu, uint64 address), cbdata_register_t data);\n    cancel_id_t (*notify_read_breakpoint)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, uint64 address, unsigned len, bool virt, void (*cb)(cbdata_call_t data, conf_object_t *NOTNULL cpu, uint64 address, unsigned len), cbdata_register_t data);\n    cancel_id_t (*notify_write_breakpoint)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, uint64 address, unsigned len, bool virt, void (*cb)(cbdata_call_t data, conf_object_t *NOTNULL cpu, uint64 address, unsigned len, uint64 old_val, uint64 new_val), cbdata_register_t data);\n    void (*cancel)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, cancel_id_t cancel_id);\n    cancel_id_t (*notify_control_reg_read)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, int reg_num, void (*cb)(cbdata_call_t data, conf_object_t *cpu, int reg_num), cbdata_register_t data);\n} osa_machine_notification_interface_t;"
   ]
  ],
  "s:osa_machine_notification_interface_t:notify_mode_change;notify_exception;notify_control_reg;notify_exec_breakpoint;notify_read_breakpoint;notify_write_breakpoint;cancel;notify_control_reg_read"
 ],
 "osa_machine_query_interface_t": [
  "simulator-iface/osa-machine-interfaces.h",
  "simulator-iface/osa-machine-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_machine_query_interface {\n    uint64 (*read_register)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, int reg);\n    int (*get_register_number)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, const char *reg);\n    attr_value_t (*read_phys_memory)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, physical_address_t addr, osa_read_len_t len);\n    attr_value_t (*read_phys_bytes)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, physical_address_t paddr, unsigned len);\n    attr_value_t (*virtual_to_physical)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, uint64 vaddr);\n    processor_mode_t (*cpu_mode)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu);\n    attr_value_t (*get_all_processors)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker);\n    int (*get_exception_number)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, const char *name);\n} osa_machine_query_interface_t;"
   ]
  ],
  "s:osa_machine_query_interface_t:read_register;get_register_number;read_phys_memory;read_phys_bytes;virtual_to_physical;cpu_mode;get_all_processors;get_exception_number"
 ],
 "osa_mapper_admin_interface_t": [
  "simulator-iface/osa-mapper-interfaces.h",
  "simulator-iface/osa-mapper-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_mapper_admin_interface {\n    void (*tracker_updated)(conf_object_t *NOTNULL obj, conf_object_t *initiator, attr_value_t changeset);\n} osa_mapper_admin_interface_t;"
   ]
  ],
  "s:osa_mapper_admin_interface_t:tracker_updated"
 ],
 "osa_mapper_control_interface_t": [
  "simulator-iface/osa-mapper-interfaces.h",
  "simulator-iface/osa-mapper-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_mapper_control_interface {\n    void (*disable)(conf_object_t *NOTNULL obj);\n    bool (*enable)(conf_object_t *NOTNULL obj);\n    void (*clear_state)(conf_object_t *NOTNULL obj);\n} osa_mapper_control_interface_t;"
   ]
  ],
  "s:osa_mapper_control_interface_t:disable;enable;clear_state"
 ],
 "osa_mapper_query_interface_t": [
  "simulator-iface/osa-mapper-interfaces.h",
  "simulator-iface/osa-mapper-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_mapper_query_interface {\n    attr_value_t (*get_process_list)(conf_object_t *NOTNULL obj);\n    conf_object_t *(*get_mapper)(conf_object_t *NOTNULL obj, node_id_t node_id);\n} osa_mapper_query_interface_t;"
   ]
  ],
  "s:osa_mapper_query_interface_t:get_process_list;get_mapper"
 ],
 "osa_micro_checkpoint_interface_t": [
  "simulator-iface/osa-micro-checkpoint-interface.h",
  "simulator-iface/osa-micro-checkpoint-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_micro_checkpoint_interface {\n    void (*started)(conf_object_t *NOTNULL obj);\n    void (*finished)(conf_object_t *NOTNULL obj);\n} osa_micro_checkpoint_interface_t;"
   ]
  ],
  "s:osa_micro_checkpoint_interface_t:started;finished"
 ],
 "osa_node_path_interface_t": [
  "simulator-iface/osa-node-path-interface.h",
  "simulator-iface/osa-node-path-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_node_path_interface {\n    attr_value_t (*matching_nodes)(conf_object_t *NOTNULL obj, node_id_t root_id, attr_value_t node_path_pattern);\n    attr_value_t (*node_path)(conf_object_t *NOTNULL obj, node_id_t node_id);\n} osa_node_path_interface_t;"
   ]
  ],
  "s:osa_node_path_interface_t:matching_nodes;node_path"
 ],
 "osa_node_tree_admin_interface_t": [
  "simulator-iface/osa-node-tree-admin-interface.h",
  "simulator-iface/osa-node-tree-admin-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_node_tree_admin_interface {\n    transaction_id_t (*begin)(conf_object_t *NOTNULL obj, conf_object_t *initiator);\n    void (*end)(conf_object_t *NOTNULL obj, transaction_id_t transaction_id);\n    node_id_t (*create)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL mapper, attr_value_t props);\n    node_id_t (*add)(conf_object_t *NOTNULL obj, node_id_t parent_id, attr_value_t props);\n    void (*update)(conf_object_t *NOTNULL obj, node_id_t node_id, attr_value_t props);\n    void (*remove)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    void (*event)(conf_object_t *NOTNULL obj, node_id_t node_id, const char *event_name, attr_value_t event_data);\n    void (*activate)(conf_object_t *NOTNULL obj, node_id_t node_id, conf_object_t *NOTNULL cpu);\n    void (*deactivate)(conf_object_t *NOTNULL obj, node_id_t node_id, conf_object_t *NOTNULL cpu);\n    cancel_id_t (*register_formatter)(conf_object_t *NOTNULL obj, node_id_t node_id, const char *NOTNULL key, bool recursive, attr_value_t (*formatter)(attr_value_t val));\n    void (*unregister_formatter)(conf_object_t *NOTNULL obj, cancel_id_t node_id);\n    void (*reset)(conf_object_t *NOTNULL obj, node_id_t node_id, attr_value_t props);\n    void (*set_property)(conf_object_t *NOTNULL obj, node_id_t node_id, const char *key, attr_value_t value);\n} osa_node_tree_admin_interface_t;"
   ]
  ],
  "s:osa_node_tree_admin_interface_t:begin;end;create;add;update;remove;event;activate;deactivate;register_formatter;unregister_formatter;reset;set_property"
 ],
 "osa_node_tree_notification_interface_t": [
  "simulator-iface/osa-node-tree-interfaces.h",
  "simulator-iface/osa-node-tree-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_node_tree_notification_interface {\n    cancel_id_t (*notify_create)(conf_object_t *NOTNULL obj, node_id_t node_id, bool recursive, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, node_id_t node_id), cbdata_register_t data);\n    cancel_id_t (*notify_destroy)(conf_object_t *NOTNULL obj, node_id_t node_id, bool recursive, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, node_id_t node_id), cbdata_register_t data);\n    cancel_id_t (*notify_property_change)(conf_object_t *NOTNULL obj, node_id_t node_id, const char *key, bool recursive, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, node_id_t node_id, const char *key, attr_value_t old_val, attr_value_t new_val), cbdata_register_t data);\n    cancel_id_t (*notify_cpu_move_from)(conf_object_t *NOTNULL obj, node_id_t node_id, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, attr_value_t node_path), cbdata_register_t data);\n    cancel_id_t (*notify_cpu_move_to)(conf_object_t *NOTNULL obj, node_id_t node_id, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, attr_value_t node_path), cbdata_register_t data);\n    cancel_id_t (*notify_event)(conf_object_t *NOTNULL obj, node_id_t node_id, const char *event_name, bool recursive, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, node_id_t node_id, const char *event_name, attr_value_t event_data), cbdata_register_t data);\n    cancel_id_t (*notify_enable)(conf_object_t *NOTNULL obj, void (*cb)(cbdata_call_t data, conf_object_t *obj), cbdata_register_t data);\n    cancel_id_t (*notify_disable)(conf_object_t *NOTNULL obj, void (*cb)(cbdata_call_t data, conf_object_t *obj), cbdata_register_t data);\n    void (*cancel_notify)(conf_object_t *NOTNULL obj, cancel_id_t cancel_id);\n    cancel_id_t (*notify_callbacks_done)(conf_object_t *NOTNULL obj, uint64 node_id, void (*cb)(cbdata_call_t data, conf_object_t *obj), cbdata_register_t data);\n} osa_node_tree_notification_interface_t;"
   ]
  ],
  "s:osa_node_tree_notification_interface_t:notify_create;notify_destroy;notify_property_change;notify_cpu_move_from;notify_cpu_move_to;notify_event;notify_enable;notify_disable;cancel_notify;notify_callbacks_done"
 ],
 "osa_node_tree_query_interface_t": [
  "simulator-iface/osa-node-tree-interfaces.h",
  "simulator-iface/osa-node-tree-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_node_tree_query_interface {\n    attr_value_t (*get_root_nodes)(conf_object_t *NOTNULL obj);\n    attr_value_t (*get_node)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    attr_value_t (*get_current_nodes)(conf_object_t *NOTNULL obj, node_id_t base_id, conf_object_t *cpu);\n    attr_value_t (*get_current_processors)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    attr_value_t (*get_all_processors)(conf_object_t *NOTNULL obj);\n    conf_object_t *(*get_mapper)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    attr_value_t (*get_parent)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    attr_value_t (*get_children)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    attr_value_t (*get_formatted_properties)(conf_object_t *NOTNULL obj, uint64 node_id);\n} osa_node_tree_query_interface_t;"
   ]
  ],
  "s:osa_node_tree_query_interface_t:get_root_nodes;get_node;get_current_nodes;get_current_processors;get_all_processors;get_mapper;get_parent;get_children;get_formatted_properties"
 ],
 "osa_parameters_interface_t": [
  "simulator-iface/osa-parameters-interface.h",
  "simulator-iface/osa-parameters-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_parameters_interface {\n    attr_value_t (*get_parameters)(conf_object_t *NOTNULL obj, bool include_children);\n    attr_value_t (*set_parameters)(conf_object_t *NOTNULL obj, attr_value_t parameters);\n    bool (*is_kind_supported)(conf_object_t *NOTNULL obj, const char *kind);\n} osa_parameters_interface_t;"
   ]
  ],
  "s:osa_parameters_interface_t:get_parameters;set_parameters;is_kind_supported"
 ],
 "osa_read_len_t": [
  "simulator-iface/osa-machine-interfaces.h",
  "simulator-iface/osa-machine-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    OSA_Read_One_Byte   = 1,\n    OSA_Read_Two_Byte   = 2,\n    OSA_Read_Four_Byte  = 4,\n    OSA_Read_Eight_Byte = 8\n} osa_read_len_t;"
   ]
  ],
  "e:osa_read_len_t:OSA_Read_One_Byte;OSA_Read_Two_Byte;OSA_Read_Four_Byte;OSA_Read_Eight_Byte"
 ],
 "osa_tracker_component_interface_t": [
  "simulator-iface/osa-tracker-component-interface.h",
  "simulator-iface/osa-tracker-component-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_tracker_component_interface {\n    conf_object_t *(*get_tracker)(conf_object_t *NOTNULL obj);\n    conf_object_t *(*get_mapper)(conf_object_t *NOTNULL obj);\n} osa_tracker_component_interface_t;"
   ]
  ],
  "s:osa_tracker_component_interface_t:get_tracker;get_mapper"
 ],
 "osa_tracker_control_interface_t": [
  "simulator-iface/osa-tracker-control-interface.h",
  "simulator-iface/osa-tracker-control-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_tracker_control_interface {\n    void (*disable)(conf_object_t *NOTNULL obj);\n    bool (*enable)(conf_object_t *NOTNULL obj);\n    void (*clear_state)(conf_object_t *NOTNULL obj);\n    bool (*add_processor)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL cpu);\n    bool (*remove_processor)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL cpu);\n} osa_tracker_control_interface_t;"
   ]
  ],
  "s:osa_tracker_control_interface_t:disable;enable;clear_state;add_processor;remove_processor"
 ],
 "osa_tracker_state_admin_interface_t": [
  "simulator-iface/osa-tracker-state-interfaces.h",
  "simulator-iface/osa-tracker-state-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_tracker_state_admin_interface {\n    transaction_id_t (*begin)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *initiator);\n    void (*end)(conf_object_t *NOTNULL obj, transaction_id_t txid);\n    void (*add)(conf_object_t *NOTNULL obj, entity_id_t entity_id, attr_value_t attributes);\n    void (*remove)(conf_object_t *NOTNULL obj, entity_id_t entity_id);\n    void (*remove_all)(conf_object_t *NOTNULL obj);\n    void (*set_attribute)(conf_object_t *NOTNULL obj, entity_id_t entity_id, const char *key, attr_value_t val);\n    void (*update)(conf_object_t *NOTNULL obj, entity_id_t entity_id, attr_value_t attributes);\n    void (*event)(conf_object_t *NOTNULL obj, entity_id_t entity_id, const char *event_name, attr_value_t event_data);\n} osa_tracker_state_admin_interface_t;"
   ]
  ],
  "s:osa_tracker_state_admin_interface_t:begin;end;add;remove;remove_all;set_attribute;update;event"
 ],
 "osa_tracker_state_notification_interface_t": [
  "simulator-iface/osa-tracker-state-interfaces.h",
  "simulator-iface/osa-tracker-state-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_tracker_state_notification_interface {\n    void (*subscribe_tracker)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL mapper, conf_object_t *NOTNULL tracker);\n    void (*unsubscribe_tracker)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL mapper, conf_object_t *NOTNULL tracker);\n} osa_tracker_state_notification_interface_t;"
   ]
  ],
  "s:osa_tracker_state_notification_interface_t:subscribe_tracker;unsubscribe_tracker"
 ],
 "osa_tracker_state_query_interface_t": [
  "simulator-iface/osa-tracker-state-interfaces.h",
  "simulator-iface/osa-tracker-state-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct osa_tracker_state_query_interface {\n    attr_value_t (*_deprecated)(conf_object_t *NOTNULL obj);\n    attr_value_t (*get_entities)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker);\n    attr_value_t (*get_entity)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, entity_id_t id);\n} osa_tracker_state_query_interface_t;"
   ]
  ],
  "s:osa_tracker_state_query_interface_t:_deprecated;get_entities;get_entity"
 ],
 "output_handler_t": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*output_handler_t)(lang_void *data, const char *src, size_t length);"
   ]
  ],
  "t"
 ],
 "packet_interface_t": [
  "model-iface/packet.h",
  "model-iface/packet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct packet_interface {\n    void (*transfer)(conf_object_t *obj, bytes_t data);\n} packet_interface_t;"
   ]
  ],
  "s:packet_interface_t:transfer"
 ],
 "page_crossing_info_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Page_Crossing_None,\n    Sim_Page_Crossing_First,\n    Sim_Page_Crossing_Second\n} page_crossing_info_t;"
   ]
  ],
  "e:page_crossing_info_t:Sim_Page_Crossing_None;Sim_Page_Crossing_First;Sim_Page_Crossing_Second"
 ],
 "page_t": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct page page_t;"
   ]
  ],
  "s:page_t"
 ],
 "parity_mode_t": [
  "devs/serial-device.h",
  "devs/serial-device.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Parity_None,\n    Parity_Even,\n    Parity_Odd\n} parity_mode_t;"
   ]
  ],
  "e:parity_mode_t:Parity_None;Parity_Even;Parity_Odd"
 ],
 "pc_step_t": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef simtime_t pc_step_t;"
   ]
  ],
  "t"
 ],
 "pci_bridge_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pci_bridge_interface {\n    void (*system_error)(conf_object_t *obj);\n    void (*raise_interrupt)(conf_object_t *obj, conf_object_t *pci_bus, int device, int pin);\n    void (*lower_interrupt)(conf_object_t *obj, conf_object_t *pci_bus, int device, int pin);\n} pci_bridge_interface_t;"
   ]
  ],
  "s:pci_bridge_interface_t:system_error;raise_interrupt;lower_interrupt"
 ],
 "pci_bus_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pci_bus_interface {\n    exception_type_t (*memory_access)(conf_object_t *obj, generic_transaction_t *NOTNULL mem_op);\n    void (*raise_interrupt)(conf_object_t *obj, conf_object_t *NOTNULL dev, int pin);\n    void (*lower_interrupt)(conf_object_t *obj, conf_object_t *NOTNULL dev, int pin);\n    int (*interrupt_acknowledge)(conf_object_t *obj);\n    int (*add_map)(conf_object_t *obj, conf_object_t *dev, addr_space_t space, conf_object_t *target, map_info_t info);\n    int (*remove_map)(conf_object_t *obj, conf_object_t *dev, addr_space_t space, int function);\n    void (*set_bus_number)(conf_object_t *obj, int bus_id);\n    void (*set_sub_bus_number)(conf_object_t *obj, int bus_id);\n    void (*add_default)(conf_object_t *obj, conf_object_t *dev, addr_space_t space, conf_object_t *target, map_info_t info);\n    void (*remove_default)(conf_object_t *obj, addr_space_t space);\n    void (*bus_reset)(conf_object_t *obj);\n    void (*special_cycle)(conf_object_t *obj, uint32 value);\n    void (*system_error)(conf_object_t *obj);\n    int (*get_bus_address)(conf_object_t *obj, conf_object_t *NOTNULL dev);\n    void (*set_device_status)(conf_object_t *obj, int device, int function, int enabled);\n    conf_object_t *(*configuration_space)(conf_object_t *obj);\n    conf_object_t *(*io_space)(conf_object_t *obj);\n    conf_object_t *(*memory_space)(conf_object_t *obj);\n} pci_bus_interface_t;"
   ]
  ],
  "s:pci_bus_interface_t:memory_access;raise_interrupt;lower_interrupt;interrupt_acknowledge;add_map;remove_map;set_bus_number;set_sub_bus_number;add_default;remove_default;bus_reset;special_cycle;system_error;get_bus_address;set_device_status;configuration_space;io_space;memory_space"
 ],
 "pci_device_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pci_device_interface {\n    void (*bus_reset)(conf_object_t *obj);\n    int (*_deprecated_interrupt_acknowledge)(conf_object_t *obj);\n    void (*_deprecated_special_cycle)(conf_object_t *obj, uint32 value);\n    void (*system_error)(conf_object_t *obj);\n    void (*interrupt_raised)(conf_object_t *obj, int pin);\n    void (*interrupt_lowered)(conf_object_t *obj, int pin);\n} pci_device_interface_t;"
   ]
  ],
  "s:pci_device_interface_t:bus_reset;_deprecated_interrupt_acknowledge;_deprecated_special_cycle;system_error;interrupt_raised;interrupt_lowered"
 ],
 "pci_downstream_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pci_downstream_interface {\n    exception_type_t (*operation)(conf_object_t *obj, generic_transaction_t *mem_op, addr_space_t space);\n} pci_downstream_interface_t;"
   ]
  ],
  "s:pci_downstream_interface_t:operation"
 ],
 "pci_express_hotplug_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6"
    ],
    "typedef struct pci_express_hotplug_interface {\n    void (*presence_change)(conf_object_t *dst, conf_object_t *NOTNULL src, int is_present);\n    void (*inject_power_fault)(conf_object_t *obj);\n    void (*press_attention_button)(conf_object_t *obj);\n    void (*set_mrl_state)(conf_object_t *obj, int locked);\n    int (*get_mrl_state)(conf_object_t *obj);\n} pci_express_hotplug_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:pci_express_hotplug_interface_t:presence_change;inject_power_fault;press_attention_button;set_mrl_state;get_mrl_state"
 ],
 "pci_express_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6"
    ],
    "typedef struct pci_express_interface {\n    int (*send_message)(conf_object_t *dst, conf_object_t *src, pcie_message_type_t type, byte_string_t payload);\n} pci_express_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:pci_express_interface_t:send_message"
 ],
 "pci_interrupt_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pci_interrupt_interface {\n    void (*raise_interrupt)(conf_object_t *obj, conf_object_t *pci_bus, int device, int pin);\n    void (*lower_interrupt)(conf_object_t *obj, conf_object_t *pci_bus, int device, int pin);\n} pci_interrupt_interface_t;"
   ]
  ],
  "s:pci_interrupt_interface_t:raise_interrupt;lower_interrupt"
 ],
 "pci_interrupt_pin_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCI_INTERRUPT_INTA = 1,\n    PCI_INTERRUPT_INTB = 2,\n    PCI_INTERRUPT_INTC = 3,\n    PCI_INTERRUPT_INTD = 4\n} pci_interrupt_pin_t;"
   ]
  ],
  "e:pci_interrupt_pin_t:PCI_INTERRUPT_INTA;PCI_INTERRUPT_INTB;PCI_INTERRUPT_INTC;PCI_INTERRUPT_INTD"
 ],
 "pci_memory_transaction_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pci_memory_transaction {\n    generic_transaction_t _internal_s;\n    uint32 _internal_original_size;\n    int _internal_bus_address;\n    int _internal_bus_number;\n    int _internal_device_number;\n    int _internal_function_number;\n    uint32 _internal_tlp_prefix;\n} pci_memory_transaction_t;"
   ]
  ],
  "s:pci_memory_transaction_t:_internal_s;_internal_original_size;_internal_bus_address;_internal_bus_number;_internal_device_number;_internal_function_number;_internal_tlp_prefix"
 ],
 "pci_multi_function_device_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pci_multi_function_device_interface {\n    attr_value_t (*supported_functions)(conf_object_t *obj);\n} pci_multi_function_device_interface_t;"
   ]
  ],
  "s:pci_multi_function_device_interface_t:supported_functions"
 ],
 "pci_upstream_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pci_upstream_interface {\n    exception_type_t (*operation)(conf_object_t *obj, generic_transaction_t *mem_op, addr_space_t space);\n} pci_upstream_interface_t;"
   ]
  ],
  "s:pci_upstream_interface_t:operation"
 ],
 "pci_upstream_operation_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pci_upstream_operation_interface {\n    exception_type_t (*read)(conf_object_t *obj, conf_object_t *initiator, uint16 rid, addr_space_t space, physical_address_t address, buffer_t buffer);\n    exception_type_t (*write)(conf_object_t *obj, conf_object_t *initiator, uint16 rid, addr_space_t space, physical_address_t address, bytes_t buffer);\n} pci_upstream_operation_interface_t;"
   ]
  ],
  "s:pci_upstream_operation_interface_t:read;write"
 ],
 "pcie_adapter_compat_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6"
    ],
    "typedef struct pcie_adapter_compat_interface {\n    void (*set_secondary_bus_number)(conf_object_t *obj, int secondary_bus_number);\n} pcie_adapter_compat_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:pcie_adapter_compat_interface_t:set_secondary_bus_number"
 ],
 "pcie_at_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCIE_AT_Not_Set,\n    PCIE_AT_Untranslated,\n    PCIE_AT_Translation_Request,\n    PCIE_AT_Translated\n} pcie_at_t;"
   ]
  ],
  "e:pcie_at_t:PCIE_AT_Not_Set;PCIE_AT_Untranslated;PCIE_AT_Translation_Request;PCIE_AT_Translated"
 ],
 "pcie_ats_invalidate_request_payload_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef union {\n    struct {\n        uint64 global : 1;\n        uint64 rsvd : 10;\n        uint64 s : 1;\n        uint64 untranslated_addr : 52;\n    } field;\n    uint64 u64;\n} pcie_ats_invalidate_request_payload_t;"
   ]
  ],
  "u:pcie_ats_invalidate_request_payload_t:field;u64"
 ],
 "pcie_ats_translation_completion_entry_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef union {\n    struct {\n        uint64 r : 1;\n        uint64 w : 1;\n        uint64 u : 1;\n        uint64 exe : 1;\n        uint64 priv : 1;\n        uint64 global : 1;\n        uint64 ama : 3;\n        uint64 cxl_io : 1;\n        uint64 n : 1;\n        uint64 s : 1;\n        uint64 translated_addr : 52;\n    } field;\n    uint64 u64;\n} pcie_ats_translation_completion_entry_t;"
   ]
  ],
  "u:pcie_ats_translation_completion_entry_t:field;u64"
 ],
 "pcie_byte_count_ret_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 val;\n} pcie_byte_count_ret_t;"
   ]
  ],
  "s:pcie_byte_count_ret_t:val"
 ],
 "pcie_device_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pcie_device_interface {\n    void (*connected)(conf_object_t *obj, conf_object_t *port_obj, uint16 device_id);\n    void (*disconnected)(conf_object_t *obj, conf_object_t *port_obj, uint16 device_id);\n    void (*hot_reset)(conf_object_t *obj);\n} pcie_device_interface_t;"
   ]
  ],
  "s:pcie_device_interface_t:connected;disconnected;hot_reset"
 ],
 "pcie_ecs_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCIE_ECS_Legacy   = 0,\n    PCIE_ECS_SIG_SFW  = 1,\n    PCIE_ECS_SIG_OS   = 2,\n    PCIE_ECS_Extended = 3\n} pcie_ecs_t;"
   ]
  ],
  "e:pcie_ecs_t:PCIE_ECS_Legacy;PCIE_ECS_SIG_SFW;PCIE_ECS_SIG_OS;PCIE_ECS_Extended"
 ],
 "pcie_error_ret_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    pcie_error_t val;\n} pcie_error_ret_t;"
   ]
  ],
  "s:pcie_error_ret_t:val"
 ],
 "pcie_error_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCIE_Error_Not_Set,\n    PCIE_Error_Unsupported_Request,\n    PCIE_Error_Completer_Abort,\n    PCIE_Error_Master_Abort,\n    PCIE_Error_No_Error,\n    PCIE_Error_Configuration_Request_Retry_Status\n} pcie_error_t;"
   ]
  ],
  "e:pcie_error_t:PCIE_Error_Not_Set;PCIE_Error_Unsupported_Request;PCIE_Error_Completer_Abort;PCIE_Error_Master_Abort;PCIE_Error_No_Error;PCIE_Error_Configuration_Request_Retry_Status"
 ],
 "pcie_hotplug_events_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pcie_hotplug_events_interface {\n    void (*presence_change)(conf_object_t *obj, pcie_hotplug_pd_t state);\n    void (*power_fault)(conf_object_t *obj);\n    void (*attention_button_pressed)(conf_object_t *obj);\n    void (*mrl_sensor)(conf_object_t *obj, pcie_hotplug_mrl_t state);\n    void (*data_link_layer)(conf_object_t *obj, bool is_active);\n} pcie_hotplug_events_interface_t;"
   ]
  ],
  "s:pcie_hotplug_events_interface_t:presence_change;power_fault;attention_button_pressed;mrl_sensor;data_link_layer"
 ],
 "pcie_hotplug_mrl_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCIE_HP_MRL_Closed = 0,\n    PCIE_HP_MRL_Open   = 1\n} pcie_hotplug_mrl_t;"
   ]
  ],
  "e:pcie_hotplug_mrl_t:PCIE_HP_MRL_Closed;PCIE_HP_MRL_Open"
 ],
 "pcie_hotplug_pd_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCIE_HP_PD_Adapter_Not_Present = 0,\n    PCIE_HP_PD_Adapter_Present     = 1\n} pcie_hotplug_pd_t;"
   ]
  ],
  "e:pcie_hotplug_pd_t:PCIE_HP_PD_Adapter_Not_Present;PCIE_HP_PD_Adapter_Present"
 ],
 "pcie_ide_secured_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    bool t;\n    bool k;\n    bool m;\n    bool p;\n    uint8 sub_stream;\n    uint8 stream_id;\n    uint8 pr_sent_counter;\n} pcie_ide_secured_t;"
   ]
  ],
  "s:pcie_ide_secured_t:t;k;m;p;sub_stream;stream_id;pr_sent_counter"
 ],
 "pcie_link_negotiation_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    pcie_link_speed_t maximum_link_speed;\n    pcie_link_width_t maximum_link_width;\n    pcie_link_speed_t negotiated_link_speed;\n    pcie_link_width_t negotiated_link_width;\n} pcie_link_negotiation_t;"
   ]
  ],
  "s:pcie_link_negotiation_t:maximum_link_speed;maximum_link_width;negotiated_link_speed;negotiated_link_width"
 ],
 "pcie_link_speed_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCIE_Link_Speed_Undefined = 0,\n    PCIE_Link_Speed_2_5       = 1,\n    PCIE_Link_Speed_5         = 2,\n    PCIE_Link_Speed_8         = 4,\n    PCIE_Link_Speed_16        = 8,\n    PCIE_Link_Speed_32        = 16,\n    PCIE_Link_Speed_64        = 32\n} pcie_link_speed_t;"
   ]
  ],
  "e:pcie_link_speed_t:PCIE_Link_Speed_Undefined;PCIE_Link_Speed_2_5;PCIE_Link_Speed_5;PCIE_Link_Speed_8;PCIE_Link_Speed_16;PCIE_Link_Speed_32;PCIE_Link_Speed_64"
 ],
 "pcie_link_training_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pcie_link_training_interface {\n    bool (*trigger)(conf_object_t *obj, uint16 device_id);\n} pcie_link_training_interface_t;"
   ]
  ],
  "s:pcie_link_training_interface_t:trigger"
 ],
 "pcie_link_width_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCIE_Link_Width_Undefined = 0,\n    PCIE_Link_Width_x1        = 1,\n    PCIE_Link_Width_x2        = 2,\n    PCIE_Link_Width_x4        = 4,\n    PCIE_Link_Width_x8        = 8,\n    PCIE_Link_Width_x16       = 16\n} pcie_link_width_t;"
   ]
  ],
  "e:pcie_link_width_t:PCIE_Link_Width_Undefined;PCIE_Link_Width_x1;PCIE_Link_Width_x2;PCIE_Link_Width_x4;PCIE_Link_Width_x8;PCIE_Link_Width_x16"
 ],
 "pcie_map_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pcie_map_interface {\n    void (*add_map)(conf_object_t *obj, conf_object_t *map_obj, map_info_t info, pcie_type_t type);\n    void (*del_map)(conf_object_t *obj, conf_object_t *map_obj, physical_address_t base, pcie_type_t type);\n    void (*add_function)(conf_object_t *obj, conf_object_t *map_obj, uint16 device_and_function);\n    void (*del_function)(conf_object_t *obj, conf_object_t *map_obj, uint16 device_and_function);\n    void (*enable_function)(conf_object_t *obj, uint16 device_and_function);\n    void (*disable_function)(conf_object_t *obj, uint16 device_and_function);\n    uint16 (*get_device_id)(conf_object_t *obj, conf_object_t *dev_obj);\n} pcie_map_interface_t;"
   ]
  ],
  "s:pcie_map_interface_t:add_map;del_map;add_function;del_function;enable_function;disable_function;get_device_id"
 ],
 "pcie_message_type_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCIE_ATS_Invalidate               = 1,\n    PCIE_ATS_Invalidate_Completion    = 2,\n    PCIE_PRS_Request                  = 4,\n    PCIE_PRS_Response                 = 5,\n    PCIE_Latency_Tolerance_Reporting  = 16,\n    PCIE_Optimized_Buffer_Flush_Fill  = 18,\n    PCIE_Msg_Assert_INTA              = 32,\n    PCIE_Msg_Assert_INTB              = 33,\n    PCIE_Msg_Assert_INTC              = 34,\n    PCIE_Msg_Assert_INTD              = 35,\n    PCIE_Msg_Deassert_INTA            = 36,\n    PCIE_Msg_Deassert_INTB            = 37,\n    PCIE_Msg_Deassert_INTC            = 38,\n    PCIE_Msg_Deassert_INTD            = 39,\n    PCIE_PM_Active_State_Nak          = 20,\n    PCIE_PM_PME                       = 24,\n    PCIE_PM_Turn_Off                  = 25,\n    PCIE_PM_PME_TO_Ack                = 27,\n    PCIE_ERR_COR                      = 48,\n    PCIE_ERR_NONFATAL                 = 49,\n    PCIE_ERR_FATAL                    = 51,\n    PCIE_Unlock                       = 0,\n    PCIE_Set_Slot_Power_Limit         = 80,\n    PCIE_Precision_Time_Measurement   = 82,\n    PCIE_HP_Power_Indicator_On        = 69,\n    PCIE_HP_Power_Indicator_Blink     = 71,\n    PCIE_HP_Power_Indicator_Off       = 68,\n    PCIE_HP_Attention_Button_Pressed  = 72,\n    PCIE_HP_Attention_Indicator_On    = 65,\n    PCIE_HP_Attention_Indicator_Blink = 67,\n    PCIE_HP_Attention_Indicator_Off   = 64,\n    PCIE_Vendor_Defined_Type_0        = 126,\n    PCIE_Vendor_Defined_Type_1        = 127,\n    PCIE_Locked_Transaction           = 0,\n    PCIE_DLL_Link_Down                = ...,\n    PCIE_DLL_Link_Up                  = ...\n} pcie_message_type_t;"
   ]
  ],
  "e:pcie_message_type_t:PCIE_ATS_Invalidate;PCIE_ATS_Invalidate_Completion;PCIE_PRS_Request;PCIE_PRS_Response;PCIE_Latency_Tolerance_Reporting;PCIE_Optimized_Buffer_Flush_Fill;PCIE_Msg_Assert_INTA;PCIE_Msg_Assert_INTB;PCIE_Msg_Assert_INTC;PCIE_Msg_Assert_INTD;PCIE_Msg_Deassert_INTA;PCIE_Msg_Deassert_INTB;PCIE_Msg_Deassert_INTC;PCIE_Msg_Deassert_INTD;PCIE_PM_Active_State_Nak;PCIE_PM_PME;PCIE_PM_Turn_Off;PCIE_PM_PME_TO_Ack;PCIE_ERR_COR;PCIE_ERR_NONFATAL;PCIE_ERR_FATAL;PCIE_Unlock;PCIE_Set_Slot_Power_Limit;PCIE_Precision_Time_Measurement;PCIE_HP_Power_Indicator_On;PCIE_HP_Power_Indicator_Blink;PCIE_HP_Power_Indicator_Off;PCIE_HP_Attention_Button_Pressed;PCIE_HP_Attention_Indicator_On;PCIE_HP_Attention_Indicator_Blink;PCIE_HP_Attention_Indicator_Off;PCIE_Vendor_Defined_Type_0;PCIE_Vendor_Defined_Type_1;PCIE_Locked_Transaction;PCIE_DLL_Link_Down;PCIE_DLL_Link_Up"
 ],
 "pcie_msg_route_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCIE_Msg_Route_Not_Set,\n    PCIE_Msg_Route_Upstream,\n    PCIE_Msg_Route_Address,\n    PCIE_Msg_Route_ID,\n    PCIE_Msg_Route_Broadcast,\n    PCIE_Msg_Route_Terminate,\n    PCIE_Msg_Route_Gather\n} pcie_msg_route_t;"
   ]
  ],
  "e:pcie_msg_route_t:PCIE_Msg_Route_Not_Set;PCIE_Msg_Route_Upstream;PCIE_Msg_Route_Address;PCIE_Msg_Route_ID;PCIE_Msg_Route_Broadcast;PCIE_Msg_Route_Terminate;PCIE_Msg_Route_Gather"
 ],
 "pcie_pasid_info_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef union {\n    struct {\n        uint32 pasid : 20;\n        uint32 exe : 1;\n        uint32 priv : 1;\n    } field;\n    uint32 u32;\n} pcie_pasid_info_t;"
   ]
  ],
  "u:pcie_pasid_info_t:field;u32"
 ],
 "pcie_port_control_interface_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pcie_port_control_interface {\n    void (*set_secondary_bus_number)(conf_object_t *obj, uint64 value);\n    void (*hot_reset)(conf_object_t *obj);\n} pcie_port_control_interface_t;"
   ]
  ],
  "s:pcie_port_control_interface_t:set_secondary_bus_number;hot_reset"
 ],
 "pcie_prs_page_group_response_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef union {\n    struct {\n        uint16 prgi : 9;\n        uint16 rsvd : 3;\n        uint16 response_code : 4;\n    } field;\n    uint16 u16;\n} pcie_prs_page_group_response_t;"
   ]
  ],
  "u:pcie_prs_page_group_response_t:field;u16"
 ],
 "pcie_prs_page_request_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef union {\n    struct {\n        uint64 r : 1;\n        uint64 w : 1;\n        uint64 l : 1;\n        uint64 prgi : 9;\n        uint64 page_addr : 52;\n    } field;\n    uint64 u64;\n} pcie_prs_page_request_t;"
   ]
  ],
  "u:pcie_prs_page_request_t:field;u64"
 ],
 "pcie_prs_response_code_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCIE_PRS_Response_Success         = 0,\n    PCIE_PRS_Response_Invalid_Request = 1,\n    PCIE_PRS_Response_Failure         = 15\n} pcie_prs_response_code_t;"
   ]
  ],
  "e:pcie_prs_response_code_t:PCIE_PRS_Response_Success;PCIE_PRS_Response_Invalid_Request;PCIE_PRS_Response_Failure"
 ],
 "pcie_type_t": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PCIE_Type_Not_Set,\n    PCIE_Type_Mem,\n    PCIE_Type_IO,\n    PCIE_Type_Cfg,\n    PCIE_Type_Msg,\n    PCIE_Type_Other\n} pcie_type_t;"
   ]
  ],
  "e:pcie_type_t:PCIE_Type_Not_Set;PCIE_Type_Mem;PCIE_Type_IO;PCIE_Type_Cfg;PCIE_Type_Msg;PCIE_Type_Other"
 ],
 "physical_address_t": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 physical_address_t;"
   ]
  ],
  "t"
 ],
 "physical_block_t": [
  "processor/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    int valid;\n    physical_address_t address;\n    physical_address_t block_start;\n    physical_address_t block_end;\n} physical_block_t;"
   ]
  ],
  "s:physical_block_t:valid;address;block_start;block_end"
 ],
 "pico_secs_t": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int64 pico_secs_t;"
   ]
  ],
  "t"
 ],
 "pmr_interface_t": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pmr_interface {\n    uint64 (*get)(conf_object_t *obj, int pmr_number, bool instruction_read);\n    void (*set)(conf_object_t *obj, int pmr_number, uint64 value, bool instruction_write);\n} pmr_interface_t;"
   ]
  ],
  "s:pmr_interface_t:get;set"
 ],
 "pool_protect_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct pool_protect_interface {\n    int (*create_group)(conf_object_t *obj, conf_object_t *image_obj);\n    void (*protect)(conf_object_t *obj, int id);\n} pool_protect_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:pool_protect_interface_t:create_group;protect"
 ],
 "port_space_interface_t": [
  "devs/memory-space.h",
  "devs/memory-space.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct port_space_interface {\n    exception_type_t (*port_operation)(conf_object_t *NOTNULL pspace_obj, generic_transaction_t *NOTNULL mop, map_info_t map_info);\n    attr_value_t (*read)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, int length, int inquiry);\n    exception_type_t (*write)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, attr_value_t data, int inquiry);\n} port_space_interface_t;"
   ]
  ],
  "s:port_space_interface_t:port_operation;read;write"
 ],
 "ppc_decoration_t": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    ppc_decoration_type_t type;\n    uint64 data;\n} ppc_decoration_t;"
   ]
  ],
  "s:ppc_decoration_t:type;data"
 ],
 "ppc_decoration_type_t": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Decoration_None,\n    Decoration_Notify,\n    Decoration_Load,\n    Decoration_Store\n} ppc_decoration_type_t;"
   ]
  ],
  "e:ppc_decoration_type_t:Decoration_None;Decoration_Notify;Decoration_Load;Decoration_Store"
 ],
 "ppc_interface_t": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ppc_interface {\n    void (*clear_atomic_reservation_bit)(conf_object_t *cpu);\n    void (*raise_machine_check_exception)(conf_object_t *cpu, ppc_mc_exc_t exc);\n    unsigned (*get_timebase_enabled)(conf_object_t *cpu);\n    void (*set_timebase_enabled)(conf_object_t *cpu, unsigned enabled);\n    ppc_sleep_state_t (*get_sleep_state)(conf_object_t *cpu);\n    void (*set_sleep_state)(conf_object_t *cpu, ppc_sleep_state_t state);\n} ppc_interface_t;"
   ]
  ],
  "s:ppc_interface_t:clear_atomic_reservation_bit;raise_machine_check_exception;get_timebase_enabled;set_timebase_enabled;get_sleep_state;set_sleep_state"
 ],
 "ppc_mc_exc_t": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_PPC_Generic_MC,\n    Sim_PPC_MC_TEA,\n    Sim_PPC_MC_MCP,\n    Sim_PPC_Bus_Address_Parity,\n    Sim_PPC_Bus_Data_Parity,\n    Sim_PPC_Instruction_Cache_Parity,\n    Sim_PPC_Data_Cache_Parity,\n    Sim_PPC_L2_Data_Parity,\n    Sim_PPC_L3_Data_Parity,\n    Sim_PPC_L3_Address_Parity,\n    Sim_PPC970_Data_Cache_Parity,\n    Sim_PPC970_Data_Cache_Tag_Parity,\n    Sim_PPC970_D_ERAT_Parity,\n    Sim_PPC970_TLB_Parity,\n    Sim_PPC970_SLB_Parity,\n    Sim_PPC970_L2_Load_ECC_Parity,\n    Sim_PPC970_L2_Page_Table_ECC_Parity,\n    Sim_PPC970_Uncacheable_Load_Parity,\n    Sim_PPC970_MC_External\n} ppc_mc_exc_t;"
   ]
  ],
  "e:ppc_mc_exc_t:Sim_PPC_Generic_MC;Sim_PPC_MC_TEA;Sim_PPC_MC_MCP;Sim_PPC_Bus_Address_Parity;Sim_PPC_Bus_Data_Parity;Sim_PPC_Instruction_Cache_Parity;Sim_PPC_Data_Cache_Parity;Sim_PPC_L2_Data_Parity;Sim_PPC_L3_Data_Parity;Sim_PPC_L3_Address_Parity;Sim_PPC970_Data_Cache_Parity;Sim_PPC970_Data_Cache_Tag_Parity;Sim_PPC970_D_ERAT_Parity;Sim_PPC970_TLB_Parity;Sim_PPC970_SLB_Parity;Sim_PPC970_L2_Load_ECC_Parity;Sim_PPC970_L2_Page_Table_ECC_Parity;Sim_PPC970_Uncacheable_Load_Parity;Sim_PPC970_MC_External"
 ],
 "ppc_mem_instr_origin_t": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Normal_Load_Store     = 0,\n    Caching_Inhibited,\n    Instr_Multiple,\n    Instr_String,\n    Instr_Altivec_Element,\n    Instr_dcbt,\n    Instr_dcbst,\n    Instr_dcbtst,\n    Instr_dcbi,\n    Instr_dcbf,\n    Instr_dcbfl,\n    Instr_dcba,\n    Instr_dcbz,\n    Instr_icbi,\n    Instr_dst,\n    Instr_dstt,\n    Instr_dstst,\n    Instr_dststt,\n    Instr_dcblc_l1,\n    Instr_dcblc_l2,\n    Instr_dcbtls_l1,\n    Instr_dcbtls_l2,\n    Instr_dcbtstls_l1,\n    Instr_dcbtstls_l2,\n    Instr_icblc_l1,\n    Instr_icblc_l2,\n    Instr_icbtls_l1,\n    Instr_icbtls_l2,\n    Instr_lwarx,\n    Instr_stwcx,\n    Instr_ldarx,\n    Instr_stdcx,\n    Instr_lq,\n    Instr_stq,\n    Instr_sync,\n    Instr_eieio,\n    Instr_ecowx,\n    Instr_eciwx,\n    Instr_tlbie,\n    Instr_tlbsync,\n    Instr_isync,\n    Instr_lfdp,\n    Instr_stfdp,\n    Instr_spe,\n    Instr_dcbal,\n    Instr_dcblc_pc,\n    Instr_dcbtls_pc,\n    Instr_dcbtstls_pc,\n    Instr_icblc_pc,\n    Instr_icbtls_pc,\n    Instr_Fpu\n} ppc_mem_instr_origin_t;"
   ]
  ],
  "e:ppc_mem_instr_origin_t:Normal_Load_Store;Caching_Inhibited;Instr_Multiple;Instr_String;Instr_Altivec_Element;Instr_dcbt;Instr_dcbst;Instr_dcbtst;Instr_dcbi;Instr_dcbf;Instr_dcbfl;Instr_dcba;Instr_dcbz;Instr_icbi;Instr_dst;Instr_dstt;Instr_dstst;Instr_dststt;Instr_dcblc_l1;Instr_dcblc_l2;Instr_dcbtls_l1;Instr_dcbtls_l2;Instr_dcbtstls_l1;Instr_dcbtstls_l2;Instr_icblc_l1;Instr_icblc_l2;Instr_icbtls_l1;Instr_icbtls_l2;Instr_lwarx;Instr_stwcx;Instr_ldarx;Instr_stdcx;Instr_lq;Instr_stq;Instr_sync;Instr_eieio;Instr_ecowx;Instr_eciwx;Instr_tlbie;Instr_tlbsync;Instr_isync;Instr_lfdp;Instr_stfdp;Instr_spe;Instr_dcbal;Instr_dcblc_pc;Instr_dcbtls_pc;Instr_dcbtstls_pc;Instr_icblc_pc;Instr_icbtls_pc;Instr_Fpu"
 ],
 "ppc_memory_transaction_t": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ppc_memory_transaction {\n    generic_transaction_t s;\n    processor_mode_t mode;\n    ppc_mem_instr_origin_t instr_origin;\n    logical_address_t ea_origin;\n    uint8 wimg;\n    uint8 alignment;\n    uint8 inhibit_exception;\n    uint8 external_pid;\n    ppc_decoration_t decoration;\n} ppc_memory_transaction_t;"
   ]
  ],
  "s:ppc_memory_transaction_t:s;mode;instr_origin;ea_origin;wimg;alignment;inhibit_exception;external_pid;decoration"
 ],
 "ppc_sleep_state_t": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    PPC_Sleep_Awake,\n    PPC_Sleep_MSR,\n    PPC_Sleep_Doze,\n    PPC_Sleep_Nap,\n    PPC_Sleep_Sleep,\n    PPC_Sleep_Rvwinkle,\n    PPC_Sleep_Wait,\n    PPC_Sleep_Waitrsv\n} ppc_sleep_state_t;"
   ]
  ],
  "e:ppc_sleep_state_t:PPC_Sleep_Awake;PPC_Sleep_MSR;PPC_Sleep_Doze;PPC_Sleep_Nap;PPC_Sleep_Sleep;PPC_Sleep_Rvwinkle;PPC_Sleep_Wait;PPC_Sleep_Waitrsv"
 ],
 "ppc_spr_access_type_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef gen_spr_access_type_t ppc_spr_access_type_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "e:gen_spr_access_type_t:Sim_Gen_Spr_Instruction_Access;Sim_Gen_Spr_Attribute_Access;Sim_Gen_Spr_Int_Register_Access;Sim_PPC_Spr_Instruction_Access;Sim_PPC_Spr_Attribute_Access;Sim_PPC_Spr_Int_Register_Access"
 ],
 "ppc_spr_ret_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef gen_spr_ret_t ppc_spr_ret_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "e:gen_spr_ret_t:Sim_Gen_Spr_Ok;Sim_Gen_Spr_Illegal;Sim_Gen_Spr_Privilege;Sim_Gen_Spr_Processor_Sleeps;Sim_PPC_Spr_Ok;Sim_PPC_Spr_Illegal;Sim_PPC_Spr_Privilege"
 ],
 "ppc_spr_user_getter_func_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef gen_spr_user_getter_func_t ppc_spr_user_getter_func_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "t"
 ],
 "ppc_spr_user_setter_func_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef gen_spr_user_setter_func_t ppc_spr_user_setter_func_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "t"
 ],
 "pr": [
  "simulator/output.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int pr(const char *format, ...);"
   ]
  ],
  "f"
 ],
 "pr_err": [
  "simulator/output-pr-err.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void pr_err(const char *str, ...);"
   ]
  ],
  "f"
 ],
 "pr_warn": [
  "simulator/output-pr-err.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "void pr_warn(const char *str, ...);"
   ]
  ],
  "f"
 ],
 "pre_conf_object_set_t": [
  "simulator/configuration.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pre_conf_object_set_t pre_conf_object_set_t;"
   ]
  ],
  "s:pre_conf_object_set_t"
 ],
 "pre_decoder_cb_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef bool (*pre_decoder_cb_t)(conf_object_t *obj, conf_object_t *cpu, generic_address_t instruction_start_address, physical_address_t position_physical_address, uint8 *opcode_bytes, unsigned valid_bytes, unsigned instruction_position, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "pre_decoder_interface_t": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pre_decoder_interface {\n    cpu_cb_handle_t *(*register_pre_decoder_cb)(conf_object_t *cpu, conf_object_t *connection, pre_decoder_cb_t cb, lang_void *data);\n} pre_decoder_interface_t;"
   ]
  ],
  "s:pre_decoder_interface_t:register_pre_decoder_cb"
 ],
 "preference_interface_t": [
  "simulator-iface/preferences.h",
  "simulator-iface/preferences.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct preference_interface {\n    attr_value_t (*get_preference_for_module_key)(conf_object_t *NOTNULL prefs, const char *NOTNULL module, const char *NOTNULL key);\n    void (*set_preference_for_module_key)(conf_object_t *NOTNULL prefs, attr_value_t value, const char *NOTNULL module, const char *NOTNULL key);\n} preference_interface_t;"
   ]
  ],
  "s:preference_interface_t:get_preference_for_module_key;set_preference_for_module_key"
 ],
 "probe_array_interface_t": [
  "simulator-iface/probe-interface.h",
  "simulator-iface/probe-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct probe_array_interface {\n    int (*num_indices)(conf_object_t *obj);\n    attr_value_t (*value)(conf_object_t *obj, int idx);\n    attr_value_t (*all_values)(conf_object_t *obj);\n    attr_value_t (*properties)(conf_object_t *obj, int idx);\n} probe_array_interface_t;"
   ]
  ],
  "s:probe_array_interface_t:num_indices;value;all_values;properties"
 ],
 "probe_index_interface_t": [
  "simulator-iface/probe-interface.h",
  "simulator-iface/probe-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct probe_index_interface {\n    int (*num_indices)(conf_object_t *obj);\n    attr_value_t (*value)(conf_object_t *obj, int idx);\n    attr_value_t (*properties)(conf_object_t *obj, int idx);\n} probe_index_interface_t;"
   ]
  ],
  "s:probe_index_interface_t:num_indices;value;properties"
 ],
 "probe_interface_t": [
  "simulator-iface/probe-interface.h",
  "simulator-iface/probe-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct probe_interface {\n    attr_value_t (*value)(conf_object_t *obj);\n    attr_value_t (*properties)(conf_object_t *obj);\n} probe_interface_t;"
   ]
  ],
  "s:probe_interface_t:value;properties"
 ],
 "probe_key_t": [
  "simulator-iface/probe-interface.h",
  "simulator-iface/probe-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Probe_Key_Kind               = 0,\n    Probe_Key_Name               = 0,\n    Probe_Key_Type               = 1,\n    Probe_Key_Categories         = 2,\n    Probe_Key_Cause_Slowdown     = 3,\n    Probe_Key_Owner_Object       = 4,\n    Probe_Key_Display_Name       = 5,\n    Probe_Key_Description        = 6,\n    Probe_Key_Float_Percent      = 7,\n    Probe_Key_Float_Decimals     = 8,\n    Probe_Key_Metric_Prefix      = 9,\n    Probe_Key_Unit               = 10,\n    Probe_Key_Binary_Prefix      = 11,\n    Probe_Key_Time_Format        = 12,\n    Probe_Key_Width              = 13,\n    Probe_Key_Value_Notifier     = 14,\n    Probe_Key_Aggregates         = 17,\n    Probe_Key_Aggregate_Scope    = 18,\n    Probe_Key_Aggregate_Function = 19,\n    Probe_Key_Definition         = 20\n} probe_key_t;"
   ]
  ],
  "e:probe_key_t:Probe_Key_Kind;Probe_Key_Name;Probe_Key_Type;Probe_Key_Categories;Probe_Key_Cause_Slowdown;Probe_Key_Owner_Object;Probe_Key_Display_Name;Probe_Key_Description;Probe_Key_Float_Percent;Probe_Key_Float_Decimals;Probe_Key_Metric_Prefix;Probe_Key_Unit;Probe_Key_Binary_Prefix;Probe_Key_Time_Format;Probe_Key_Width;Probe_Key_Value_Notifier;Probe_Key_Aggregates;Probe_Key_Aggregate_Scope;Probe_Key_Aggregate_Function;Probe_Key_Definition"
 ],
 "probe_sampler_cache_interface_t": [
  "simulator-iface/probe-interface.h",
  "simulator-iface/probe-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct probe_sampler_cache_interface {\n    void (*enable)(conf_object_t *obj);\n    void (*disable)(conf_object_t *obj);\n    uint64 (*get_generation)(conf_object_t *obj);\n} probe_sampler_cache_interface_t;"
   ]
  ],
  "s:probe_sampler_cache_interface_t:enable;disable;get_generation"
 ],
 "probe_subscribe_interface_t": [
  "simulator-iface/probe-interface.h",
  "simulator-iface/probe-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct probe_subscribe_interface {\n    void (*subscribe)(conf_object_t *obj);\n    void (*unsubscribe)(conf_object_t *obj);\n    int (*num_subscribers)(conf_object_t *obj);\n} probe_subscribe_interface_t;"
   ]
  ],
  "s:probe_subscribe_interface_t:subscribe;unsubscribe;num_subscribers"
 ],
 "processor_cli_interface_t": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct processor_cli_interface {\n    tuple_int_string_t (*get_disassembly)(conf_object_t *obj, const char *addr_prefix, generic_address_t address, bool print_cpu, const char *mnemonic);\n    char *(*get_pregs)(conf_object_t *cpu, bool all);\n    attr_value_t (*get_diff_regs)(conf_object_t *obj);\n    char *(*get_pending_exception_string)(conf_object_t *obj);\n    char *(*get_address_prefix)(conf_object_t *obj);\n    physical_block_t (*translate_to_physical)(conf_object_t *obj, const char *prefix, generic_address_t address);\n} processor_cli_interface_t;"
   ]
  ],
  "s:processor_cli_interface_t:get_disassembly;get_pregs;get_diff_regs;get_pending_exception_string;get_address_prefix;translate_to_physical"
 ],
 "processor_endian_interface_t": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct processor_endian_interface {\n    cpu_endian_t (*get_instruction_endian)(conf_object_t *obj);\n    cpu_endian_t (*get_data_endian)(conf_object_t *obj);\n} processor_endian_interface_t;"
   ]
  ],
  "s:processor_endian_interface_t:get_instruction_endian;get_data_endian"
 ],
 "processor_gui_interface_t": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct processor_gui_interface {\n    void (*dummy)(conf_object_t *obj);\n} processor_gui_interface_t;"
   ]
  ],
  "s:processor_gui_interface_t:dummy"
 ],
 "processor_info_interface_t": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct processor_info_interface {\n    tuple_int_string_t (*disassemble)(conf_object_t *obj, generic_address_t address, attr_value_t instruction_data, int sub_operation);\n    void (*set_program_counter)(conf_object_t *obj, logical_address_t pc);\n    logical_address_t (*get_program_counter)(conf_object_t *obj);\n    physical_block_t (*logical_to_physical)(conf_object_t *obj, logical_address_t address, access_t access_type);\n    int (*enable_processor)(conf_object_t *obj);\n    int (*disable_processor)(conf_object_t *obj);\n    int (*get_enabled)(conf_object_t *obj);\n    cpu_endian_t (*get_endian)(conf_object_t *obj);\n    conf_object_t *(*get_physical_memory)(conf_object_t *obj);\n    int (*get_logical_address_width)(conf_object_t *obj);\n    int (*get_physical_address_width)(conf_object_t *obj);\n    const char *(*architecture)(conf_object_t *obj);\n} processor_info_interface_t;"
   ]
  ],
  "s:processor_info_interface_t:disassemble;set_program_counter;get_program_counter;logical_to_physical;enable_processor;disable_processor;get_enabled;get_endian;get_physical_memory;get_logical_address_width;get_physical_address_width;architecture"
 ],
 "processor_info_v2_interface_t": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct processor_info_v2_interface {\n    tuple_int_string_t (*disassemble)(conf_object_t *obj, generic_address_t address, attr_value_t instruction_data, int sub_operation);\n    void (*set_program_counter)(conf_object_t *obj, logical_address_t pc);\n    logical_address_t (*get_program_counter)(conf_object_t *obj);\n    physical_block_t (*logical_to_physical)(conf_object_t *obj, logical_address_t address, access_t access_type);\n    processor_mode_t (*get_processor_mode)(conf_object_t *obj);\n    int (*enable_processor)(conf_object_t *obj);\n    int (*disable_processor)(conf_object_t *obj);\n    int (*get_enabled)(conf_object_t *obj);\n    cpu_endian_t (*get_endian)(conf_object_t *obj);\n    conf_object_t *(*get_physical_memory)(conf_object_t *obj);\n    int (*get_logical_address_width)(conf_object_t *obj);\n    int (*get_physical_address_width)(conf_object_t *obj);\n    const char *(*architecture)(conf_object_t *obj);\n} processor_info_v2_interface_t;"
   ]
  ],
  "s:processor_info_v2_interface_t:disassemble;set_program_counter;get_program_counter;logical_to_physical;get_processor_mode;enable_processor;disable_processor;get_enabled;get_endian;get_physical_memory;get_logical_address_width;get_physical_address_width;architecture"
 ],
 "processor_mode_t": [
  "processor/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_CPU_Mode_User       = 0,\n    Sim_CPU_Mode_Supervisor = 1,\n    Sim_CPU_Mode_Hypervisor\n} processor_mode_t;"
   ]
  ],
  "e:processor_mode_t:Sim_CPU_Mode_User;Sim_CPU_Mode_Supervisor;Sim_CPU_Mode_Hypervisor"
 ],
 "prof_data_t": [
  "util/prof-data.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct prof_data prof_data_t;"
   ]
  ],
  "s:prof_data_t"
 ],
 "profile_area_t": [
  "simulator/host-profiling.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct profile_area profile_area_t;"
   ]
  ],
  "s:profile_area_t"
 ],
 "prompt_customizer_t": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef char *(*prompt_customizer_t)(const char *);"
   ]
  ],
  "t"
 ],
 "pseudo_exceptions_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef int pseudo_exceptions_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "t"
 ],
 "pulse_interface_t": [
  "devs/signal.h",
  "devs/signal.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct pulse_interface {\n    void (*pulse)(conf_object_t *NOTNULL obj);\n} pulse_interface_t;"
   ]
  ],
  "s:pulse_interface_t:pulse"
 ],
 "pywrap_arm_device_id_from_atom": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 pywrap_arm_device_id_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_arm_memory_attributes_from_atom": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 pywrap_arm_memory_attributes_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_arm_nonsecure_from_atom": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool pywrap_arm_nonsecure_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_arm_nsaid_from_atom": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 pywrap_arm_nsaid_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_arm_privileged_from_atom": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool pywrap_arm_privileged_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_arm_smmu_attributes_from_atom": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 pywrap_arm_smmu_attributes_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_arm_device_id": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_arm_device_id(uint64 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_arm_memory_attributes": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_arm_memory_attributes(uint64 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_arm_nonsecure": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_arm_nonsecure(bool val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_arm_nsaid": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_arm_nsaid(uint64 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_arm_privileged": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_arm_privileged(bool val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_arm_smmu_attributes": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_arm_smmu_attributes(uint64 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_bytemap": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_bytemap(transaction_bytemap_t *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_completion": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_completion(transaction_completion_t val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_cxl_type": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_cxl_type(cxl_type_t val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_data": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_data(uint8 *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_fill_value": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_fill_value(uint8 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_flags": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_flags(transaction_flags_t val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_initiator": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_initiator(conf_object_t *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_list_end": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_list_end(int val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_memop": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_memop(generic_transaction_t *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_owner": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_owner(conf_object_t *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_at": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_at(pcie_at_t val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_ats_invalidate_completion_count": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_ats_invalidate_completion_count(uint8 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_ats_invalidate_completion_itag_vector": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_ats_invalidate_completion_itag_vector(uint32 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_ats_invalidate_request_itag": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_ats_invalidate_request_itag(uint8 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_ats_translation_request_cxl_src": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_ats_translation_request_cxl_src(bool val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_ats_translation_request_no_write": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_ats_translation_request_no_write(bool val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_byte_count_ret": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_byte_count_ret(pcie_byte_count_ret_t *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_destination_segment": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_destination_segment(uint8 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_device_id": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_device_id(uint16 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_ecs": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_ecs(pcie_ecs_t val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_error_ret": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_error_ret(pcie_error_ret_t *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_ide_secured": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_ide_secured(pcie_ide_secured_t *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_link_negotiation": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_link_negotiation(pcie_link_negotiation_t *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_msg_route": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_msg_route(pcie_msg_route_t val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_msg_type": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_msg_type(pcie_message_type_t val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_pasid": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_pasid(uint32 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_prs_page_group_response": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_prs_page_group_response(uint16 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_prs_page_request": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_prs_page_request(uint64 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_prs_stop_marker": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_prs_stop_marker(bool val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_requester_id": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_requester_id(uint16 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_requester_segment": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_requester_segment(uint8 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_pcie_type": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_pcie_type(pcie_type_t val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_riscv_device_id": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_riscv_device_id(uint64 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_riscv_io_error_ret": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_riscv_io_error_ret(riscv_io_error_ret_t *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_riscv_process_id": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_riscv_process_id(uint64 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_riscv_wg_wid": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_riscv_wg_wid(uint64 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_size": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_size(uint32 val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_target_type": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_target_type(transaction_target_type_ret_t *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_trace_atom_access": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_trace_atom_access(transaction_trace_atom_access_t *val);"
   ]
  ],
  "f"
 ],
 "pywrap_atom_from_user_data": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline atom_t pywrap_atom_from_user_data(lang_void *val);"
   ]
  ],
  "f"
 ],
 "pywrap_bytemap_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline transaction_bytemap_t *pywrap_bytemap_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_completion_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline transaction_completion_t pywrap_completion_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_cxl_type_from_atom": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline cxl_type_t pywrap_cxl_type_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_data_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 *pywrap_data_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_fill_value_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 pywrap_fill_value_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_flags_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline transaction_flags_t pywrap_flags_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_initiator_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline conf_object_t *pywrap_initiator_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_list_end_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int pywrap_list_end_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_memop_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline generic_transaction_t *pywrap_memop_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_owner_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline conf_object_t *pywrap_owner_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_at_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_at_t pywrap_pcie_at_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_ats_invalidate_completion_count_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 pywrap_pcie_ats_invalidate_completion_count_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_ats_invalidate_completion_itag_vector_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 pywrap_pcie_ats_invalidate_completion_itag_vector_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_ats_invalidate_request_itag_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 pywrap_pcie_ats_invalidate_request_itag_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_ats_translation_request_cxl_src_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool pywrap_pcie_ats_translation_request_cxl_src_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_ats_translation_request_no_write_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool pywrap_pcie_ats_translation_request_no_write_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_byte_count_ret_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_byte_count_ret_t *pywrap_pcie_byte_count_ret_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_destination_segment_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 pywrap_pcie_destination_segment_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_device_id_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 pywrap_pcie_device_id_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_ecs_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_ecs_t pywrap_pcie_ecs_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_error_ret_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_error_ret_t *pywrap_pcie_error_ret_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_ide_secured_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_ide_secured_t *pywrap_pcie_ide_secured_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_link_negotiation_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_link_negotiation_t *pywrap_pcie_link_negotiation_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_msg_route_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_msg_route_t pywrap_pcie_msg_route_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_msg_type_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_message_type_t pywrap_pcie_msg_type_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_pasid_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 pywrap_pcie_pasid_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_prs_page_group_response_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 pywrap_pcie_prs_page_group_response_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_prs_page_request_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 pywrap_pcie_prs_page_request_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_prs_stop_marker_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline bool pywrap_pcie_prs_stop_marker_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_requester_id_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 pywrap_pcie_requester_id_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_requester_segment_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 pywrap_pcie_requester_segment_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_pcie_type_from_atom": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline pcie_type_t pywrap_pcie_type_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_riscv_device_id_from_atom": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 pywrap_riscv_device_id_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_riscv_io_error_ret_from_atom": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline riscv_io_error_ret_t *pywrap_riscv_io_error_ret_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_riscv_process_id_from_atom": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 pywrap_riscv_process_id_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_riscv_wg_wid_from_atom": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 pywrap_riscv_wg_wid_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_size_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 pywrap_size_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_target_type_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline transaction_target_type_ret_t *pywrap_target_type_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_trace_atom_access_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline transaction_trace_atom_access_t *pywrap_trace_atom_access_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "pywrap_user_data_from_atom": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline lang_void *pywrap_user_data_from_atom(atom_t *NOTNULL a);"
   ]
  ],
  "f"
 ],
 "ram_access_cb_t": [
  "model-iface/ram-instrumentation.h",
  "model-iface/ram-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*ram_access_cb_t)(conf_object_t *obj, conf_object_t *ram, uint64 ram_offset, transaction_t *t, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "ram_access_subscribe_interface_t": [
  "model-iface/ram-instrumentation.h",
  "model-iface/ram-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ram_access_subscribe_interface {\n    void (*remove_callback)(conf_object_t *NOTNULL obj, ram_cb_handle_t *handle);\n    void (*enable_callback)(conf_object_t *NOTNULL obj, ram_cb_handle_t *handle);\n    void (*disable_callback)(conf_object_t *NOTNULL obj, ram_cb_handle_t *handle);\n    ram_cb_handle_t *(*register_access_before_cb)(conf_object_t *NOTNULL obj, conf_object_t *conn_obj, ram_access_cb_t cb, lang_void *data);\n    ram_cb_handle_t *(*register_access_after_cb)(conf_object_t *NOTNULL obj, conf_object_t *conn_obj, ram_access_cb_t cb, lang_void *data);\n    ram_cb_handle_t *(*register_access_filter_cb)(conf_object_t *NOTNULL obj, conf_object_t *connection, access_filter_cb_t cb, lang_void *data);\n} ram_access_subscribe_interface_t;"
   ]
  ],
  "s:ram_access_subscribe_interface_t:remove_callback;enable_callback;disable_callback;register_access_before_cb;register_access_after_cb;register_access_filter_cb"
 ],
 "ram_cb_handle_t": [
  "model-iface/ram-instrumentation.h",
  "model-iface/ram-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ram_callback_entry ram_cb_handle_t;"
   ]
  ],
  "s:ram_cb_handle_t"
 ],
 "ram_interface_t": [
  "devs/ram.h",
  "devs/ram.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct ram_interface {\n    page_t *(*get_page)(conf_object_t *NOTNULL obj, physical_address_t addr);\n    void (*fill)(conf_object_t *NOTNULL obj, physical_address_t start, uint64 length, uint8 value);\n    exception_type_t (*read)(conf_object_t *NOTNULL obj, conf_object_t *initiator, uint64 addr, buffer_t data, ram_operation_flags_t flags);\n    exception_type_t (*write)(conf_object_t *NOTNULL obj, conf_object_t *initiator, uint64 addr, bytes_t data, ram_operation_flags_t flags);\n    exception_type_t (*touch)(conf_object_t *NOTNULL obj, conf_object_t *initiator, uint64 addr, uint64 size, read_or_write_t rw, ram_operation_flags_t flags);\n    uint64 (*size)(conf_object_t *NOTNULL obj);\n} ram_interface_t;"
   ]
  ],
  "s:ram_interface_t:get_page;fill;read;write;touch;size"
 ],
 "ram_operation_flags_t": [
  "devs/ram.h",
  "devs/ram.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Ram_Op_Fetch        = 1,\n    Sim_Ram_Op_Non_Coherent = 2\n} ram_operation_flags_t;"
   ]
  ],
  "e:ram_operation_flags_t:Sim_Ram_Op_Fetch;Sim_Ram_Op_Non_Coherent"
 ],
 "read_or_write_t": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_RW_Read  = 0,\n    Sim_RW_Write = 1\n} read_or_write_t;"
   ]
  ],
  "e:read_or_write_t:Sim_RW_Read;Sim_RW_Write"
 ],
 "recorded_interface_t": [
  "simulator-iface/recorder.h",
  "simulator-iface/recorder.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct recorded_interface {\n    void (*input)(conf_object_t *NOTNULL obj, bytes_t data, bool playback);\n} recorded_interface_t;"
   ]
  ],
  "s:recorded_interface_t:input"
 ],
 "recorder_input_handler_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef void (*recorder_input_handler_t)(conf_object_t *obj, dbuffer_t *data, uint32 uint_data);"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "t"
 ],
 "recorder_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct recorder_interface {\n    recorder_t *(*attach)(conf_object_t *rec, conf_object_t *obj, recorder_input_handler_t input_from_recorder);\n    void (*detach)(conf_object_t *rec, recorder_t *r);\n    void (*input)(conf_object_t *rec, recorder_t *r, dbuffer_t *data, uint32 uint_data);\n    bool (*playback)(conf_object_t *rec);\n} recorder_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:recorder_interface_t:attach;detach;input;playback"
 ],
 "recorder_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct recorder recorder_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:recorder_t"
 ],
 "recorder_v2_interface_t": [
  "simulator-iface/recorder.h",
  "simulator-iface/recorder.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct recorder_v2_interface {\n    void (*record)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL sender, bytes_t data);\n    bool (*playback)(conf_object_t *NOTNULL obj);\n} recorder_v2_interface_t;"
   ]
  ],
  "s:recorder_v2_interface_t:record;playback"
 ],
 "reg_bitorder_t": [
  "model-iface/describe-registers.h",
  "model-iface/describe-registers.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Reg_Bitorder_Little_Endian,\n    Reg_Bitorder_Big_Endian\n} reg_bitorder_t;"
   ]
  ],
  "e:reg_bitorder_t:Reg_Bitorder_Little_Endian;Reg_Bitorder_Big_Endian"
 ],
 "reg_role_t": [
  "model-iface/describe-registers.h",
  "model-iface/describe-registers.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Reg_Role_None,\n    Reg_Role_Program_Counter\n} reg_role_t;"
   ]
  ],
  "e:reg_role_t:Reg_Role_None;Reg_Role_Program_Counter"
 ],
 "register_breakpoint_interface_t": [
  "simulator-iface/register-breakpoint.h",
  "simulator-iface/register-breakpoint.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct register_breakpoint_interface {\n    int (*add_breakpoint)(conf_object_t *obj, const char *reg_name, uint64 value, uint64 mask, bool break_upon_change);\n    bool (*remove_breakpoint)(conf_object_t *obj, int id);\n    attr_value_t (*get_breakpoints)(conf_object_t *obj);\n} register_breakpoint_interface_t;"
   ]
  ],
  "s:register_breakpoint_interface_t:add_breakpoint;remove_breakpoint;get_breakpoints"
 ],
 "register_view_catalog_interface_t": [
  "model-iface/register-view.h",
  "model-iface/register-view.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct register_view_catalog_interface {\n    attr_value_t (*register_names)(conf_object_t *NOTNULL obj);\n    attr_value_t (*register_offsets)(conf_object_t *NOTNULL obj);\n} register_view_catalog_interface_t;"
   ]
  ],
  "s:register_view_catalog_interface_t:register_names;register_offsets"
 ],
 "register_view_interface_t": [
  "model-iface/register-view.h",
  "model-iface/register-view.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct register_view_interface {\n    const char *(*description)(conf_object_t *NOTNULL obj);\n    bool (*big_endian_bitorder)(conf_object_t *NOTNULL obj);\n    unsigned (*number_of_registers)(conf_object_t *NOTNULL obj);\n    attr_value_t (*register_info)(conf_object_t *NOTNULL obj, unsigned reg);\n    uint64 (*get_register_value)(conf_object_t *NOTNULL obj, unsigned reg);\n    void (*set_register_value)(conf_object_t *NOTNULL obj, unsigned reg, uint64 val);\n} register_view_interface_t;"
   ]
  ],
  "s:register_view_interface_t:description;big_endian_bitorder;number_of_registers;register_info;get_register_value;set_register_value"
 ],
 "register_view_read_only_interface_t": [
  "model-iface/register-view-read-only.h",
  "model-iface/register-view-read-only.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct register_view_read_only_interface {\n    bool (*is_read_only)(conf_object_t *NOTNULL obj, unsigned reg);\n} register_view_read_only_interface_t;"
   ]
  ],
  "s:register_view_read_only_interface_t:is_read_only"
 ],
 "request_id_error_t": [
  "simulator-iface/osa-control-interface.h",
  "simulator-iface/osa-control-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    OSA_Request_Error_ID = 0\n} request_id_error_t;"
   ]
  ],
  "e:request_id_error_t:OSA_Request_Error_ID"
 ],
 "request_id_t": [
  "simulator-iface/osa-types.h",
  "simulator-iface/osa-types.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 request_id_t;"
   ]
  ],
  "t"
 ],
 "reverse_bits16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 reverse_bits16(uint16 x);"
   ]
  ],
  "f"
 ],
 "reverse_bits32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 reverse_bits32(uint32 x);"
   ]
  ],
  "f"
 ],
 "reverse_bits64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 reverse_bits64(uint64 x);"
   ]
  ],
  "f"
 ],
 "reverse_bits8": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 reverse_bits8(uint8 x);"
   ]
  ],
  "f"
 ],
 "riscv_clic_interface_t": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct riscv_clic_interface {\n    void (*acknowledge_interrupt)(conf_object_t *obj, uint64 id);\n} riscv_clic_interface_t;"
   ]
  ],
  "s:riscv_clic_interface_t:acknowledge_interrupt"
 ],
 "riscv_clic_interrupt_interface_t": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct riscv_clic_interrupt_interface {\n    void (*set_active_interrupt)(conf_object_t *obj, uint64 id, uint64 level, riscv_vectoring_mode_t vect_mode, riscv_cpu_mode_t cpu_mode);\n    void (*clear_interrupt)(conf_object_t *obj);\n} riscv_clic_interrupt_interface_t;"
   ]
  ],
  "s:riscv_clic_interrupt_interface_t:set_active_interrupt;clear_interrupt"
 ],
 "riscv_coprocessor_interface_t": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct riscv_coprocessor_interface {\n    uint64 (*read_register)(conf_object_t *obj, uint64 number);\n    void (*write_register)(conf_object_t *obj, uint64 number, uint64 value);\n} riscv_coprocessor_interface_t;"
   ]
  ],
  "s:riscv_coprocessor_interface_t:read_register;write_register"
 ],
 "riscv_cpu_mode_t": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Riscv_Mode_User             = 0,\n    Riscv_Mode_Supervisor       = 1,\n    Riscv_Mode_Reserved         = 2,\n    Riscv_Mode_Machine          = 3,\n    Riscv_Mode_Guest_User       = 16,\n    Riscv_Mode_Guest_Supervisor = 17\n} riscv_cpu_mode_t;"
   ]
  ],
  "e:riscv_cpu_mode_t:Riscv_Mode_User;Riscv_Mode_Supervisor;Riscv_Mode_Reserved;Riscv_Mode_Machine;Riscv_Mode_Guest_User;Riscv_Mode_Guest_Supervisor"
 ],
 "riscv_csr_access_cb_t": [
  "arch/risc-v-customize.h",
  "arch/risc-v-customize.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 (*riscv_csr_access_cb_t)(conf_object_t *obj, conf_object_t *cpu, uint32 csr_address, uint64 value, uint64 write_mask, riscv_csr_access_type_t type);"
   ]
  ],
  "t"
 ],
 "riscv_csr_access_type_t": [
  "arch/risc-v-customize.h",
  "arch/risc-v-customize.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Riscv_CSR_Instruction_Access = ...,\n    Riscv_Attribute_Access       = ...,\n    Riscv_Int_Register_Access    = ...\n} riscv_csr_access_type_t;"
   ]
  ],
  "e:riscv_csr_access_type_t:Riscv_CSR_Instruction_Access;Riscv_Attribute_Access;Riscv_Int_Register_Access"
 ],
 "riscv_custom_csr_interface_t": [
  "arch/risc-v-customize.h",
  "arch/risc-v-customize.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct riscv_custom_csr_interface {\n    bool (*register_csr)(conf_object_t *cpu, conf_object_t *ext_obj, uint32 csr_address, const char *name, const char *description, riscv_csr_access_cb_t access);\n    void (*register_reset)(conf_object_t *cpu, conf_object_t *csr_obj, riscv_reset_cb_t reset_func);\n} riscv_custom_csr_interface_t;"
   ]
  ],
  "s:riscv_custom_csr_interface_t:register_csr;register_reset"
 ],
 "riscv_imsic_file_id_t": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Riscv_Imsic_Machine_File    = ...,\n    Riscv_Imsic_Supervisor_File = 0\n} riscv_imsic_file_id_t;"
   ]
  ],
  "e:riscv_imsic_file_id_t:Riscv_Imsic_Machine_File;Riscv_Imsic_Supervisor_File"
 ],
 "riscv_imsic_interface_t": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct riscv_imsic_interface {\n    uint32 (*num_guest_files)(conf_object_t *obj);\n    uint64 (*read_irq_file)(conf_object_t *obj, riscv_imsic_file_id_t id, uint32 offset);\n    uint64 (*read_and_write_irq_file)(conf_object_t *obj, riscv_imsic_file_id_t id, uint32 offset, uint64 new_value, uint64 mask);\n    uint64 (*read_xtopei)(conf_object_t *obj, riscv_imsic_file_id_t id);\n    uint64 (*read_and_write_xtopei)(conf_object_t *obj, riscv_imsic_file_id_t id, uint64 value, uint64 mask);\n} riscv_imsic_interface_t;"
   ]
  ],
  "s:riscv_imsic_interface_t:num_guest_files;read_irq_file;read_and_write_irq_file;read_xtopei;read_and_write_xtopei"
 ],
 "riscv_instruction_action_interface_t": [
  "arch/risc-v-customize.h",
  "arch/risc-v-customize.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct riscv_instruction_action_interface {\n    uint64 (*read_x_register)(conf_object_t *cpu, uint32 number);\n    void (*write_x_register)(conf_object_t *cpu, uint32 number, uint64 value);\n    const char *(*name_x_register)(conf_object_t *cpu, uint32 number);\n    uint64 (*read_csr)(conf_object_t *cpu, uint32 address);\n    void (*write_csr)(conf_object_t *cpu, uint32 address, uint64 value);\n    uint64 (*read_memory)(conf_object_t *cpu, uint64 address, uint32 size);\n    void (*write_memory)(conf_object_t *cpu, uint64 address, uint32 size, uint64 value);\n    void (*load_memory_buf)(conf_object_t *cpu, uint64 address, buffer_t buf);\n    void (*store_memory_buf)(conf_object_t *cpu, uint64 address, bytes_t buf);\n    riscv_cpu_mode_t (*get_current_cpu_mode)(conf_object_t *cpu);\n    void (*raise_exception)(conf_object_t *cpu, uint64 code, uint64 tval);\n} riscv_instruction_action_interface_t;"
   ]
  ],
  "s:riscv_instruction_action_interface_t:read_x_register;write_x_register;name_x_register;read_csr;write_csr;read_memory;write_memory;load_memory_buf;store_memory_buf;get_current_cpu_mode;raise_exception"
 ],
 "riscv_io_error_ret_t": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    riscv_io_error_t val;\n} riscv_io_error_ret_t;"
   ]
  ],
  "s:riscv_io_error_ret_t:val"
 ],
 "riscv_io_error_t": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Riscv_No_IO_Error              = 0,\n    Riscv_Clint_Wrong_Sized_Access = 16\n} riscv_io_error_t;"
   ]
  ],
  "e:riscv_io_error_t:Riscv_No_IO_Error;Riscv_Clint_Wrong_Sized_Access"
 ],
 "riscv_reset_cb_t": [
  "arch/risc-v-customize.h",
  "arch/risc-v-customize.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 (*riscv_reset_cb_t)(conf_object_t *obj, conf_object_t *cpu);"
   ]
  ],
  "t"
 ],
 "riscv_signal_sgeip_interface_t": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct riscv_signal_sgeip_interface {\n    void (*signal_raise)(conf_object_t *NOTNULL obj, uint64 vgein);\n    void (*signal_lower)(conf_object_t *NOTNULL obj, uint64 vgein);\n} riscv_signal_sgeip_interface_t;"
   ]
  ],
  "s:riscv_signal_sgeip_interface_t:signal_raise;signal_lower"
 ],
 "riscv_vectoring_mode_t": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Riscv_Non_Vectoring                = 0,\n    Riscv_Selective_Hardware_Vectoring = 1\n} riscv_vectoring_mode_t;"
   ]
  ],
  "e:riscv_vectoring_mode_t:Riscv_Non_Vectoring;Riscv_Selective_Hardware_Vectoring"
 ],
 "rom_interface_t": [
  "devs/ram.h",
  "devs/ram.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef ram_interface_t rom_interface_t;"
   ]
  ],
  "s:ram_interface_t:get_page;fill;read;write;touch;size"
 ],
 "rs232_console_interface_t": [
  "devs/serial-device.h",
  "devs/serial-device.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct rs232_console_interface {\n    void (*set_baudrate)(conf_object_t *obj, int rate, int commit);\n    void (*set_data_bits)(conf_object_t *obj, int bits, int commit);\n    void (*set_stop_bits)(conf_object_t *obj, stop_bits_t stop_bits, int commit);\n    void (*set_parity_mode)(conf_object_t *obj, parity_mode_t parity_mode, int commit);\n    void (*set_dtr)(conf_object_t *obj, int status);\n    void (*set_rts)(conf_object_t *obj, int status);\n    void (*set_break)(conf_object_t *obj, int status);\n} rs232_console_interface_t;"
   ]
  ],
  "s:rs232_console_interface_t:set_baudrate;set_data_bits;set_stop_bits;set_parity_mode;set_dtr;set_rts;set_break"
 ],
 "rs232_device_interface_t": [
  "devs/serial-device.h",
  "devs/serial-device.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct rs232_device_interface {\n    void (*cts)(conf_object_t *obj, int status);\n    void (*dsr)(conf_object_t *obj, int status);\n    void (*ring)(conf_object_t *obj, int status);\n    void (*carrier)(conf_object_t *obj, int status);\n    void (*got_break)(conf_object_t *obj);\n    void (*got_frame_error)(conf_object_t *obj);\n} rs232_device_interface_t;"
   ]
  ],
  "s:rs232_device_interface_t:cts;dsr;ring;carrier;got_break;got_frame_error"
 ],
 "sata_interface_t": [
  "devs/sata-interface.h",
  "devs/sata-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct sata_interface {\n    void (*receive_fis)(conf_object_t *obj, const bytes_t fis);\n} sata_interface_t;"
   ]
  ],
  "s:sata_interface_t:receive_fis"
 ],
 "save_flags_t": [
  "simulator/configuration.h",
  "simulator-api.h",
  [
   [
    [
     "6"
    ],
    "typedef enum {\n    Sim_Save_Gzip_Config = 4,\n    Sim_Save_Nobundle    = 1,\n    Sim_Save_RLE_Data    = 2\n} save_flags_t;"
   ],
   [
    [
     "7"
    ],
    "typedef enum {\n    Sim_Save_Nobundle                 = 1,\n    Sim_Save_RLE_Data                 = 2,\n    Sim_Save_Image_Separator          = 8,\n    Sim_Save_No_Gzip_Config           = 16,\n    Sim_Save_Image_Uncompressed_Craff = 32,\n    Sim_Save_Image_Raw                = 64,\n    Sim_Save_Image_VHDX               = 128,\n    Sim_Save_Standalone_Checkpoint    = 256\n} save_flags_t;"
   ]
  ],
  "e:save_flags_t:Sim_Save_Nobundle;Sim_Save_RLE_Data;Sim_Save_Image_Separator;Sim_Save_No_Gzip_Config;Sim_Save_Image_Uncompressed_Craff;Sim_Save_Image_Raw;Sim_Save_Image_VHDX;Sim_Save_Standalone_Checkpoint"
 ],
 "save_state_interface_t": [
  "model-iface/save-state.h",
  "model-iface/save-state.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct save_state_interface {\n    int (*get_version)(conf_object_t *obj);\n    int (*get_size)(conf_object_t *obj, state_save_kind_t stype);\n    int (*get_align)(conf_object_t *obj, state_save_kind_t stype);\n    int (*save_state)(conf_object_t *obj, state_save_kind_t stype, void *dest);\n    int (*load_state)(conf_object_t *obj, state_save_kind_t stype, void *src);\n    int (*compare_state)(conf_object_t *obj, state_save_kind_t stype, void *src);\n    int (*print_state)(conf_object_t *obj, state_save_kind_t stype, void *src, int symnames, int diff);\n    int (*save_state_he)(conf_object_t *obj, state_save_kind_t stype, void *dest);\n    int (*load_state_he)(conf_object_t *obj, state_save_kind_t stype, void *src);\n    int (*compare_state_he)(conf_object_t *obj, state_save_kind_t stype, void *src);\n    int (*print_state_he)(conf_object_t *obj, state_save_kind_t stype, void *src, int symnames, int diff);\n} save_state_interface_t;"
   ]
  ],
  "s:save_state_interface_t:get_version;get_size;get_align;save_state;load_state;compare_state;print_state;save_state_he;load_state_he;compare_state_he;print_state_he"
 ],
 "scalar_time_interface_t": [
  "simulator-iface/scalar-time.h",
  "simulator-iface/scalar-time.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct scalar_time_interface {\n    int (*add_consumer)(conf_object_t *obj);\n    void (*remove_consumer)(conf_object_t *obj, int consumer);\n    attr_value_t (*poll)(conf_object_t *obj, int consumer);\n} scalar_time_interface_t;"
   ]
  ],
  "s:scalar_time_interface_t:add_consumer;remove_consumer;poll"
 ],
 "scale_factor_listener_interface_t": [
  "devs/frequency.h",
  "devs/frequency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct scale_factor_listener_interface {\n    void (*set)(conf_object_t *NOTNULL obj, uint64 numerator, uint64 denominator);\n} scale_factor_listener_interface_t;"
   ]
  ],
  "s:scale_factor_listener_interface_t:set"
 ],
 "screenshot_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct screenshot_interface {\n    bool (*save_png)(conf_object_t *NOTNULL obj, const char *filename);\n    bool (*save_bmp)(conf_object_t *NOTNULL obj, const char *filename);\n} screenshot_interface_t;"
   ]
  ],
  "s:screenshot_interface_t:save_png;save_bmp"
 ],
 "serial_console_frontend_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct serial_console_frontend_interface {\n    void (*write)(conf_object_t *NOTNULL obj, uint8 value);\n} serial_console_frontend_interface_t;"
   ]
  ],
  "s:serial_console_frontend_interface_t:write"
 ],
 "serial_device_interface_t": [
  "devs/serial-device.h",
  "devs/serial-device.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct serial_device_interface {\n    int (*write)(conf_object_t *obj, int value);\n    void (*receive_ready)(conf_object_t *obj);\n} serial_device_interface_t;"
   ]
  ],
  "s:serial_device_interface_t:write;receive_ready"
 ],
 "serial_peripheral_interface_flags_t": [
  "devs/serial-peripheral-interface.h",
  "devs/serial-peripheral-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum serial_peripheral_interface_flags {\n    SPI_Flags_CPHA = 1,\n    SPI_Flags_CPOL = 2\n} serial_peripheral_interface_flags_t;"
   ]
  ],
  "e:serial_peripheral_interface_flags_t:SPI_Flags_CPHA;SPI_Flags_CPOL"
 ],
 "serial_peripheral_interface_master_interface_t": [
  "devs/serial-peripheral-interface.h",
  "devs/serial-peripheral-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct serial_peripheral_interface_master_interface {\n    void (*spi_response)(conf_object_t *obj, int bits, dbuffer_t *payload);\n} serial_peripheral_interface_master_interface_t;"
   ]
  ],
  "s:serial_peripheral_interface_master_interface_t:spi_response"
 ],
 "serial_peripheral_interface_slave_interface_t": [
  "devs/serial-peripheral-interface.h",
  "devs/serial-peripheral-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct serial_peripheral_interface_slave_interface {\n    void (*spi_request)(conf_object_t *obj, int first, int last, int bits, dbuffer_t *payload);\n    void (*connect_master)(conf_object_t *obj, conf_object_t *master, const char *port, serial_peripheral_interface_flags_t flags);\n    void (*disconnect_master)(conf_object_t *obj, conf_object_t *master);\n} serial_peripheral_interface_slave_interface_t;"
   ]
  ],
  "s:serial_peripheral_interface_slave_interface_t:spi_request;connect_master;disconnect_master"
 ],
 "service_routine_t": [
  "model-iface/decoder.h",
  "model-iface/decoder.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef exception_type_t (*service_routine_t)(conf_object_t *cpu, uint64 arg, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "set_attr_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef set_error_t (*set_attr_t)(lang_void *ptr, conf_object_t *obj, attr_value_t *val, attr_value_t *idx);"
   ]
  ],
  "t"
 ],
 "set_class_attr_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef set_error_t (*set_class_attr_t)(lang_void *ptr, conf_class_t *c, attr_value_t *val, attr_value_t *idx);"
   ]
  ],
  "t"
 ],
 "set_error_t": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Set_Ok,\n    Sim_Set_Object_Not_Found,\n    Sim_Set_Interface_Not_Found,\n    Sim_Set_Illegal_Value,\n    Sim_Set_Illegal_Type,\n    Sim_Set_Illegal_Index,\n    Sim_Set_Attribute_Not_Found,\n    Sim_Set_Not_Writable,\n    Sim_Set_Error_Types\n} set_error_t;"
   ]
  ],
  "e:set_error_t:Sim_Set_Ok;Sim_Set_Object_Not_Found;Sim_Set_Interface_Not_Found;Sim_Set_Illegal_Value;Sim_Set_Illegal_Type;Sim_Set_Illegal_Index;Sim_Set_Attribute_Not_Found;Sim_Set_Not_Writable;Sim_Set_Error_Types"
 ],
 "signal_interface_t": [
  "devs/signal.h",
  "devs/signal.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct signal_interface {\n    void (*signal_raise)(conf_object_t *NOTNULL obj);\n    void (*signal_lower)(conf_object_t *NOTNULL obj);\n} signal_interface_t;"
   ]
  ],
  "s:signal_interface_t:signal_raise;signal_lower"
 ],
 "signed_divide_128_by_64": [
  "util/arith.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int signed_divide_128_by_64(int64 dividend_high, int64 dividend_low, int64 divisor, int64 *quotient, int64 *remainder);"
   ]
  ],
  "f"
 ],
 "signed_multiply_64_by_64": [
  "util/arith.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void signed_multiply_64_by_64(uint64 a, uint64 b, uint64 *prod_h, uint64 *prod_l);"
   ]
  ],
  "f"
 ],
 "signed_multiply_64_by_64_high": [
  "util/arith.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 signed_multiply_64_by_64_high(uint64 a, uint64 b);"
   ]
  ],
  "f"
 ],
 "sim_bp_type_t": [
  "simulator-iface/breakpoint-manager.h",
  "simulator-iface/breakpoint-manager.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Breakpoint_Type_Default,\n    Breakpoint_Type_Break,\n    Breakpoint_Type_Run_Until,\n    Breakpoint_Type_Wait_For,\n    Breakpoint_Type_Trace\n} sim_bp_type_t;"
   ]
  ],
  "e:sim_bp_type_t:Breakpoint_Type_Default;Breakpoint_Type_Break;Breakpoint_Type_Run_Until;Breakpoint_Type_Wait_For;Breakpoint_Type_Trace"
 ],
 "sim_exception_t": [
  "base/sim-exception.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum sim_exception {\n    SimExc_No_Exception,\n    SimExc_General,\n    SimExc_Lookup,\n    SimExc_Attribute,\n    SimExc_IOError,\n    SimExc_Index,\n    SimExc_Memory,\n    SimExc_Type,\n    SimExc_Break,\n    SimExc_Stop,\n    SimExc_PythonTranslation,\n    SimExc_License,\n    SimExc_IllegalValue,\n    SimExc_InquiryOutsideMemory,\n    SimExc_InquiryUnhandled,\n    SimExc_InterfaceNotFound,\n    SimExc_AttrNotFound,\n    SimExc_AttrNotReadable,\n    SimExc_AttrNotWritable,\n    Sim_Exceptions\n} sim_exception_t;"
   ]
  ],
  "e:sim_exception_t:SimExc_No_Exception;SimExc_General;SimExc_Lookup;SimExc_Attribute;SimExc_IOError;SimExc_Index;SimExc_Memory;SimExc_Type;SimExc_Break;SimExc_Stop;SimExc_PythonTranslation;SimExc_License;SimExc_IllegalValue;SimExc_InquiryOutsideMemory;SimExc_InquiryUnhandled;SimExc_InterfaceNotFound;SimExc_AttrNotFound;SimExc_AttrNotReadable;SimExc_AttrNotWritable;Sim_Exceptions"
 ],
 "sim_key_t": [
  "model-iface/sim-keys.h",
  "model-iface/sim-keys.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    SK_ILLEGAL       = 0,\n    SK_ESC           = 1,\n    SK_F1            = 2,\n    SK_F2            = 3,\n    SK_F3            = 4,\n    SK_F4            = 5,\n    SK_F5            = 6,\n    SK_F6            = 7,\n    SK_F7            = 8,\n    SK_F8            = 9,\n    SK_F9            = 10,\n    SK_F10           = 11,\n    SK_F11           = 12,\n    SK_F12           = 13,\n    SK_PRNT_SCRN     = 14,\n    SK_SCROLL_LOCK   = 15,\n    SK_NUM_LOCK      = 16,\n    SK_CAPS_LOCK     = 17,\n    SK_0             = 18,\n    SK_1             = 19,\n    SK_2             = 20,\n    SK_3             = 21,\n    SK_4             = 22,\n    SK_5             = 23,\n    SK_6             = 24,\n    SK_7             = 25,\n    SK_8             = 26,\n    SK_9             = 27,\n    SK_A             = 28,\n    SK_B             = 29,\n    SK_C             = 30,\n    SK_D             = 31,\n    SK_E             = 32,\n    SK_F             = 33,\n    SK_G             = 34,\n    SK_H             = 35,\n    SK_I             = 36,\n    SK_J             = 37,\n    SK_K             = 38,\n    SK_L             = 39,\n    SK_M             = 40,\n    SK_N             = 41,\n    SK_O             = 42,\n    SK_P             = 43,\n    SK_Q             = 44,\n    SK_R             = 45,\n    SK_S             = 46,\n    SK_T             = 47,\n    SK_U             = 48,\n    SK_V             = 49,\n    SK_W             = 50,\n    SK_X             = 51,\n    SK_Y             = 52,\n    SK_Z             = 53,\n    SK_APOSTROPHE    = 54,\n    SK_COMMA         = 55,\n    SK_PERIOD        = 56,\n    SK_SEMICOLON     = 57,\n    SK_EQUAL         = 58,\n    SK_SLASH         = 59,\n    SK_BACKSLASH     = 60,\n    SK_SPACE         = 61,\n    SK_LEFT_BRACKET  = 62,\n    SK_RIGHT_BRACKET = 63,\n    SK_MINUS         = 64,\n    SK_GRAVE         = 65,\n    SK_TAB           = 66,\n    SK_ENTER         = 67,\n    SK_BACKSPACE     = 68,\n    SK_CTRL_L        = 69,\n    SK_CTRL_R        = 70,\n    SK_SHIFT_L       = 71,\n    SK_SHIFT_R       = 72,\n    SK_ALT_L         = 73,\n    SK_ALT_R         = 74,\n    SK_GR_DIVIDE     = 75,\n    SK_GR_MULTIPLY   = 76,\n    SK_GR_MINUS      = 77,\n    SK_GR_PLUS       = 78,\n    SK_GR_ENTER      = 79,\n    SK_GR_INSERT     = 80,\n    SK_GR_HOME       = 81,\n    SK_GR_PG_UP      = 82,\n    SK_GR_DELETE     = 83,\n    SK_GR_END        = 84,\n    SK_GR_PG_DOWN    = 85,\n    SK_GR_UP         = 86,\n    SK_GR_DOWN       = 87,\n    SK_GR_LEFT       = 88,\n    SK_GR_RIGHT      = 89,\n    SK_KP_HOME       = 90,\n    SK_KP_UP         = 91,\n    SK_KP_PG_UP      = 92,\n    SK_KP_LEFT       = 93,\n    SK_KP_CENTER     = 94,\n    SK_KP_RIGHT      = 95,\n    SK_KP_END        = 96,\n    SK_KP_DOWN       = 97,\n    SK_KP_PG_DOWN    = 98,\n    SK_KP_INSERT     = 99,\n    SK_KP_DELETE     = 100,\n    SK_PAUSE         = 101,\n    SK_LEFT_WIN      = 102,\n    SK_RIGHT_WIN     = 103,\n    SK_LIST_BIT      = 104,\n    SK_KEYB          = 105,\n    SK_BREAK         = 106,\n    SK_SYSREQ        = 107,\n    SK_SUN_STOP      = 108,\n    SK_SUN_AGAIN     = 109,\n    SK_SUN_PROPS     = 110,\n    SK_SUN_UNDO      = 111,\n    SK_SUN_FRONT     = 112,\n    SK_SUN_COPY      = 113,\n    SK_SUN_OPEN      = 114,\n    SK_SUN_PASTE     = 115,\n    SK_SUN_FIND      = 116,\n    SK_SUN_CUT       = 117,\n    SK_SUN_HELP      = 118,\n    SK_SUN_COMPOSE   = 119,\n    SK_SUN_META_L    = 120,\n    SK_SUN_META_R    = 121,\n    SK_SUN_POWER     = 122,\n    SK_SUN_AUDIO_D   = 123,\n    SK_SUN_AUDIO_U   = 124,\n    SK_SUN_AUDIO_M   = 125,\n    SK_SUN_EMPTY     = 126\n} sim_key_t;"
   ]
  ],
  "e:sim_key_t:SK_ILLEGAL;SK_ESC;SK_F1;SK_F2;SK_F3;SK_F4;SK_F5;SK_F6;SK_F7;SK_F8;SK_F9;SK_F10;SK_F11;SK_F12;SK_PRNT_SCRN;SK_SCROLL_LOCK;SK_NUM_LOCK;SK_CAPS_LOCK;SK_0;SK_1;SK_2;SK_3;SK_4;SK_5;SK_6;SK_7;SK_8;SK_9;SK_A;SK_B;SK_C;SK_D;SK_E;SK_F;SK_G;SK_H;SK_I;SK_J;SK_K;SK_L;SK_M;SK_N;SK_O;SK_P;SK_Q;SK_R;SK_S;SK_T;SK_U;SK_V;SK_W;SK_X;SK_Y;SK_Z;SK_APOSTROPHE;SK_COMMA;SK_PERIOD;SK_SEMICOLON;SK_EQUAL;SK_SLASH;SK_BACKSLASH;SK_SPACE;SK_LEFT_BRACKET;SK_RIGHT_BRACKET;SK_MINUS;SK_GRAVE;SK_TAB;SK_ENTER;SK_BACKSPACE;SK_CTRL_L;SK_CTRL_R;SK_SHIFT_L;SK_SHIFT_R;SK_ALT_L;SK_ALT_R;SK_GR_DIVIDE;SK_GR_MULTIPLY;SK_GR_MINUS;SK_GR_PLUS;SK_GR_ENTER;SK_GR_INSERT;SK_GR_HOME;SK_GR_PG_UP;SK_GR_DELETE;SK_GR_END;SK_GR_PG_DOWN;SK_GR_UP;SK_GR_DOWN;SK_GR_LEFT;SK_GR_RIGHT;SK_KP_HOME;SK_KP_UP;SK_KP_PG_UP;SK_KP_LEFT;SK_KP_CENTER;SK_KP_RIGHT;SK_KP_END;SK_KP_DOWN;SK_KP_PG_DOWN;SK_KP_INSERT;SK_KP_DELETE;SK_PAUSE;SK_LEFT_WIN;SK_RIGHT_WIN;SK_LIST_BIT;SK_KEYB;SK_BREAK;SK_SYSREQ;SK_SUN_STOP;SK_SUN_AGAIN;SK_SUN_PROPS;SK_SUN_UNDO;SK_SUN_FRONT;SK_SUN_COPY;SK_SUN_OPEN;SK_SUN_PASTE;SK_SUN_FIND;SK_SUN_CUT;SK_SUN_HELP;SK_SUN_COMPOSE;SK_SUN_META_L;SK_SUN_META_R;SK_SUN_POWER;SK_SUN_AUDIO_D;SK_SUN_AUDIO_U;SK_SUN_AUDIO_M;SK_SUN_EMPTY"
 ],
 "sim_version_t": [
  "build-id.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    SIM_VERSION_8 = 0x1f40,\n    SIM_VERSION_7 = 0x1b58,\n    SIM_VERSION_6 = 0x1770,\n    SIM_VERSION_5 = 0x1388\n} sim_version_t;"
   ]
  ],
  "e:sim_version_t:SIM_VERSION_8;SIM_VERSION_7;SIM_VERSION_6;SIM_VERSION_5"
 ],
 "simple_dispatcher_interface_t": [
  "devs/frequency.h",
  "devs/frequency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct simple_dispatcher_interface {\n    void (*subscribe)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL listener, const char *listener_port);\n    void (*unsubscribe)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL listener, const char *listener_port);\n} simple_dispatcher_interface_t;"
   ]
  ],
  "s:simple_dispatcher_interface_t:subscribe;unsubscribe"
 ],
 "simple_interrupt_interface_t": [
  "devs/interrupt.h",
  "devs/interrupt.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct simple_interrupt_interface {\n    void (*interrupt)(conf_object_t *NOTNULL obj, int value);\n    void (*interrupt_clear)(conf_object_t *NOTNULL obj, int value);\n} simple_interrupt_interface_t;"
   ]
  ],
  "s:simple_interrupt_interface_t:interrupt;interrupt_clear"
 ],
 "simtime_t": [
  "base/time.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int64 simtime_t;"
   ]
  ],
  "t"
 ],
 "simulator_cache_interface_t": [
  "model-iface/simulator-cache.h",
  "model-iface/simulator-cache.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct simulator_cache_interface {\n    void (*flush)(conf_object_t *obj);\n} simulator_cache_interface_t;"
   ]
  ],
  "s:simulator_cache_interface_t:flush"
 ],
 "slave_agent_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct slave_agent_interface {\n    void (*accept)(conf_object_t *obj, bytes_t msg);\n    void (*accept_async)(conf_object_t *obj, bytes_t msg);\n} slave_agent_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:slave_agent_interface_t:accept;accept_async"
 ],
 "slave_time_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct {\n    int128 val;\n} slave_time_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:slave_time_t:val"
 ],
 "slaver_message_interface_t": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "typedef struct slaver_message_interface {\n    void (*send)(conf_object_t *obj, slave_time_t time, uint64 skey, bytes_t msg);\n    void (*send_async)(conf_object_t *obj, bytes_t msg);\n} slaver_message_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:slaver_message_interface_t:send;send_async"
 ],
 "smm_instrumentation_subscribe_interface_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct smm_instrumentation_subscribe_interface {\n    cpu_cb_handle_t *(*register_smm_enter_before_cb)(conf_object_t *cpu, conf_object_t *connection, smm_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_smm_enter_after_cb)(conf_object_t *cpu, conf_object_t *connection, smm_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_smm_leave_before_cb)(conf_object_t *cpu, conf_object_t *connection, smm_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_smm_leave_after_cb)(conf_object_t *cpu, conf_object_t *connection, smm_switch_cb_t cb, lang_void *user_data);\n} smm_instrumentation_subscribe_interface_t;"
   ]
  ],
  "s:smm_instrumentation_subscribe_interface_t:register_smm_enter_before_cb;register_smm_enter_after_cb;register_smm_leave_before_cb;register_smm_leave_after_cb"
 ],
 "smm_reg_state_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 gpr[16];\n    uint16 seg_sel[6];\n    uint16 tr_sel;\n    uint16 ldtr_sel;\n    uint64 seg_base[6];\n    uint64 tr_base;\n    uint64 ldtr_base;\n    uint32 seg_attr[6];\n    uint32 tr_attr;\n    uint32 ldtr_attr;\n    uint32 seg_limit[6];\n    uint32 tr_limit;\n    uint32 ldtr_limit;\n    uint64 cr0;\n    uint64 cr2;\n    uint64 cr3;\n    uint64 cr4;\n    uint64 cr8;\n    uint64 ia32_efer;\n    uint64 rip;\n    uint64 rflags;\n    uint64 dr[4];\n    uint64 dr6;\n    uint64 dr7;\n    uint32 smbase;\n    uint16 idtr_limit;\n    uint16 gdtr_limit;\n    uint64 idtr_base;\n    uint64 gdtr_base;\n    bool activity_hlt;\n    bool io_instr_restart;\n    bool block_nmi;\n    uint8 vmx_mode;\n    bool ept_is_on;\n    bool reserved[3];\n    uint64 io_rip;\n    uint64 io_lin_addr;\n    uint32 io_instr_info;\n    uint32 reserved2;\n    uint64 bndcfgs;\n    uint64 eptp;\n    uint64 pdpte[4];\n    uint64 ssp;\n    uint64 reserved3[6];\n} smm_reg_state_t;"
   ]
  ],
  "s:smm_reg_state_t:gpr;seg_sel;tr_sel;ldtr_sel;seg_base;tr_base;ldtr_base;seg_attr;tr_attr;ldtr_attr;seg_limit;tr_limit;ldtr_limit;cr0;cr2;cr3;cr4;cr8;ia32_efer;rip;rflags;dr;dr6;dr7;smbase;idtr_limit;gdtr_limit;idtr_base;gdtr_base;activity_hlt;io_instr_restart;block_nmi;vmx_mode;ept_is_on;reserved;io_rip;io_lin_addr;io_instr_info;reserved2;bndcfgs;eptp;pdpte;ssp;reserved3"
 ],
 "smm_switch_cb_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*smm_switch_cb_t)(conf_object_t *obj, conf_object_t *cpu, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "snapshot_error_t": [
  "simulator/snapshots.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Snapshot_Error_No_Error                = 0,\n    Snapshot_Error_No_Name,\n    Snapshot_Error_Snapshot_Not_Found,\n    Snapshot_Error_Snapshot_Already_Exists,\n    Snapshot_Error_Illegal_Configuration,\n    Snapshot_Error_Internal_Error\n} snapshot_error_t;"
   ]
  ],
  "e:snapshot_error_t:Snapshot_Error_No_Error;Snapshot_Error_No_Name;Snapshot_Error_Snapshot_Not_Found;Snapshot_Error_Snapshot_Already_Exists;Snapshot_Error_Illegal_Configuration;Snapshot_Error_Internal_Error"
 ],
 "snoop_memory_interface_t": [
  "model-iface/timing-model.h",
  "model-iface/timing-model.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct snoop_memory_interface {\n    cycles_t (*operate)(conf_object_t *NOTNULL mem_hier, conf_object_t *NOTNULL space, map_list_t *map_list, generic_transaction_t *NOTNULL mem_op);\n} snoop_memory_interface_t;"
   ]
  ],
  "s:snoop_memory_interface_t:operate"
 ],
 "socket_t": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int socket_t;"
   ]
  ],
  "t"
 ],
 "spr_interface_t": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct spr_interface {\n    void (*register_user_handlers)(conf_object_t *cpu, int64 spr_number, gen_spr_user_getter_func_t getter, lang_void *user_getter_data, gen_spr_user_setter_func_t setter, lang_void *user_setter_data, int privilege_checks);\n    void (*unregister_user_handlers)(conf_object_t *cpu, int64 spr_number);\n    void (*set_target_value)(conf_object_t *cpu, uint64 value);\n    void (*stash_value)(conf_object_t *cpu, int64 spr_number, uint64 value);\n    uint64 (*fetch_value)(conf_object_t *cpu, int64 spr_number);\n    gen_spr_ret_t (*default_getter)(conf_object_t *cpu, int64 spr_number, gen_spr_access_type_t type);\n    gen_spr_ret_t (*default_setter)(conf_object_t *cpu, int64 spr_number, uint64 value, gen_spr_access_type_t type);\n    const char *(*get_name)(conf_object_t *cpu, int64 spr_number);\n    int64 (*get_number)(conf_object_t *cpu, const char *spr_name);\n} spr_interface_t;"
   ]
  ],
  "s:spr_interface_t:register_user_handlers;unregister_user_handlers;set_target_value;stash_value;fetch_value;default_getter;default_setter;get_name;get_number"
 ],
 "stall_interface_t": [
  "model-iface/step.h",
  "model-iface/step.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct stall_interface {\n    cycles_t (*get_stall_cycles)(conf_object_t *obj);\n    void (*set_stall_cycles)(conf_object_t *obj, cycles_t cycles);\n    cycles_t (*get_total_stall_cycles)(conf_object_t *obj);\n} stall_interface_t;"
   ]
  ],
  "s:stall_interface_t:get_stall_cycles;set_stall_cycles;get_total_stall_cycles"
 ],
 "state_save_kind_t": [
  "model-iface/save-state.h",
  "model-iface/save-state.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_State_Default = 1\n} state_save_kind_t;"
   ]
  ],
  "e:state_save_kind_t:Sim_State_Default"
 ],
 "step_cycle_ratio_interface_t": [
  "model-iface/step.h",
  "model-iface/step.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct step_cycle_ratio_interface {\n    step_cycle_ratio_t (*get_ratio)(conf_object_t *obj);\n    void (*set_ratio)(conf_object_t *obj, uint32 steps, uint32 cycles);\n} step_cycle_ratio_interface_t;"
   ]
  ],
  "s:step_cycle_ratio_interface_t:get_ratio;set_ratio"
 ],
 "step_cycle_ratio_t": [
  "model-iface/step.h",
  "model-iface/step.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint32 steps;\n    uint32 cycles;\n} step_cycle_ratio_t;"
   ]
  ],
  "s:step_cycle_ratio_t:steps;cycles"
 ],
 "step_event_cb_t": [
  "model-iface/event-instrumentation.h",
  "model-iface/event-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*step_event_cb_t)(conf_object_t *obj, conf_object_t *step_obj, conf_object_t *event_obj, pc_step_t steps, const char *event_class_name, const char *description, attr_value_t value, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "step_event_instrumentation_interface_t": [
  "model-iface/event-instrumentation.h",
  "model-iface/event-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct step_event_instrumentation_interface {\n    step_handle_t *(*register_step_event_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, step_event_cb_t cb, lang_void *data);\n    void (*remove_step_event_cb)(conf_object_t *cpu, step_handle_t *handle);\n} step_event_instrumentation_interface_t;"
   ]
  ],
  "s:step_event_instrumentation_interface_t:register_step_event_cb;remove_step_event_cb"
 ],
 "step_handle_t": [
  "model-iface/event-instrumentation.h",
  "model-iface/event-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct step_instrumentation step_handle_t;"
   ]
  ],
  "s:step_handle_t"
 ],
 "step_info_interface_t": [
  "model-iface/step.h",
  "model-iface/step.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct step_info_interface {\n    pc_step_t (*get_halt_steps)(conf_object_t *obj);\n    void (*set_halt_steps)(conf_object_t *obj, pc_step_t steps);\n    pc_step_t (*get_ffwd_steps)(conf_object_t *obj);\n    void (*set_ffwd_steps)(conf_object_t *obj, pc_step_t steps);\n    pc_step_t (*get_ma_steps)(conf_object_t *obj);\n    void (*set_ma_steps)(conf_object_t *obj, pc_step_t steps);\n} step_info_interface_t;"
   ]
  ],
  "s:step_info_interface_t:get_halt_steps;set_halt_steps;get_ffwd_steps;set_ffwd_steps;get_ma_steps;set_ma_steps"
 ],
 "step_interface_t": [
  "model-iface/step.h",
  "model-iface/step.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct step_interface {\n    pc_step_t (*get_step_count)(conf_object_t *NOTNULL queue);\n    void (*post_step)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, pc_step_t steps, lang_void *user_data);\n    void (*cancel_step)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    pc_step_t (*find_next_step)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    attr_value_t (*events)(conf_object_t *NOTNULL obj);\n    pc_step_t (*advance)(conf_object_t *queue, pc_step_t steps);\n} step_interface_t;"
   ]
  ],
  "s:step_interface_t:get_step_count;post_step;cancel_step;find_next_step;events;advance"
 ],
 "stop_bits_t": [
  "devs/serial-device.h",
  "devs/serial-device.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Stop_Bits_1,\n    Stop_Bits_1p5,\n    Stop_Bits_2\n} stop_bits_t;"
   ]
  ],
  "e:stop_bits_t:Stop_Bits_1;Stop_Bits_1p5;Stop_Bits_2"
 ],
 "stop_type_t": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Stop_Stopped,\n    Sim_Stop_Aborted\n} stop_type_t;"
   ]
  ],
  "e:stop_type_t:Sim_Stop_Stopped;Sim_Stop_Aborted"
 ],
 "straight_load16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 straight_load16(const uint16 *p);"
   ]
  ],
  "f"
 ],
 "straight_load32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 straight_load32(const uint32 *p);"
   ]
  ],
  "f"
 ],
 "straight_load64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 straight_load64(const uint64 *p);"
   ]
  ],
  "f"
 ],
 "straight_load8": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 straight_load8(const uint8 *p);"
   ]
  ],
  "f"
 ],
 "straight_store16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void straight_store16(uint16 *p, uint16 x);"
   ]
  ],
  "f"
 ],
 "straight_store32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void straight_store32(uint32 *p, uint32 x);"
   ]
  ],
  "f"
 ],
 "straight_store64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void straight_store64(uint64 *p, uint64 x);"
   ]
  ],
  "f"
 ],
 "straight_store8": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void straight_store8(uint8 *p, uint8 x);"
   ]
  ],
  "f"
 ],
 "strbuf_t": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct strbuf strbuf_t;"
   ]
  ],
  "s:strbuf_t"
 ],
 "struct _object": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct _object;"
   ]
  ],
  "s:PyObject"
 ],
 "struct _typeobject": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct _typeobject;"
   ]
  ],
  "s:PyTypeObject"
 ],
 "struct a20_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct a20_interface {\n    void (*set_a20_line)(conf_object_t *NOTNULL obj, int value);\n    int (*get_a20_line)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:a20_interface_t:set_a20_line;get_a20_line"
 ],
 "struct abs_pointer_activate_interface": [
  "model-iface/abs-pointer.h",
  "model-iface/abs-pointer.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct abs_pointer_activate_interface {\n    void (*enable)(conf_object_t *obj);\n    void (*disable)(conf_object_t *obj);\n};"
   ]
  ],
  "s:abs_pointer_activate_interface_t:enable;disable"
 ],
 "struct abs_pointer_interface": [
  "model-iface/abs-pointer.h",
  "model-iface/abs-pointer.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct abs_pointer_interface {\n    void (*set_state)(conf_object_t *obj, abs_pointer_state_t state);\n};"
   ]
  ],
  "s:abs_pointer_interface_t:set_state"
 ],
 "struct addr_prof_iter": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct addr_prof_iter {\n    uint64 (*next)(struct addr_prof_iter *i);\n    void (*destroy)(struct addr_prof_iter *i);\n    generic_address_t addr;\n};"
   ]
  ],
  "s:addr_prof_iter_t:next;destroy;addr"
 ],
 "struct address_profiler_interface": [
  "simulator-iface/address-profiler.h",
  "simulator-iface/address-profiler.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct address_profiler_interface {\n    addr_prof_iter_t *(*iter)(conf_object_t *prof_obj, unsigned view, generic_address_t start, generic_address_t stop);\n    uint64 (*sum)(conf_object_t *prof_obj, unsigned view, generic_address_t start, generic_address_t end);\n    uint64 (*max)(conf_object_t *prof_obj, unsigned view, generic_address_t start, generic_address_t end);\n    unsigned (*granularity_log2)(conf_object_t *prof_obj, unsigned view);\n    int (*address_bits)(conf_object_t *prof_obj, unsigned view);\n    int (*physical_addresses)(conf_object_t *prof_obj, unsigned view);\n    const char *(*description)(conf_object_t *prof_obj, unsigned view);\n    unsigned (*num_views)(conf_object_t *prof_obj);\n};"
   ]
  ],
  "s:address_profiler_interface_t:iter;sum;max;granularity_log2;address_bits;physical_addresses;description;num_views"
 ],
 "struct apic_bus_interface": [
  "devs/apic.h",
  "devs/apic.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct apic_bus_interface {\n    apic_bus_status_t (*interrupt)(conf_object_t *obj, apic_destination_mode_t dest_mode, apic_delivery_mode_t delivery_mode, int level_assert, apic_trigger_mode_t trigger_mode, uint8 vector, uint8 destination);\n};"
   ]
  ],
  "s:apic_bus_interface_t:interrupt"
 ],
 "struct apic_cpu_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct apic_cpu_interface {\n    uint64 (*tpr_r)(conf_object_t *NOTNULL obj);\n    void (*tpr_w)(conf_object_t *NOTNULL obj, uint64 tpr);\n    void (*local_int)(conf_object_t *NOTNULL obj, local_apic_interrupt_t int_type);\n    void (*power_on)(conf_object_t *NOTNULL obj, bool bsp, int apic_id);\n    void (*init)(conf_object_t *NOTNULL obj);\n    bool (*enabled_r)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:apic_cpu_interface_t:tpr_r;tpr_w;local_int;power_on;init;enabled_r"
 ],
 "struct arinc429_bus_interface": [
  "devs/arinc-429.h",
  "devs/arinc-429.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arinc429_bus_interface {\n    void (*send_word)(conf_object_t *bus, uint32 word, int parity_ok);\n};"
   ]
  ],
  "s:arinc429_bus_interface_t:send_word"
 ],
 "struct arinc429_receiver_interface": [
  "devs/arinc-429.h",
  "devs/arinc-429.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arinc429_receiver_interface {\n    void (*receive_word)(conf_object_t *dev, uint32 word, int parity_ok);\n};"
   ]
  ],
  "s:arinc429_receiver_interface_t:receive_word"
 ],
 "struct arm_avic": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_avic {\n    int valid;\n    uint32 address;\n};"
   ]
  ],
  "s:arm_avic_t:valid;address"
 ],
 "struct arm_avic_interface": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_avic_interface {\n    arm_avic_t (*get_interrupt_address)(conf_object_t *obj);\n};"
   ]
  ],
  "s:arm_avic_interface_t:get_interrupt_address"
 ],
 "struct arm_coprocessor_interface": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_coprocessor_interface {\n    void (*process_data)(conf_object_t *NOTNULL obj, uint32 CRd, uint32 opcode_1, uint32 CRn, uint32 CRm, uint32 opcode_2, int type);\n    void (*load_coprocessor)(conf_object_t *NOTNULL obj, uint32 CRd, uint32 N, uint32 Options, uint32 value, int type);\n    uint32 (*read_register)(conf_object_t *NOTNULL obj, uint32 opcode_1, uint32 CRn, uint32 CRm, uint32 opcode_2, int type);\n    void (*write_register)(conf_object_t *NOTNULL obj, uint32 value, uint32 opcode_1, uint32 CRn, uint32 CRm, uint32 opcode_2, int type);\n    uint64 (*read_register_64_bit)(conf_object_t *NOTNULL obj, uint32 opcode_1, uint32 CRm, int type);\n    void (*write_register_64_bit)(conf_object_t *NOTNULL obj, uint64 value, uint32 opcode_1, uint32 CRm, int type);\n    uint32 (*store_coprocessor)(conf_object_t *NOTNULL obj, uint32 CRd, uint32 N, uint32 Options, int type);\n    void (*reset)(conf_object_t *NOTNULL obj, int hard_reset);\n};"
   ]
  ],
  "s:arm_coprocessor_interface_t:process_data;load_coprocessor;read_register;write_register;read_register_64_bit;write_register_64_bit;store_coprocessor;reset"
 ],
 "struct arm_cpu_group_event_interface": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_cpu_group_event_interface {\n    void (*signal_event)(conf_object_t *obj);\n};"
   ]
  ],
  "s:arm_cpu_group_event_interface_t:signal_event"
 ],
 "struct arm_cpu_group_exclusive_interface": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_cpu_group_exclusive_interface {\n    void (*mark_exclusive)(conf_object_t *obj, physical_address_t address, physical_address_t size);\n    bool (*clear_and_probe_exclusive)(conf_object_t *obj, physical_address_t clear_address, physical_address_t clear_size, physical_address_t probe_address, physical_address_t probe_size);\n};"
   ]
  ],
  "s:arm_cpu_group_exclusive_interface_t:mark_exclusive;clear_and_probe_exclusive"
 ],
 "struct arm_cpu_group_tlb_interface": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_cpu_group_tlb_interface {\n    void (*invalidate_tlb)(conf_object_t *obj, arm_translation_regime_t translation_regime, bool by_virtual_address, logical_address_t virtual_address);\n};"
   ]
  ],
  "s:arm_cpu_group_tlb_interface_t:invalidate_tlb"
 ],
 "struct arm_cpu_state": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_cpu_state {\n    bool fmo_set;\n    bool imo_set;\n    bool irq_set;\n    bool fiq_set;\n    bool ns;\n    int el;\n    uint32 mpidr;\n};"
   ]
  ],
  "s:arm_cpu_state_t:fmo_set;imo_set;irq_set;fiq_set;ns;el;mpidr"
 ],
 "struct arm_external_debug_interface": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_external_debug_interface {\n    void (*handle_semihosting)(conf_object_t *obj);\n    uint64 (*read_reg)(conf_object_t *obj, int offset);\n    void (*write_reg)(conf_object_t *obj, int offset, uint64 v);\n};"
   ]
  ],
  "s:arm_external_debug_interface_t:handle_semihosting;read_reg;write_reg"
 ],
 "struct arm_gic_cpu_state_interface": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_gic_cpu_state_interface {\n    arm_cpu_state_t (*get_cpu_state)(conf_object_t *obj);\n};"
   ]
  ],
  "s:arm_gic_cpu_state_interface_t:get_cpu_state"
 ],
 "struct arm_gic_interface": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_gic_interface {\n    uint64 (*read_register)(conf_object_t *obj, gic_reg_info_t reg_info, bool inquiry);\n    void (*write_register)(conf_object_t *obj, gic_reg_info_t reg_info, uint64 value);\n    void (*cpu_state_changed)(conf_object_t *obj, arm_cpu_state_t cpu_state);\n};"
   ]
  ],
  "s:arm_gic_interface_t:read_register;write_register;cpu_state_changed"
 ],
 "struct arm_interface": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_interface {\n    uint64 (*read_register_mode)(conf_object_t *processor_obj, int reg_num, int mode);\n    void (*write_register_mode)(conf_object_t *processor_obj, int reg_num, int mode, uint64 value);\n};"
   ]
  ],
  "s:arm_interface_t:read_register_mode;write_register_mode"
 ],
 "struct arm_memory_transaction": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_memory_transaction {\n    generic_transaction_t s;\n    processor_mode_t mode;\n    int rotate;\n    arm_mem_instr_origin_t instr_origin;\n};"
   ]
  ],
  "s:arm_memory_transaction_t:s;mode;rotate;instr_origin"
 ],
 "struct arm_trustzone_interface": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct arm_trustzone_interface {\n    arm_trustzone_mode_t (*get_security_mode)(conf_object_t *NOTNULL obj);\n    arm_trustzone_mode_t (*mem_op_security_mode)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL memop);\n};"
   ]
  ],
  "s:arm_trustzone_interface_t:get_security_mode;mem_op_security_mode"
 ],
 "struct attr_value": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct attr_value;"
   ]
  ],
  "s:attr_value_t"
 ],
 "struct bank_access": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct bank_access;"
   ]
  ],
  "s:bank_access_t"
 ],
 "struct bank_after_read_interface": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct bank_after_read_interface {\n    physical_address_t (*offset)(bank_access_t *handle);\n    physical_address_t (*size)(bank_access_t *handle);\n    bool (*missed)(bank_access_t *handle);\n    uint64 (*value)(bank_access_t *handle);\n    void (*set_missed)(bank_access_t *handle, bool missed);\n    void (*set_value)(bank_access_t *handle, uint64 value);\n    conf_object_t *(*initiator)(bank_access_t *handle);\n};"
   ]
  ],
  "s:bank_after_read_interface_t:offset;size;missed;value;set_missed;set_value;initiator"
 ],
 "struct bank_after_write_interface": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct bank_after_write_interface {\n    physical_address_t (*offset)(bank_access_t *handle);\n    physical_address_t (*size)(bank_access_t *handle);\n    bool (*missed)(bank_access_t *handle);\n    void (*set_missed)(bank_access_t *handle, bool missed);\n    conf_object_t *(*initiator)(bank_access_t *handle);\n};"
   ]
  ],
  "s:bank_after_write_interface_t:offset;size;missed;set_missed;initiator"
 ],
 "struct bank_before_read_interface": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct bank_before_read_interface {\n    physical_address_t (*offset)(bank_access_t *handle);\n    physical_address_t (*size)(bank_access_t *handle);\n    void (*set_offset)(bank_access_t *handle, physical_address_t offset);\n    void (*inquire)(bank_access_t *handle);\n    conf_object_t *(*initiator)(bank_access_t *handle);\n};"
   ]
  ],
  "s:bank_before_read_interface_t:offset;size;set_offset;inquire;initiator"
 ],
 "struct bank_before_write_interface": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct bank_before_write_interface {\n    physical_address_t (*offset)(bank_access_t *handle);\n    physical_address_t (*size)(bank_access_t *handle);\n    uint64 (*value)(bank_access_t *handle);\n    void (*suppress)(bank_access_t *handle);\n    void (*set_offset)(bank_access_t *handle, physical_address_t offset);\n    void (*set_value)(bank_access_t *handle, uint64 value);\n    conf_object_t *(*initiator)(bank_access_t *handle);\n};"
   ]
  ],
  "s:bank_before_write_interface_t:offset;size;value;suppress;set_offset;set_value;initiator"
 ],
 "struct bank_instrumentation_subscribe_interface": [
  "model-iface/bank-instrumentation.h",
  "model-iface/bank-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct bank_instrumentation_subscribe_interface {\n    bank_callback_handle_t (*register_before_read)(conf_object_t *NOTNULL bank, conf_object_t *connection, uint64 offset, uint64 size, before_read_callback_t before_read, lang_void *user_data);\n    bank_callback_handle_t (*register_after_read)(conf_object_t *NOTNULL bank, conf_object_t *connection, uint64 offset, uint64 size, after_read_callback_t after_read, lang_void *user_data);\n    bank_callback_handle_t (*register_before_write)(conf_object_t *NOTNULL bank, conf_object_t *connection, uint64 offset, uint64 size, before_write_callback_t before_write, lang_void *user_data);\n    bank_callback_handle_t (*register_after_write)(conf_object_t *NOTNULL bank, conf_object_t *connection, uint64 offset, uint64 size, after_write_callback_t after_write, lang_void *user_data);\n    void (*remove_callback)(conf_object_t *NOTNULL bank, bank_callback_handle_t callback);\n    void (*remove_connection_callbacks)(conf_object_t *NOTNULL bank, conf_object_t *NOTNULL connection);\n    void (*enable_connection_callbacks)(conf_object_t *NOTNULL bank, conf_object_t *NOTNULL connection);\n    void (*disable_connection_callbacks)(conf_object_t *NOTNULL bank, conf_object_t *NOTNULL connection);\n};"
   ]
  ],
  "s:bank_instrumentation_subscribe_interface_t:register_before_read;register_after_read;register_before_write;register_after_write;remove_callback;remove_connection_callbacks;enable_connection_callbacks;disable_connection_callbacks"
 ],
 "struct branch_arc_interface": [
  "simulator-iface/address-profiler.h",
  "simulator-iface/address-profiler.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct branch_arc_interface {\n    branch_arc_iter_t *(*iter)(conf_object_t *prof_obj, generic_address_t start, generic_address_t stop, branch_recorder_direction_t dir);\n};"
   ]
  ],
  "s:branch_arc_interface_t:iter"
 ],
 "struct branch_arc_iter": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct branch_arc_iter {\n    branch_arc_t *(*next)(struct branch_arc_iter *i);\n    void (*destroy)(struct branch_arc_iter *i);\n};"
   ]
  ],
  "s:branch_arc_iter_t:next;destroy"
 ],
 "struct branch_recorder": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct branch_recorder;"
   ]
  ],
  "s:branch_recorder_t"
 ],
 "struct branch_recorder_handler_interface": [
  "model-iface/branch-recorder.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct branch_recorder_handler_interface {\n    int (*attach_branch_recorder)(conf_object_t *cpu, conf_object_t *NOTNULL brec);\n    int (*detach_branch_recorder)(conf_object_t *cpu, conf_object_t *NOTNULL brec);\n    void (*create_cpu_branch_recorder)(branch_recorder_t *br);\n    void (*destroy_cpu_branch_recorder)(branch_recorder_t *br);\n    void (*delete_arcs)(branch_recorder_t *br);\n    int (*num_branches)(branch_recorder_t *br);\n    attr_value_t (*get_branches)(branch_recorder_t *br);\n    iter_func_t *iter;\n    branch_arc_iter_t *(*iter_branch_arc)(branch_recorder_t *br, generic_address_t start, generic_address_t stop, branch_recorder_direction_t dir);\n    int (*eec_interrupt_instruction)(conf_object_t *cpu, int extype);\n    unsigned granularity_log2;\n    const char **view_descriptions;\n    int num_views;\n    int pa_bits;\n    int va_bits;\n};"
   ]
  ],
  "s:branch_recorder_handler_interface_t:attach_branch_recorder;detach_branch_recorder;create_cpu_branch_recorder;destroy_cpu_branch_recorder;delete_arcs;num_branches;get_branches;iter;iter_branch_arc;eec_interrupt_instruction;granularity_log2;view_descriptions;num_views;pa_bits;va_bits"
 ],
 "struct break_strings_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct break_strings_interface {\n    int64 (*add)(conf_object_t *NOTNULL obj, const char *str, break_string_cb_t cb, lang_void *arg);\n    int64 (*add_single)(conf_object_t *NOTNULL obj, const char *str, break_string_cb_t cb, lang_void *arg);\n    void (*remove)(conf_object_t *NOTNULL obj, int64 bp_id);\n};"
   ]
  ],
  "s:break_strings_interface_t:add;add_single;remove"
 ],
 "struct break_strings_v2_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct break_strings_v2_interface {\n    int64 (*add)(conf_object_t *NOTNULL obj, const char *str, break_string_cb_t cb, lang_void *arg);\n    int64 (*add_single)(conf_object_t *NOTNULL obj, const char *str, break_string_cb_t cb, lang_void *arg);\n    int64 (*add_regexp)(conf_object_t *NOTNULL obj, const char *str, break_string_cb_t cb, lang_void *arg);\n    void (*remove)(conf_object_t *NOTNULL obj, int64 bp_id);\n};"
   ]
  ],
  "s:break_strings_v2_interface_t:add;add_single;add_regexp;remove"
 ],
 "struct breakpoint_change_interface": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct breakpoint_change_interface {\n    void (*breakpoint_added)(conf_object_t *obj, conf_object_t *bp_obj, breakpoint_handle_t handle);\n    void (*breakpoint_removed)(conf_object_t *obj, conf_object_t *bp_obj, breakpoint_handle_t handle);\n};"
   ]
  ],
  "s:breakpoint_change_interface_t:breakpoint_added;breakpoint_removed"
 ],
 "struct breakpoint_interface": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct breakpoint_interface {\n    void (*insert_breakpoint)(conf_object_t *object, conf_object_t *caller, breakpoint_handle_t handle, access_t access, generic_address_t start, generic_address_t end);\n    void (*remove_breakpoint)(conf_object_t *object, breakpoint_handle_t handle);\n    breakpoint_info_t (*get_breakpoint)(conf_object_t *obj, breakpoint_handle_t handle);\n};"
   ]
  ],
  "s:breakpoint_interface_t:insert_breakpoint;remove_breakpoint;get_breakpoint"
 ],
 "struct breakpoint_manager_interface": [
  "simulator-iface/breakpoint-manager.h",
  "simulator-iface/breakpoint-manager.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct breakpoint_manager_interface {\n    attr_value_t (*list_breakpoints)(conf_object_t *NOTNULL mgr);\n    void (*delete_breakpoint)(conf_object_t *NOTNULL mgr, uint64 id);\n    attr_value_t (*get_properties)(conf_object_t *NOTNULL mgr, uint64 id);\n    bool (*set_enabled)(conf_object_t *NOTNULL mgr, uint64 id, bool enabled);\n    bool (*set_temporary)(conf_object_t *NOTNULL mgr, uint64 id, bool temporary);\n    bool (*set_ignore_count)(conf_object_t *NOTNULL mgr, uint64 id, uint64 ignore_count);\n};"
   ]
  ],
  "s:breakpoint_manager_interface_t:list_breakpoints;delete_breakpoint;get_properties;set_enabled;set_temporary;set_ignore_count"
 ],
 "struct breakpoint_query_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct breakpoint_query_interface {\n    breakpoint_set_t (*get_breakpoints)(conf_object_t *obj, access_t read_write_execute, generic_address_t start, generic_address_t end);\n    void (*free_breakpoint_set)(conf_object_t *obj, breakpoint_set_t *set);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:breakpoint_query_interface_t:get_breakpoints;free_breakpoint_set"
 ],
 "struct breakpoint_query_v2_interface": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct breakpoint_query_v2_interface {\n    breakpoint_set_t (*get_breakpoints)(conf_object_t *obj, access_t read_write_execute, generic_address_t start, generic_address_t end);\n};"
   ]
  ],
  "s:breakpoint_query_v2_interface_t:get_breakpoints"
 ],
 "struct breakpoint_registration_interface": [
  "simulator-iface/breakpoint-manager.h",
  "simulator-iface/breakpoint-manager.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct breakpoint_registration_interface {\n    uint64 (*register_breakpoint)(conf_object_t *NOTNULL mgr, void (*delete_breakpoint)(cbdata_call_t data, uint64 id), cbdata_register_t delete_data, attr_value_t (*get_properties)(cbdata_call_t data, uint64 id), cbdata_register_t get_properties_data, void (*set_enabled)(cbdata_call_t data, uint64 id, bool enabled), cbdata_register_t set_enabled_data, void (*set_temporary)(cbdata_call_t data, uint64 id, bool temporary), cbdata_register_t set_temporary_data, void (*set_ignore_count)(cbdata_call_t data, uint64 id, uint64 ignore_count), cbdata_register_t set_ignore_count_data);\n    void (*deleted)(conf_object_t *NOTNULL mgr, uint64 id);\n};"
   ]
  ],
  "s:breakpoint_registration_interface_t:register_breakpoint;deleted"
 ],
 "struct breakpoint_trigger_interface": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct breakpoint_trigger_interface {\n    void (*trigger_breakpoint)(conf_object_t *obj, conf_object_t *initiator_obj, breakpoint_handle_t handle, generic_address_t address, generic_address_t size, access_t access, uint8 *data);\n};"
   ]
  ],
  "s:breakpoint_trigger_interface_t:trigger_breakpoint"
 ],
 "struct breakpoint_type_interface": [
  "simulator-iface/breakpoint-manager.h",
  "simulator-iface/breakpoint-manager.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct breakpoint_type_interface {\n    bool (*register_type)(conf_object_t *NOTNULL mgr, const char *NOTNULL name, conf_object_t *NOTNULL provider, attr_value_t args, const char *cls, const char *iface, attr_value_t docs, bool object_required, bool temporary_default, bool recursive);\n    bool (*trigger)(conf_object_t *NOTNULL mgr, conf_object_t *NOTNULL provider, uint64 bp_id, conf_object_t *trigger, const char *msg);\n    uint64 (*get_break_id)(conf_object_t *NOTNULL mgr, uint64 bm_id);\n    uint64 (*get_manager_id)(conf_object_t *NOTNULL mgr, conf_object_t *NOTNULL provider, uint64 bp_id);\n};"
   ]
  ],
  "s:breakpoint_type_interface_t:register_type;trigger;get_break_id;get_manager_id"
 ],
 "struct breakpoint_type_provider_interface": [
  "simulator-iface/breakpoint-manager.h",
  "simulator-iface/breakpoint-manager.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct breakpoint_type_provider_interface {\n    uint64 (*register_bp)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    uint64 (*add_bp)(conf_object_t *NOTNULL obj, int flags, attr_value_t data);\n    void (*remove_bp)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    char *(*trace_msg)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    char *(*break_msg)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    char *(*wait_msg)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    attr_value_t (*break_data)(conf_object_t *NOTNULL obj, uint64 bp_id);\n    attr_value_t (*values)(conf_object_t *NOTNULL obj, const char *arg, attr_value_t prev_args);\n    void (*trace)(conf_object_t *NOTNULL obj, const char *msg);\n};"
   ]
  ],
  "s:breakpoint_type_provider_interface_t:register_bp;add_bp;remove_bp;trace_msg;break_msg;wait_msg;break_data;values;trace"
 ],
 "struct bridge_interface": [
  "devs/memory-space.h",
  "devs/memory-space.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct bridge_interface {\n    exception_type_t (*not_taken)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL src_space, conf_object_t *NOTNULL dst_space, exception_type_t ex, generic_transaction_t *NOTNULL mem_op, map_info_t mapinfo);\n};"
   ]
  ],
  "s:bridge_interface_t:not_taken"
 ],
 "struct cache_control_interface": [
  "model-iface/cache.h",
  "model-iface/cache.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cache_control_interface {\n    cycles_t (*cache_control)(conf_object_t *cache, cache_control_operation_t op, generic_transaction_t *mem_op);\n};"
   ]
  ],
  "s:cache_control_interface_t:cache_control"
 ],
 "struct cached_instruction_data": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cached_instruction_data;"
   ]
  ],
  "s:cached_instruction_handle_t"
 ],
 "struct callback_info_interface": [
  "model-iface/instrumentation-provider.h",
  "model-iface/instrumentation-provider.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct callback_info_interface {\n    attr_value_t (*get_callbacks)(conf_object_t *obj);\n};"
   ]
  ],
  "s:callback_info_interface_t:get_callbacks"
 ],
 "struct cbdata": [
  "base/cbdata.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cbdata;"
   ]
  ],
  "s:cbdata_t"
 ],
 "struct cdrom_media_interface": [
  "model-iface/cdrom.h",
  "model-iface/cdrom.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cdrom_media_interface {\n    int (*read_toc)(conf_object_t *media, uint8 *buf, int msf, int start_track);\n    uint32 (*capacity)(conf_object_t *media);\n    int (*read_block)(conf_object_t *media, uint8 *buf, int lba);\n    int (*read_raw_block)(conf_object_t *media, uint8 *buf, int lba);\n    int (*insert)(conf_object_t *media);\n    void (*eject)(conf_object_t *media);\n};"
   ]
  ],
  "s:cdrom_media_interface_t:read_toc;capacity;read_block;read_raw_block;insert;eject"
 ],
 "struct cell_inspection_interface": [
  "model-iface/execute.h",
  "model-iface/execute.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cell_inspection_interface {\n    void (*set_current_processor_obj)(conf_object_t *obj, conf_object_t *cpu_obj);\n    void (*set_current_step_obj)(conf_object_t *obj, conf_object_t *step_obj);\n};"
   ]
  ],
  "s:cell_inspection_interface_t:set_current_processor_obj;set_current_step_obj"
 ],
 "struct checkpoint_interface": [
  "simulator-iface/checkpoint.h",
  "simulator-iface/checkpoint.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct checkpoint_interface {\n    void (*save)(conf_object_t *obj, const char *NOTNULL path);\n    void (*finish)(conf_object_t *obj, int success);\n    int (*has_persistent_data)(conf_object_t *obj);\n    void (*save_v2)(conf_object_t *obj, const char *NOTNULL path, save_flags_t flags);\n};"
   ]
  ],
  "s:checkpoint_interface_t:save;finish;has_persistent_data;save_v2"
 ],
 "struct class_data": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct class_data {\n    conf_object_t *(*alloc_object)(lang_void *data);\n    lang_void *(*init_object)(conf_object_t *obj, lang_void *data);\n    void (*finalize_instance)(conf_object_t *obj);\n    void (*pre_delete_instance)(conf_object_t *obj);\n    int (*delete_instance)(conf_object_t *obj);\n    const char *description;\n    const char *class_desc;\n    class_kind_t kind;\n};"
   ]
  ],
  "s:class_data_t:alloc_object;init_object;finalize_instance;pre_delete_instance;delete_instance;description;class_desc;kind"
 ],
 "struct class_info": [
  "base/conf-object.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct class_info {\n    conf_object_t *(*alloc)(conf_class_t *cls);\n    lang_void *(*init)(conf_object_t *obj);\n    void (*finalize)(conf_object_t *obj);\n    void (*objects_finalized)(conf_object_t *obj);\n    void (*deinit)(conf_object_t *obj);\n    void (*dealloc)(conf_object_t *obj);\n    const char *description;\n    const char *short_desc;\n    class_kind_t kind;\n};"
   ]
  ],
  "s:class_info_t:alloc;init;finalize;objects_finalized;deinit;dealloc;description;short_desc;kind"
 ],
 "struct clock_instrumentation": [
  "model-iface/event-instrumentation.h",
  "model-iface/event-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct clock_instrumentation;"
   ]
  ],
  "s:cycle_handle_t"
 ],
 "struct cmd_line_frontend_interface": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cmd_line_frontend_interface {\n    void (*write)(conf_object_t *obj, const char *NOTNULL str);\n    void (*delete_line)(conf_object_t *obj);\n    void (*disconnect)(conf_object_t *obj);\n    void (*cursor_left)(conf_object_t *obj, int num);\n    void (*cursor_right)(conf_object_t *obj, int num);\n    void (*clear_screen)(conf_object_t *obj);\n    void (*prompt_end)(conf_object_t *obj, int pos);\n    void (*bell)(conf_object_t *obj);\n};"
   ]
  ],
  "s:cmd_line_frontend_interface_t:write;delete_line;disconnect;cursor_left;cursor_right;clear_screen;prompt_end;bell"
 ],
 "struct cmd_line_selection_interface": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cmd_line_selection_interface {\n    void (*new_selection)(conf_object_t *obj, int x, int y);\n    void (*to_clipboard)(conf_object_t *obj, const char *NOTNULL str);\n};"
   ]
  ],
  "s:cmd_line_selection_interface_t:new_selection;to_clipboard"
 ],
 "struct co_execute_interface": [
  "model-iface/co-execute.h",
  "model-iface/co-execute.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct co_execute_interface {\n    void (*start_thread)(conf_object_t *NOTNULL obj, void (*entry)(lang_void *arg), lang_void *arg);\n    void (*yield)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:co_execute_interface_t:start_thread;yield"
 ],
 "struct completion": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct completion;"
   ]
  ],
  "s:completion_t"
 ],
 "struct component_connector_interface": [
  "model-iface/components.h",
  "model-iface/components.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct component_connector_interface {\n    attr_value_t (*get_check_data)(conf_object_t *obj, conf_object_t *NOTNULL connector);\n    attr_value_t (*get_connect_data)(conf_object_t *obj, conf_object_t *NOTNULL connector);\n    bool (*check)(conf_object_t *obj, conf_object_t *NOTNULL connector, attr_value_t attr);\n    void (*connect)(conf_object_t *obj, conf_object_t *NOTNULL connector, attr_value_t attr);\n    void (*disconnect)(conf_object_t *obj, conf_object_t *NOTNULL connector);\n};"
   ]
  ],
  "s:component_connector_interface_t:get_check_data;get_connect_data;check;connect;disconnect"
 ],
 "struct component_interface": [
  "model-iface/components.h",
  "model-iface/components.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct component_interface {\n    bool (*pre_instantiate)(conf_object_t *obj);\n    void (*post_instantiate)(conf_object_t *obj);\n    bool (*create_cell)(conf_object_t *obj);\n    attr_value_t (*get_slots)(conf_object_t *obj);\n    attr_value_t (*get_slot_objects)(conf_object_t *obj);\n    attr_value_t (*get_slot_value)(conf_object_t *obj, const char *NOTNULL slot);\n    void (*set_slot_value)(conf_object_t *obj, const char *NOTNULL slot, attr_value_t value);\n    bool (*has_slot)(conf_object_t *obj, const char *NOTNULL slot);\n    bool (*add_slot)(conf_object_t *obj, const char *NOTNULL slot);\n    bool (*del_slot)(conf_object_t *obj, const char *NOTNULL slot);\n};"
   ]
  ],
  "s:component_interface_t:pre_instantiate;post_instantiate;create_cell;get_slots;get_slot_objects;get_slot_value;set_slot_value;has_slot;add_slot;del_slot"
 ],
 "struct con_input_code_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct con_input_code_interface {\n    void (*input)(conf_object_t *NOTNULL obj, sim_key_t code, bool down);\n};"
   ]
  ],
  "s:con_input_code_interface_t:input"
 ],
 "struct con_input_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct con_input_interface {\n    void (*input_str)(conf_object_t *NOTNULL obj, const char *str);\n    void (*input_data)(conf_object_t *NOTNULL obj, bytes_t data);\n};"
   ]
  ],
  "s:con_input_interface_t:input_str;input_data"
 ],
 "struct concurrency_group_interface": [
  "model-iface/concurrency.h",
  "model-iface/concurrency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct concurrency_group_interface {\n    attr_value_t (*serialized_memory_group)(conf_object_t *NOTNULL obj, unsigned group_index);\n    attr_value_t (*execution_group)(conf_object_t *NOTNULL obj, unsigned group_index);\n};"
   ]
  ],
  "s:concurrency_group_interface_t:serialized_memory_group;execution_group"
 ],
 "struct concurrency_mode_interface": [
  "model-iface/concurrency.h",
  "model-iface/concurrency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct concurrency_mode_interface {\n    concurrency_mode_t (*supported_modes)(conf_object_t *NOTNULL obj);\n    concurrency_mode_t (*current_mode)(conf_object_t *NOTNULL obj);\n    void (*switch_mode)(conf_object_t *NOTNULL obj, concurrency_mode_t mode);\n};"
   ]
  ],
  "s:concurrency_mode_interface_t:supported_modes;current_mode;switch_mode"
 ],
 "struct conf_class": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct conf_class;"
   ]
  ],
  "s:conf_class_t"
 ],
 "struct conf_object": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct conf_object;"
   ]
  ],
  "s:conf_object_t"
 ],
 "struct connector_interface": [
  "model-iface/components.h",
  "model-iface/components.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct connector_interface {\n    char *(*type)(conf_object_t *obj);\n    bool (*hotpluggable)(conf_object_t *obj);\n    bool (*required)(conf_object_t *obj);\n    bool (*multi)(conf_object_t *obj);\n    connector_direction_t (*direction)(conf_object_t *obj);\n    bool (*add_destination)(conf_object_t *obj, conf_object_t *connector);\n    bool (*remove_destination)(conf_object_t *obj, conf_object_t *connector);\n    attr_value_t (*destination)(conf_object_t *obj);\n    void (*update)(conf_object_t *obj);\n    bool (*check)(conf_object_t *obj, attr_value_t attr);\n    void (*connect)(conf_object_t *obj, attr_value_t attr);\n    void (*disconnect)(conf_object_t *obj);\n    bool (*deletion_requested)(conf_object_t *obj);\n};"
   ]
  ],
  "s:connector_interface_t:type;hotpluggable;required;multi;direction;add_destination;remove_destination;destination;update;check;connect;disconnect;deletion_requested"
 ],
 "struct context_handler_interface": [
  "simulator-iface/context-tracker.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct context_handler_interface {\n    conf_object_t *(*get_current_context)(conf_object_t *obj);\n    int (*set_current_context)(conf_object_t *obj, conf_object_t *ctx);\n};"
   ]
  ],
  "s:context_handler_interface_t:get_current_context;set_current_context"
 ],
 "struct cpu_address_info": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_address_info;"
   ]
  ],
  "s:address_handle_t"
 ],
 "struct cpu_bytes": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_bytes {\n    size_t size;\n    const uint8 *data;\n};"
   ]
  ],
  "s:cpu_bytes_t:size;data"
 ],
 "struct cpu_cached_instruction_interface": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_cached_instruction_interface {\n    void (*register_instruction_before_cb)(conf_object_t *cpu, cached_instruction_handle_t *ci_handle, cpu_instruction_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_instruction_after_cb)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_instruction_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_read_before_cb)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_memory_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_read_after_cb)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_memory_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_write_before_cb)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_memory_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_write_after_cb)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_memory_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*add_counter)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, uint64 *counter, bool use_atomic_increment);\n};"
   ]
  ],
  "s:cpu_cached_instruction_interface_t:register_instruction_before_cb;register_instruction_after_cb;register_read_before_cb;register_read_after_cb;register_write_before_cb;register_write_after_cb;add_counter"
 ],
 "struct cpu_cached_instruction_once_interface": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_cached_instruction_once_interface {\n    void (*register_instruction_before_once_cb)(conf_object_t *cpu, cached_instruction_handle_t *ci_handle, cpu_instruction_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n    void (*register_instruction_after_once_cb)(conf_object_t *cpu, cached_instruction_handle_t *ci_handle, cpu_instruction_cb_t cb, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n};"
   ]
  ],
  "s:cpu_cached_instruction_once_interface_t:register_instruction_before_once_cb;register_instruction_after_once_cb"
 ],
 "struct cpu_cached_stream_interface": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_cached_stream_interface {\n    void (*add_stream)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, cpu_stream_bits_t bits, cpu_stream_data_t **data, uint64 user_data);\n};"
   ]
  ],
  "s:cpu_cached_stream_interface_t:add_stream"
 ],
 "struct cpu_exception_info": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_exception_info;"
   ]
  ],
  "s:exception_handle_t"
 ],
 "struct cpu_exception_query_interface": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_exception_query_interface {\n    int (*exception_number)(conf_object_t *cpu, exception_handle_t *handle);\n    logical_address_t (*fault_pc)(conf_object_t *cpu, exception_handle_t *handle);\n};"
   ]
  ],
  "s:cpu_exception_query_interface_t:exception_number;fault_pc"
 ],
 "struct cpu_exception_return_info": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_exception_return_info;"
   ]
  ],
  "s:exception_return_handle_t"
 ],
 "struct cpu_group_interface": [
  "model-iface/cpu-group.h",
  "model-iface/cpu-group.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_group_interface {\n    const cpu_list_t *(*get_cpu_list)(conf_object_t *cpu_group);\n};"
   ]
  ],
  "s:cpu_group_interface_t:get_cpu_list"
 ],
 "struct cpu_instruction_decoder_interface": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_instruction_decoder_interface {\n    void (*register_emulation_cb)(conf_object_t *cpu, cpu_emulation_cb_t cb, decoder_handle_t *handle, lang_void *user_data, cpu_callback_free_user_data_cb_t free_cb);\n};"
   ]
  ],
  "s:cpu_instruction_decoder_interface_t:register_emulation_cb"
 ],
 "struct cpu_instruction_query_interface": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_instruction_query_interface {\n    logical_address_t (*logical_address)(conf_object_t *cpu, instruction_handle_t *handle);\n    physical_address_t (*physical_address)(conf_object_t *cpu, instruction_handle_t *handle);\n    cpu_bytes_t (*get_instruction_bytes)(conf_object_t *cpu, instruction_handle_t *handle);\n};"
   ]
  ],
  "s:cpu_instruction_query_interface_t:logical_address;physical_address;get_instruction_bytes"
 ],
 "struct cpu_instrumentation_info": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_instrumentation_info;"
   ]
  ],
  "s:instruction_handle_t"
 ],
 "struct cpu_instrumentation_stream_interface": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_instrumentation_stream_interface {\n    cpu_stream_handle_t *(*add_stream)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_stream_bits_t bits, cpu_stream_data_t **data, cpu_access_scope_t scope);\n    void (*remove_stream)(conf_object_t *cpu, cpu_stream_handle_t *handle);\n};"
   ]
  ],
  "s:cpu_instrumentation_stream_interface_t:add_stream;remove_stream"
 ],
 "struct cpu_instrumentation_subscribe_interface": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_instrumentation_subscribe_interface {\n    void (*remove_callback)(conf_object_t *NOTNULL cpu, cpu_cb_handle_t *handle);\n    void (*enable_callback)(conf_object_t *NOTNULL cpu, cpu_cb_handle_t *handle);\n    void (*disable_callback)(conf_object_t *NOTNULL cpu, cpu_cb_handle_t *handle);\n    void (*remove_connection_callbacks)(conf_object_t *NOTNULL cpu, conf_object_t *NOTNULL connection);\n    void (*enable_connection_callbacks)(conf_object_t *NOTNULL cpu, conf_object_t *NOTNULL connection);\n    void (*disable_connection_callbacks)(conf_object_t *NOTNULL cpu, conf_object_t *NOTNULL connection);\n    cpu_cb_handle_t *(*register_instruction_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_instruction_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_instruction_after_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_instruction_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_read_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_access_scope_t scope, cpu_memory_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_read_after_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_access_scope_t scope, cpu_memory_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_write_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_access_scope_t scope, cpu_memory_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_write_after_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_access_scope_t scope, cpu_memory_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_address_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_address_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_cached_instruction_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_cached_instruction_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_instruction_decoder_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_instruction_decoder_cb_t cb, cpu_instruction_disassemble_cb_t disass_cb, lang_void *data);\n    cpu_cb_handle_t *(*register_exception_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, int exception_number, cpu_exception_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_exception_after_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, int exception_number, cpu_exception_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_exception_return_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_exception_return_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_exception_return_after_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_exception_return_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_mode_change_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_mode_change_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_control_register_read_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, int register_number, cpu_control_register_read_cb_t cb, lang_void *data);\n    cpu_cb_handle_t *(*register_control_register_write_before_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, int register_number, cpu_control_register_write_cb_t cb, lang_void *data);\n};"
   ]
  ],
  "s:cpu_instrumentation_subscribe_interface_t:remove_callback;enable_callback;disable_callback;remove_connection_callbacks;enable_connection_callbacks;disable_connection_callbacks;register_instruction_before_cb;register_instruction_after_cb;register_read_before_cb;register_read_after_cb;register_write_before_cb;register_write_after_cb;register_address_before_cb;register_cached_instruction_cb;register_instruction_decoder_cb;register_exception_before_cb;register_exception_after_cb;register_exception_return_before_cb;register_exception_return_after_cb;register_mode_change_cb;register_control_register_read_before_cb;register_control_register_write_before_cb"
 ],
 "struct cpu_memory_info": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_memory_info;"
   ]
  ],
  "s:memory_handle_t"
 ],
 "struct cpu_memory_query_interface": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_memory_query_interface {\n    logical_address_t (*logical_address)(conf_object_t *cpu, memory_handle_t *handle);\n    physical_address_t (*physical_address)(conf_object_t *cpu, memory_handle_t *handle);\n    void (*set_host_ptr)(conf_object_t *cpu, memory_handle_t *handle, void *p);\n    cpu_bytes_t (*get_bytes)(conf_object_t *cpu, memory_handle_t *handle);\n    void (*set_bytes)(conf_object_t *cpu, memory_handle_t *handle, cpu_bytes_t bytes);\n    bool (*atomic)(conf_object_t *obj, memory_handle_t *handle);\n    ini_type_t (*arch)(conf_object_t *obj, memory_handle_t *handle);\n    page_crossing_info_t (*get_page_crossing_info)(conf_object_t *obj, memory_handle_t *handle);\n    buffer_t (*get_surrounding_bytes)(conf_object_t *cpu, memory_handle_t *handle, unsigned granularity_log2);\n};"
   ]
  ],
  "s:cpu_memory_query_interface_t:logical_address;physical_address;set_host_ptr;get_bytes;set_bytes;atomic;arch;get_page_crossing_info;get_surrounding_bytes"
 ],
 "struct cpu_replace_info": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cpu_replace_info;"
   ]
  ],
  "s:decoder_handle_t"
 ],
 "struct cxl_map_interface": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cxl_map_interface {\n    void (*add_map)(conf_object_t *obj, conf_object_t *map_obj, map_info_t info, cxl_type_t type);\n    void (*del_map)(conf_object_t *obj, conf_object_t *map_obj, physical_address_t base, cxl_type_t type);\n};"
   ]
  ],
  "s:cxl_map_interface_t:add_map;del_map"
 ],
 "struct cxl_mem_downstream_port_managing_interface": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cxl_mem_downstream_port_managing_interface {\n    bool (*register_port_mem_obj)(conf_object_t *obj, uint8 port_number, conf_object_t *port_mem_obj);\n    void (*unregister_port_mem_obj)(conf_object_t *obj, uint8 port_number);\n};"
   ]
  ],
  "s:cxl_mem_downstream_port_managing_interface_t:register_port_mem_obj;unregister_port_mem_obj"
 ],
 "struct cxl_non_device_decoder_handling_interface": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cxl_non_device_decoder_handling_interface {\n    int (*enable_decoder)(conf_object_t *obj, uint8 index, uint8 ig, uint8 iw, uint64 base, uint64 size, uint64 target_list);\n    int (*disable_decoder)(conf_object_t *obj, uint8 decoder_index);\n};"
   ]
  ],
  "s:cxl_non_device_decoder_handling_interface_t:enable_decoder;disable_decoder"
 ],
 "struct cycle_control_interface": [
  "model-iface/cycle-event.h",
  "model-iface/cycle-event.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cycle_control_interface {\n    void (*stop)(conf_object_t *NOTNULL obj);\n    void (*start)(conf_object_t *NOTNULL obj);\n    void (*set_cycle_count)(conf_object_t *NOTNULL obj, cycles_t cycle_count);\n};"
   ]
  ],
  "s:cycle_control_interface_t:stop;start;set_cycle_count"
 ],
 "struct cycle_event_instrumentation_interface": [
  "model-iface/event-instrumentation.h",
  "model-iface/event-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cycle_event_instrumentation_interface {\n    cycle_handle_t *(*register_cycle_event_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cycle_event_cb_t cb, lang_void *data);\n    void (*remove_cycle_event_cb)(conf_object_t *cpu, cycle_handle_t *handle);\n};"
   ]
  ],
  "s:cycle_event_instrumentation_interface_t:register_cycle_event_cb;remove_cycle_event_cb"
 ],
 "struct cycle_event_interface": [
  "model-iface/cycle-event.h",
  "model-iface/cycle-event.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cycle_event_interface {\n    cycles_t (*cycles)(conf_object_t *NOTNULL obj);\n    void (*post)(conf_object_t *NOTNULL obj, const event_class_t *NOTNULL evclass, conf_object_t *NOTNULL ev_obj, cycles_t cycles, lang_void *param);\n    void (*cancel)(conf_object_t *NOTNULL obj, const event_class_t *NOTNULL evclass, conf_object_t *NOTNULL ev_obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    cycles_t (*lookup)(conf_object_t *NOTNULL obj, const event_class_t *NOTNULL evclass, conf_object_t *NOTNULL ev_obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    attr_value_t (*events)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:cycle_event_interface_t:cycles;post;cancel;lookup;events"
 ],
 "struct cycle_interface": [
  "model-iface/cycle.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct cycle_interface {\n    cycles_t (*get_cycle_count)(conf_object_t *queue);\n    double (*get_time)(conf_object_t *queue);\n    cycles_t (*cycles_delta)(conf_object_t *NOTNULL clock, double when);\n    uint64 (*get_frequency)(conf_object_t *queue);\n    void (*post_cycle)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, cycles_t cycles, lang_void *user_data);\n    void (*post_time)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, double seconds, lang_void *user_data);\n    void (*cancel)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    cycles_t (*find_next_cycle)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    double (*find_next_time)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    attr_value_t (*events)(conf_object_t *NOTNULL obj);\n    local_time_t (*get_time_in_ps)(conf_object_t *queue);\n    cycles_t (*cycles_delta_from_ps)(conf_object_t *NOTNULL clock, local_time_t when);\n    void (*post_time_in_ps)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, duration_t picoseconds, lang_void *user_data);\n    duration_t (*find_next_time_in_ps)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n};"
   ]
  ],
  "s:cycle_interface_t:get_cycle_count;get_time;cycles_delta;get_frequency;post_cycle;post_time;cancel;find_next_cycle;find_next_time;events;get_time_in_ps;cycles_delta_from_ps;post_time_in_ps;find_next_time_in_ps"
 ],
 "struct data_profiler_interface": [
  "model-iface/data-profiler.h",
  "model-iface/data-profiler.h",
  [
   [
    [
     "6"
    ],
    "struct data_profiler_interface {\n    uint64 (*accum_in_range)(conf_object_t *profiler, uint64 start, uint64 end);\n    void (*save)(conf_object_t *profiler, const char *NOTNULL file);\n    void (*load)(conf_object_t *profiler, const char *NOTNULL file);\n    void (*clear)(conf_object_t *profiler);\n    void *(*get_prof_data)(conf_object_t *profiler);\n};"
   ],
   [
    [
     "7"
    ],
    "struct data_profiler_interface {\n    uint64 (*_deprecated_accum_in_range)(conf_object_t *profiler, uint64 start, uint64 end);\n    void (*save)(conf_object_t *profiler, const char *NOTNULL file);\n    void (*load)(conf_object_t *profiler, const char *NOTNULL file);\n    void (*clear)(conf_object_t *profiler);\n    void *(*get_prof_data)(conf_object_t *profiler);\n};"
   ]
  ],
  "s:data_profiler_interface_t:_deprecated_accum_in_range;save;load;clear;get_prof_data"
 ],
 "struct datagram_link_interface": [
  "devs/datagram-link.h",
  "devs/datagram-link.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct datagram_link_interface {\n    void (*receive)(conf_object_t *NOTNULL obj, bytes_t msg);\n};"
   ]
  ],
  "s:datagram_link_interface_t:receive"
 ],
 "struct dbuffer": [
  "util/dbuffer.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dbuffer;"
   ]
  ],
  "s:dbuffer_t"
 ],
 "struct debug_notification_interface": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct debug_notification_interface {\n    attr_value_t (*notify_context_creation)(conf_object_t *NOTNULL obj, const char *query, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, bool updated), cbdata_register_t data);\n    attr_value_t (*notify_context_destruction)(conf_object_t *NOTNULL obj, const char *query, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id), cbdata_register_t data);\n    attr_value_t (*notify_location)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL location, unsigned size, access_t access, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, conf_object_t *cpu, uint64 instruction_address, uint64 data_address, unsigned size), cbdata_register_t data);\n    attr_value_t (*notify_address)(conf_object_t *NOTNULL obj, const char *query, uint64 address, unsigned size, access_t access, bool physical, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, conf_object_t *cpu, uint64 instruction_address, uint64 data_address, unsigned size), cbdata_register_t data);\n    attr_value_t (*notify_line)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL file, unsigned line, unsigned column, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, conf_object_t *cpu, uint64 instruction_address, uint64 data_address, unsigned size), cbdata_register_t data);\n    attr_value_t (*notify_activated)(conf_object_t *NOTNULL obj, const char *query, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, conf_object_t *cpu), cbdata_register_t data);\n    attr_value_t (*notify_deactivated)(conf_object_t *NOTNULL obj, const char *query, void (*cb)(cbdata_call_t data, conf_object_t *obj, const char *ctx_id, conf_object_t *cpu), cbdata_register_t data);\n    attr_value_t (*notify_callbacks_done)(conf_object_t *NOTNULL obj, void (*cb)(cbdata_call_t data, conf_object_t *obj), cbdata_register_t data);\n    attr_value_t (*cancel)(conf_object_t *NOTNULL obj, debug_cancel_id_t cid);\n};"
   ]
  ],
  "s:debug_notification_interface_t:notify_context_creation;notify_context_destruction;notify_location;notify_address;notify_line;notify_activated;notify_deactivated;notify_callbacks_done;cancel"
 ],
 "struct debug_query_interface": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct debug_query_interface {\n    attr_value_t (*matching_contexts)(conf_object_t *NOTNULL obj, const char *query);\n    attr_value_t (*get_context_group)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*get_context_parent)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*get_context_children)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*query_for_context_group)(conf_object_t *NOTNULL obj, const char *ctx_id);\n    attr_value_t (*query_for_context_id)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*query_for_context_tree)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*context_name)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*context_id_for_object)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL ctx_obj);\n    attr_value_t (*object_for_context)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*context_has_state)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*get_active_processor)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n};"
   ]
  ],
  "s:debug_query_interface_t:matching_contexts;get_context_group;get_context_parent;get_context_children;query_for_context_group;query_for_context_id;query_for_context_tree;context_name;context_id_for_object;object_for_context;context_has_state;get_active_processor"
 ],
 "struct debug_setup_interface": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct debug_setup_interface {\n    attr_value_t (*add_symbol_file)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL symbol_file, uint64 address, bool absolute_address);\n    attr_value_t (*add_symbol_segment)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL symbol_file, unsigned segment, uint64 address, bool absolute_address);\n    attr_value_t (*add_symbol_section)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL symbol_file, const char *NOTNULL section, uint64 address, bool absolute_address);\n    attr_value_t (*remove_symbol_file)(conf_object_t *NOTNULL obj, debug_setup_id_t id);\n    void (*clear_symbol_files)(conf_object_t *NOTNULL obj);\n    attr_value_t (*symbol_files)(conf_object_t *NOTNULL obj);\n    attr_value_t (*symbol_files_for_ctx)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*list_all_mappings)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*add_path_map_entry)(conf_object_t *NOTNULL obj, const char *query, const char *NOTNULL source, const char *NOTNULL dest);\n    attr_value_t (*remove_path_map_entry)(conf_object_t *NOTNULL obj, debug_setup_id_t id);\n    void (*clear_path_map_entries)(conf_object_t *NOTNULL obj);\n    attr_value_t (*path_map_entries)(conf_object_t *NOTNULL obj);\n    attr_value_t (*path_map_entries_for_ctx)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*apply_path_map)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, const char *NOTNULL filename);\n};"
   ]
  ],
  "s:debug_setup_interface_t:add_symbol_file;add_symbol_segment;add_symbol_section;remove_symbol_file;clear_symbol_files;symbol_files;symbol_files_for_ctx;list_all_mappings;add_path_map_entry;remove_path_map_entry;clear_path_map_entries;path_map_entries;path_map_entries_for_ctx;apply_path_map"
 ],
 "struct debug_step_interface": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct debug_step_interface {\n    attr_value_t (*instruction_into)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*into)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*instruction_over)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*over)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*out)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*reverse_instruction_into)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*reverse_into)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*reverse_instruction_over)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*reverse_over)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*reverse_out)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n};"
   ]
  ],
  "s:debug_step_interface_t:instruction_into;into;instruction_over;over;out;reverse_instruction_into;reverse_into;reverse_instruction_over;reverse_over;reverse_out"
 ],
 "struct debug_symbol_file_interface": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct debug_symbol_file_interface {\n    attr_value_t (*open_symbol_file)(conf_object_t *NOTNULL obj, const char *NOTNULL filename, uint64 address, bool absolute_address);\n    attr_value_t (*close_symbol_file)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*symbol_file_info)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*sections_info)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*segments_info)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*open_symbol_section)(conf_object_t *NOTNULL obj, const char *NOTNULL filename, const char *NOTNULL section, uint64 address, bool absolute_address);\n};"
   ]
  ],
  "s:debug_symbol_file_interface_t:open_symbol_file;close_symbol_file;symbol_file_info;sections_info;segments_info;open_symbol_section"
 ],
 "struct debug_symbol_interface": [
  "simulator-iface/debugger.h",
  "simulator-iface/debugger.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct debug_symbol_interface {\n    attr_value_t (*address_source)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address, uint64 size, void (*cb)(cbdata_call_t data, attr_value_t code_area), cbdata_register_t data);\n    attr_value_t (*source_address)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, const char *NOTNULL filename, uint32 line, uint32 column, void (*cb)(cbdata_call_t data, attr_value_t code_area), cbdata_register_t data);\n    attr_value_t (*address_symbol)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address);\n    attr_value_t (*stack_depth)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*stack_frames)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int min, int max);\n    attr_value_t (*local_variables)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int frame);\n    attr_value_t (*local_arguments)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int frame);\n    attr_value_t (*expression_value)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int32 frame, uint64 address_scope, const char *NOTNULL expr);\n    attr_value_t (*expression_type)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int32 frame, uint64 address_scope, const char *NOTNULL expr);\n    attr_value_t (*type_info)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address_scope, const char *NOTNULL type);\n    attr_value_t (*type_to_string)(conf_object_t *NOTNULL obj, attr_value_t type);\n    attr_value_t (*symbol_address)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int32 frame, const char *NOTNULL symbol);\n    attr_value_t (*address_string)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address, int maxlen);\n    attr_value_t (*lvalue_write)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, int32 frame, const char *NOTNULL symbol, attr_value_t value);\n    attr_value_t (*address_write)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address, attr_value_t value);\n    attr_value_t (*address_read)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address, unsigned size);\n    attr_value_t (*struct_members)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address_scope, const char *NOTNULL struct_name);\n    attr_value_t (*struct_field)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id, uint64 address_scope, const char *NOTNULL struct_name, const char *NOTNULL field);\n    attr_value_t (*list_functions)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*list_global_variables)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n    attr_value_t (*list_source_files)(conf_object_t *NOTNULL obj, const char *NOTNULL ctx_id);\n};"
   ]
  ],
  "s:debug_symbol_interface_t:address_source;source_address;address_symbol;stack_depth;stack_frames;local_variables;local_arguments;expression_value;expression_type;type_info;type_to_string;symbol_address;address_string;lvalue_write;address_write;address_read;struct_members;struct_field;list_functions;list_global_variables;list_source_files"
 ],
 "struct decoder_interface": [
  "model-iface/decoder.h",
  "model-iface/decoder.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct decoder_interface {\n    void (*register_decoder)(conf_object_t *obj, decoder_t *NOTNULL decoder);\n    void (*unregister_decoder)(conf_object_t *obj, decoder_t *NOTNULL decoder);\n};"
   ]
  ],
  "s:decoder_interface_t:register_decoder;unregister_decoder"
 ],
 "struct describe_registers_interface": [
  "model-iface/describe-registers.h",
  "model-iface/describe-registers.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct describe_registers_interface {\n    const description_t *(*first_child)(conf_object_t *NOTNULL obj, const description_t *parent);\n    const description_t *(*next_description)(conf_object_t *NOTNULL obj, const description_t *prev);\n    void (*free_description)(conf_object_t *NOTNULL obj, const description_t *desc);\n    const named_value_t *(*first_named_value)(conf_object_t *NOTNULL obj, const description_t *parent);\n    const named_value_t *(*next_named_value)(conf_object_t *NOTNULL obj, const named_value_t *prev);\n    void (*free_named_value)(conf_object_t *NOTNULL obj, const named_value_t *nv);\n    void (*get)(conf_object_t *NOTNULL obj, int reg_id, buffer_t dest);\n    void (*set)(conf_object_t *NOTNULL obj, int reg_id, bytes_t value);\n};"
   ]
  ],
  "s:describe_registers_interface_t:first_child;next_description;free_description;first_named_value;next_named_value;free_named_value;get;set"
 ],
 "struct device_identification_interface": [
  "model-iface/device-identification.h",
  "model-iface/device-identification.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct device_identification_interface {\n    const char *(*get_id)(conf_object_t *NOTNULL obj, const char *key);\n    const char *(*get_key)(conf_object_t *NOTNULL obj, unsigned int index);\n};"
   ]
  ],
  "s:device_identification_interface_t:get_id;get_key"
 ],
 "struct direct_memory_flush_interface": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct direct_memory_flush_interface {\n    void (*revoke)(conf_object_t *NOTNULL obj, uint64 base, uint64 size, access_t access, access_t perm, access_t inhibit);\n    bool (*set_access_bits)(conf_object_t *NOTNULL obj, conf_object_t *requester, uint64 base, uint64 size, access_t access);\n};"
   ]
  ],
  "s:direct_memory_flush_interface_t:revoke;set_access_bits"
 ],
 "struct direct_memory_interface": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct direct_memory_interface {\n    direct_memory_handle_t (*get_handle)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL requester, uint64 subsystem, uint64 offs, unsigned size);\n    direct_memory_t (*request)(conf_object_t *NOTNULL obj, direct_memory_handle_t handle, access_t permission, access_t inhibit);\n    void (*revoke)(conf_object_t *NOTNULL obj, access_t access, access_t permission, access_t inhibit);\n    void *(*get_user_data)(conf_object_t *NOTNULL obj, direct_memory_handle_t handle);\n    void (*set_user_data)(conf_object_t *NOTNULL obj, direct_memory_handle_t handle, void *user_data);\n    void (*release)(conf_object_t *NOTNULL obj, direct_memory_handle_t handle);\n    void (*ack)(conf_object_t *NOTNULL obj, direct_memory_ack_id_t id);\n};"
   ]
  ],
  "s:direct_memory_interface_t:get_handle;request;revoke;get_user_data;set_user_data;release;ack"
 ],
 "struct direct_memory_lookup_interface": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct direct_memory_lookup_interface {\n    direct_memory_lookup_t (*lookup)(conf_object_t *NOTNULL obj, conf_object_t *requester, physical_address_t addr, unsigned size, access_t access);\n};"
   ]
  ],
  "s:direct_memory_lookup_interface_t:lookup"
 ],
 "struct direct_memory_lookup_v2_interface": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct direct_memory_lookup_v2_interface {\n    direct_memory_lookup_t (*lookup)(conf_object_t *NOTNULL obj, transaction_t *NOTNULL transaction, physical_address_t addr, access_t access);\n};"
   ]
  ],
  "s:direct_memory_lookup_v2_interface_t:lookup"
 ],
 "struct direct_memory_tags_interface": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct direct_memory_tags_interface {\n    direct_memory_tags_t (*get_tags_data)(conf_object_t *NOTNULL obj, direct_memory_handle_t handle);\n};"
   ]
  ],
  "s:direct_memory_tags_interface_t:get_tags_data"
 ],
 "struct direct_memory_update_interface": [
  "model-iface/direct-memory.h",
  "model-iface/direct-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct direct_memory_update_interface {\n    void (*release)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL target, direct_memory_handle_t handle, direct_memory_ack_id_t id);\n    void (*update_permission)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL target, direct_memory_handle_t handle, access_t lost_access, access_t lost_permission, access_t lost_inhibit, direct_memory_ack_id_t id);\n    void (*conflicting_access)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL target, direct_memory_handle_t handle, access_t conflicting_permission, direct_memory_ack_id_t id);\n};"
   ]
  ],
  "s:direct_memory_update_interface_t:release;update_permission;conflicting_access"
 ],
 "struct disassemble_interface": [
  "simulator-iface/disassemble.h",
  "simulator-iface/disassemble.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct disassemble_interface {\n    void (*init)(conf_object_t *obj, uint8 *buff, int buff_len, uint64 address);\n    disasm_instr_t (*next)(conf_object_t *obj);\n};"
   ]
  ],
  "s:disassemble_interface_t:init;next"
 ],
 "struct disk_component_interface": [
  "model-iface/components.h",
  "model-iface/components.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct disk_component_interface {\n    uint64 (*size)(conf_object_t *obj);\n};"
   ]
  ],
  "s:disk_component_interface_t:size"
 ],
 "struct domain_lock": [
  "base/object-locks.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct domain_lock;"
   ]
  ],
  "s:domain_lock_t"
 ],
 "struct dummy_memory_page_interface": [
  "model-iface/memory-page.h",
  "model-iface/memory-page.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_memory_page_interface {\n    void (*dummy)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:dummy_memory_page_interface_t:dummy"
 ],
 "struct dummy_semicolon_eater_arm_device_id": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_arm_device_id {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_arm_memory_attributes": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_arm_memory_attributes {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_arm_nonsecure": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_arm_nonsecure {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_arm_nsaid": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_arm_nsaid {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_arm_privileged": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_arm_privileged {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_arm_smmu_attributes": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_arm_smmu_attributes {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_bytemap": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_bytemap {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_completion": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_completion {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_cxl_type": [
  "devs/cxl.h",
  "devs/cxl.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_cxl_type {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_data": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_data {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_fill_value": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_fill_value {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_flags": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_flags {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_initiator": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_initiator {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_list_end": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_list_end {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_memop": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_memop {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_owner": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_owner {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_at": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_at {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_ats_invalidate_completion_count": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_ats_invalidate_completion_count {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_ats_invalidate_completion_itag_vector": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_ats_invalidate_completion_itag_vector {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_ats_invalidate_request_itag": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_ats_invalidate_request_itag {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_ats_translation_request_cxl_src": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_ats_translation_request_cxl_src {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_ats_translation_request_no_write": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_ats_translation_request_no_write {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_byte_count_ret": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_byte_count_ret {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_destination_segment": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_destination_segment {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_device_id": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_device_id {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_ecs": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_ecs {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_error_ret": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_error_ret {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_ide_secured": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_ide_secured {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_link_negotiation": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_link_negotiation {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_msg_route": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_msg_route {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_msg_type": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_msg_type {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_pasid": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_pasid {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_prs_page_group_response": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_prs_page_group_response {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_prs_page_request": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_prs_page_request {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_prs_stop_marker": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_prs_stop_marker {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_requester_id": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_requester_id {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_requester_segment": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_requester_segment {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_pcie_type": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_pcie_type {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_riscv_device_id": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_riscv_device_id {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_riscv_io_error_ret": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_riscv_io_error_ret {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_riscv_process_id": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_riscv_process_id {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_riscv_wg_wid": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_riscv_wg_wid {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_size": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_size {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_target_type": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_target_type {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_trace_atom_access": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_trace_atom_access {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct dummy_semicolon_eater_user_data": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct dummy_semicolon_eater_user_data {\n    int dummy;\n};"
   ]
  ],
  "s::dummy"
 ],
 "struct ethernet_cable_interface": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ethernet_cable_interface {\n    void (*link_status)(conf_object_t *NOTNULL ep, bool link_up);\n};"
   ]
  ],
  "s:ethernet_cable_interface_t:link_status"
 ],
 "struct ethernet_common_interface": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ethernet_common_interface {\n    void (*frame)(conf_object_t *NOTNULL obj, const frags_t *frame, eth_frame_crc_status_t crc_status);\n};"
   ]
  ],
  "s:ethernet_common_interface_t:frame"
 ],
 "struct ethernet_probe_interface": [
  "devs/eth-probe.h",
  "devs/eth-probe.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ethernet_probe_interface {\n    void (*attach_snooper)(conf_object_t *NOTNULL probe, ethernet_probe_snoop_t snoop_fun, lang_void *user_data);\n    void (*attach_probe)(conf_object_t *NOTNULL probe, ethernet_probe_snoop_t snoop_fun, lang_void *user_data);\n    void (*detach)(conf_object_t *NOTNULL probe);\n    void (*send_frame)(conf_object_t *NOTNULL probe, eth_probe_side_t to_side, const frags_t *frame, eth_frame_crc_status_t crc_status);\n};"
   ]
  ],
  "s:ethernet_probe_interface_t:attach_snooper;attach_probe;detach;send_frame"
 ],
 "struct ethernet_snoop_interface": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ethernet_snoop_interface {\n    conf_object_t *(*attach)(conf_object_t *NOTNULL link, conf_object_t *clock, ethernet_link_snoop_t snoop_fun, lang_void *user_data);\n};"
   ]
  ],
  "s:ethernet_snoop_interface_t:attach"
 ],
 "struct ethernet_vlan_snoop_interface": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ethernet_vlan_snoop_interface {\n    conf_object_t *(*attach)(conf_object_t *NOTNULL link, conf_object_t *clock, ethernet_link_snoop_t snoop_fun, lang_void *user_data, uint16 vlan_id, bool is_vlan_trunk);\n};"
   ]
  ],
  "s:ethernet_vlan_snoop_interface_t:attach"
 ],
 "struct event_class": [
  "base/event.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct event_class {\n    const char *name;\n    conf_class_t *conf_class;\n    event_class_flag_t flags;\n    void (*callback)(conf_object_t *obj, lang_void *data);\n    void (*destroy)(conf_object_t *obj, lang_void *data);\n    attr_value_t (*get_value)(conf_object_t *obj, lang_void *data);\n    lang_void *(*set_value)(conf_object_t *obj, attr_value_t value);\n    char *(*describe)(conf_object_t *obj, lang_void *data);\n    unsigned slot;\n};"
   ]
  ],
  "s:event_class_t:name;conf_class;flags;callback;destroy;get_value;set_value;describe;slot"
 ],
 "struct event_delta_interface": [
  "model-iface/event-delta.h",
  "model-iface/event-delta.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct event_delta_interface {\n    uint64 (*set_delta)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL event_handler_obj, const event_class_t *next_event_ec, uint64 delta);\n    uint64 (*get_delta)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL event_handler_obj);\n};"
   ]
  ],
  "s:event_delta_interface_t:set_delta;get_delta"
 ],
 "struct event_handler_interface": [
  "model-iface/event-delta.h",
  "model-iface/event-delta.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct event_handler_interface {\n    bool (*handle_event)(conf_object_t *NOTNULL obj);\n    void (*stop)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:event_handler_interface_t:handle_event;stop"
 ],
 "struct exception_interface": [
  "model-iface/exception.h",
  "model-iface/exception.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct exception_interface {\n    int (*get_number)(conf_object_t *NOTNULL obj, const char *NOTNULL name);\n    const char *(*get_name)(conf_object_t *NOTNULL obj, int exc);\n    int (*get_source)(conf_object_t *NOTNULL obj, int exc);\n    attr_value_t (*all_exceptions)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:exception_interface_t:get_number;get_name;get_source;all_exceptions"
 ],
 "struct exec_trace_interface": [
  "model-iface/exec-trace.h",
  "model-iface/exec-trace.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct exec_trace_interface {\n    void (*register_tracer)(conf_object_t *NOTNULL cpu_obj, instruction_trace_callback_t tracer, lang_void *tracer_data);\n    void (*unregister_tracer)(conf_object_t *NOTNULL cpu_obj, instruction_trace_callback_t tracer, lang_void *tracer_data);\n};"
   ]
  ],
  "s:exec_trace_interface_t:register_tracer;unregister_tracer"
 ],
 "struct execute_control_interface": [
  "model-iface/execute.h",
  "model-iface/execute.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct execute_control_interface {\n    void (*message_pending)(conf_object_t *obj);\n    void (*yield_request)(conf_object_t *obj);\n};"
   ]
  ],
  "s:execute_control_interface_t:message_pending;yield_request"
 ],
 "struct execute_environ": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct execute_environ;"
   ]
  ],
  "s:execute_environ_t"
 ],
 "struct execute_interface": [
  "model-iface/execute.h",
  "model-iface/execute.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct execute_interface {\n    void (*run)(conf_object_t *obj);\n    void (*stop)(conf_object_t *obj);\n    void (*switch_in)(conf_object_t *obj);\n    void (*switch_out)(conf_object_t *obj);\n};"
   ]
  ],
  "s:execute_interface_t:run;stop;switch_in;switch_out"
 ],
 "struct extended_serial_interface": [
  "devs/serial-device.h",
  "devs/serial-device.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct extended_serial_interface {\n    void (*write_at)(conf_object_t *obj, int value, int x, int y, int fg, int bg);\n    void (*graphics_mode)(conf_object_t *obj, int in_graphics_mode);\n};"
   ]
  ],
  "s:extended_serial_interface_t:write_at;graphics_mode"
 ],
 "struct firewire_bus_interface": [
  "devs/firewire.h",
  "devs/firewire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct firewire_bus_interface {\n    int (*connect_device)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev);\n    int (*disconnect_device)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev);\n    void (*set_device_bus_id)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev, uint16 bus_id);\n    void (*set_id_mask)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev, uint16 id_mask);\n    firewire_ack_code_t (*transfer)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL source, dbuffer_t *packet, int crc_calculated);\n    int (*register_channel)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev, uint32 channel);\n    int (*unregister_channel)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL dev, uint32 channel);\n    void (*reset)(conf_object_t *NOTNULL bus);\n};"
   ]
  ],
  "s:firewire_bus_interface_t:connect_device;disconnect_device;set_device_bus_id;set_id_mask;transfer;register_channel;unregister_channel;reset"
 ],
 "struct firewire_device_interface": [
  "devs/firewire.h",
  "devs/firewire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct firewire_device_interface {\n    firewire_ack_code_t (*transfer)(conf_object_t *NOTNULL dev, dbuffer_t *packet, int crc_calculated);\n    void (*reset)(conf_object_t *NOTNULL dev, uint16 id, uint8 root_id, uint32_array_t self_ids);\n    uint32 (*get_self_id_template)(conf_object_t *NOTNULL dev);\n    int (*get_rhb)(conf_object_t *NOTNULL dev);\n    uint8 (*get_port_count)(conf_object_t *NOTNULL dev);\n    uint16 (*get_port_mask)(conf_object_t *NOTNULL dev);\n};"
   ]
  ],
  "s:firewire_device_interface_t:transfer;reset;get_self_id_template;get_rhb;get_port_count;get_port_mask"
 ],
 "struct fmn_station_control_interface": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct fmn_station_control_interface {\n    uint64 (*send_message)(conf_object_t *NOTNULL obj, uint32 thread_id, uint64 rt_value);\n    void (*load_message)(conf_object_t *NOTNULL obj, uint32 thread_id, uint8 bucket);\n    int (*wait)(conf_object_t *NOTNULL obj, uint32 thread_id, uint8 vector);\n    void (*sync)(conf_object_t *NOTNULL obj, uint32 thread_id);\n};"
   ]
  ],
  "s:fmn_station_control_interface_t:send_message;load_message;wait;sync"
 ],
 "struct fmn_station_control_v2_interface": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct fmn_station_control_v2_interface {\n    uint64 (*send_message)(conf_object_t *NOTNULL obj, uint32 thread_id, uint64 rt_value);\n    uint64 (*load_message)(conf_object_t *NOTNULL obj, uint32 thread_id, uint64 rt_value);\n    int (*wait)(conf_object_t *NOTNULL obj, uint32 thread_id, uint64 rt_value);\n    void (*sync)(conf_object_t *NOTNULL obj, uint32 thread_id);\n};"
   ]
  ],
  "s:fmn_station_control_v2_interface_t:send_message;load_message;wait;sync"
 ],
 "struct frags": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct frags;"
   ]
  ],
  "s:frags_t"
 ],
 "struct frags_it": [
  "util/frags.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct frags_it;"
   ]
  ],
  "s:frags_it_t"
 ],
 "struct freerun_interface": [
  "model-iface/freerun.h",
  "model-iface/freerun.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct freerun_interface {\n    bool (*enabled)(conf_object_t *NOTNULL obj);\n    int64 (*advance_clock)(conf_object_t *NOTNULL obj, int64 ps_limit, int64 steps, bool idle);\n    void (*start_clock)(conf_object_t *NOTNULL obj);\n    void (*stop_clock)(conf_object_t *NOTNULL obj);\n    uint64 (*current_itime)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:freerun_interface_t:enabled;advance_clock;start_clock;stop_clock;current_itime"
 ],
 "struct frequency_interface": [
  "devs/frequency.h",
  "devs/frequency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct frequency_interface {\n    double (*get)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:frequency_interface_t:get"
 ],
 "struct frequency_listener_interface": [
  "devs/frequency.h",
  "devs/frequency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct frequency_listener_interface {\n    void (*set)(conf_object_t *NOTNULL obj, uint64 numerator, uint64 denominator);\n};"
   ]
  ],
  "s:frequency_listener_interface_t:set"
 ],
 "struct gbic_transceiver_interface": [
  "devs/gbic.h",
  "devs/gbic.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct gbic_transceiver_interface {\n    mod_def_t (*read_mod_def)(conf_object_t *obj);\n    void (*write_mod_def)(conf_object_t *obj, mod_def_t mod_def);\n    void (*loopback)(conf_object_t *obj, int loopback);\n};"
   ]
  ],
  "s:gbic_transceiver_interface_t:read_mod_def;write_mod_def;loopback"
 ],
 "struct generic_transaction": [
  "base/memory-transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct generic_transaction {\n    logical_address_t logical_address;\n    physical_address_t physical_address;\n    unsigned int size;\n    mem_op_type_t type;\n    unsigned int atomic : 1;\n    unsigned int inquiry : 1;\n    unsigned int non_coherent : 1;\n    unsigned int _deprecated_ignore : 1;\n    unsigned int may_stall : 1;\n    unsigned int reissue : 1;\n    unsigned int block_STC : 1;\n    unsigned int use_page_cache : 1;\n    unsigned int inverse_endian : 1;\n    unsigned int page_cross : 2;\n    unsigned int mem_hier_on_fetch : 1;\n    unsigned int block_flags;\n    ini_type_t ini_type;\n    conf_object_t *ini_ptr;\n    exception_type_t exception;\n    void *user_ptr;\n    uint8 *real_address;\n    int space_count;\n    struct transaction *transaction;\n    page_t *reserved;\n    unsigned int reserved2;\n};"
   ]
  ],
  "s:generic_transaction_t:logical_address;physical_address;size;type;atomic;inquiry;non_coherent;_deprecated_ignore;may_stall;reissue;block_STC;use_page_cache;inverse_endian;page_cross;mem_hier_on_fetch;block_flags;ini_type;ini_ptr;exception;user_ptr;real_address;space_count;transaction;reserved;reserved2"
 ],
 "struct gfx_break_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct gfx_break_interface {\n    bool (*store)(conf_object_t *NOTNULL obj, const char *file, int minx, int miny, int maxx, int maxy);\n    int64 (*add)(conf_object_t *NOTNULL obj, const char *file, const char *name, bool oneshot, double interval, gfx_break_cb_t cb, lang_void *arg);\n    bool (*remove)(conf_object_t *NOTNULL obj, int64 break_id);\n    int (*match)(conf_object_t *NOTNULL obj, const char *file);\n    gbp_header_t (*info)(conf_object_t *NOTNULL obj, const char *file);\n    bool (*export_png)(conf_object_t *NOTNULL obj, const char *file, const char *png_file);\n    int64 (*add_bytes)(conf_object_t *NOTNULL obj, bytes_t data, const char *name, bool oneshot, double interval, gfx_break_cb_t cb, lang_void *arg);\n};"
   ]
  ],
  "s:gfx_break_interface_t:store;add;remove;match;info;export_png;add_bytes"
 ],
 "struct gfx_con_interface": [
  "model-iface/gfx-console.h",
  "model-iface/gfx-console.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct gfx_con_interface {\n    int (*set_color)(conf_object_t *obj, uint8 index, uint8 r, uint8 g, uint8 b);\n    void (*set_size)(conf_object_t *obj, int width, int height);\n    void (*put_pixel)(conf_object_t *obj, int x, int y, uint8 index);\n    void (*put_pixel_rgb)(conf_object_t *obj, int x, int y, uint32 rgb);\n    void (*put_block_old)(conf_object_t *obj, uint8 *src, int minx, int miny, int maxx, int maxy, int src_fmt, int src_stride, int unused);\n    void (*redraw)(conf_object_t *obj);\n    void (*update_keyboard_leds)(conf_object_t *obj, int led_change);\n    void (*put_pixel_col)(conf_object_t *obj, int x, int y, int r, int g, int b);\n    void (*put_block)(conf_object_t *obj, bytes_t block, int minx, int miny, int maxx, int maxy, gfx_con_pixel_fmt_t src_fmt, int src_stride);\n};"
   ]
  ],
  "s:gfx_con_interface_t:set_color;set_size;put_pixel;put_pixel_rgb;put_block_old;redraw;update_keyboard_leds;put_pixel_col;put_block"
 ],
 "struct gfx_console_backend_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct gfx_console_backend_interface {\n    void (*kbd_event)(conf_object_t *NOTNULL obj, sim_key_t code, bool down);\n    void (*mouse_event)(conf_object_t *NOTNULL obj, int x, int y, int z, gfx_console_mouse_button_t buttons);\n    void (*request_refresh)(conf_object_t *NOTNULL obj);\n    void (*set_visible)(conf_object_t *NOTNULL obj, bool visible);\n    gfx_console_screen_text_t (*text_data)(conf_object_t *NOTNULL obj);\n    void (*got_grab_keys)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:gfx_console_backend_interface_t:kbd_event;mouse_event;request_refresh;set_visible;text_data;got_grab_keys"
 ],
 "struct gfx_console_frontend_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct gfx_console_frontend_interface {\n    int (*start)(conf_object_t *NOTNULL obj, conf_object_t *backend);\n    void (*stop)(conf_object_t *NOTNULL obj, int handle);\n    void (*set_title)(conf_object_t *NOTNULL obj, int handle, const char *short_title, const char *long_title);\n    void (*set_size)(conf_object_t *NOTNULL obj, int handle, int width, int height);\n    void (*set_visible)(conf_object_t *NOTNULL obj, int handle, bool visible);\n    void (*set_contents)(conf_object_t *NOTNULL obj, int handle, int left, int top, int right, int bottom, const uint32 *data);\n    void (*invalidate_contents)(conf_object_t *NOTNULL obj, int handle);\n    void (*set_text_mode)(conf_object_t *NOTNULL obj, int handle, bool text_mode);\n    void (*signal_text_update)(conf_object_t *NOTNULL obj, int handle);\n    void (*set_grab_mode)(conf_object_t *NOTNULL obj, int handle, bool active);\n    void (*set_mouse_pos)(conf_object_t *NOTNULL obj, int handle, int x, int y);\n    void (*set_keyboard_leds)(conf_object_t *NOTNULL obj, int handle, gfx_console_led_t led_state);\n    void (*set_grab_modifier)(conf_object_t *NOTNULL obj, int handle, sim_key_t modifier);\n    void (*set_grab_button)(conf_object_t *NOTNULL obj, int handle, gfx_console_mouse_button_t button);\n};"
   ]
  ],
  "s:gfx_console_frontend_interface_t:start;stop;set_title;set_size;set_visible;set_contents;invalidate_contents;set_text_mode;signal_text_update;set_grab_mode;set_mouse_pos;set_keyboard_leds;set_grab_modifier;set_grab_button"
 ],
 "struct gic_reg_info": [
  "arch/arm.h",
  "arch/arm.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct gic_reg_info {\n    int op1;\n    int crn;\n    int crm;\n    int op2;\n    arm_cpu_state_t cpu_state;\n};"
   ]
  ],
  "s:gic_reg_info_t:op1;crn;crm;op2;cpu_state"
 ],
 "struct global_notifier_callback": [
  "base/global-notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct global_notifier_callback;"
   ]
  ],
  "s:global_notifier_callback_t"
 ],
 "struct granted_mem": [
  "base/direct-memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct granted_mem;"
   ]
  ],
  "s:granted_mem_t"
 ],
 "struct gui_console_backend_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct gui_console_backend_interface {\n    void (*start)(conf_object_t *NOTNULL obj, lang_void *console);\n    void (*stop)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:gui_console_backend_interface_t:start;stop"
 ],
 "struct hap_listen_interface": [
  "model-iface/hap-listen.h",
  "model-iface/hap-listen.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct hap_listen_interface {\n    void (*occurred)(conf_object_t *obj, conf_object_t *origin, hap_type_t hap, int64 value, va_list ap, bool always);\n};"
   ]
  ],
  "s:hap_listen_interface_t:occurred"
 ],
 "struct host_serial_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct host_serial_interface {\n    bool (*setup)(conf_object_t *NOTNULL obj, const char *name);\n    const char *(*name)(conf_object_t *NOTNULL obj);\n    void (*shutdown)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:host_serial_interface_t:setup;name;shutdown"
 ],
 "struct i2c_bridge_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct i2c_bridge_interface {\n    void (*address_added)(conf_object_t *device, uint32 addr, uint32 mask);\n    void (*address_removed)(conf_object_t *device, uint32 addr, uint32 mask);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_bridge_interface_t:address_added;address_removed"
 ],
 "struct i2c_bus_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct i2c_bus_interface {\n    int (*start)(conf_object_t *i2c_bus, uint8 address);\n    int (*stop)(conf_object_t *i2c_bus);\n    uint8 (*read_data)(conf_object_t *i2c_bus);\n    void (*write_data)(conf_object_t *i2c_bus, uint8 value);\n    int (*register_device)(conf_object_t *i2c_bus, conf_object_t *device, uint8 address, uint8 mask, i2c_device_flag_t flags);\n    void (*unregister_device)(conf_object_t *i2c_bus, conf_object_t *device, uint8 address, uint8 mask);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_bus_interface_t:start;stop;read_data;write_data;register_device;unregister_device"
 ],
 "struct i2c_device_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct i2c_device_interface {\n    int (*set_state)(conf_object_t *device, i2c_device_state_t state, uint8 address);\n    uint8 (*read_data)(conf_object_t *device);\n    void (*write_data)(conf_object_t *device, uint8 value);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_device_interface_t:set_state;read_data;write_data"
 ],
 "struct i2c_link_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct i2c_link_interface {\n    void (*register_slave_address)(conf_object_t *i2c_link, conf_object_t *slave, uint32 address, uint32 mask);\n    void (*unregister_slave_address)(conf_object_t *i2c_link, conf_object_t *slave, uint32 address, uint32 mask);\n    void (*register_bridge)(conf_object_t *i2c_link, conf_object_t *bridge);\n    void (*disconnect_device)(conf_object_t *i2c_link, conf_object_t *device);\n    void (*start_request)(conf_object_t *i2c_link, conf_object_t *master, uint32 address);\n    void (*read_request)(conf_object_t *i2c_link, conf_object_t *master);\n    void (*ack_read_request)(conf_object_t *i2c_link, conf_object_t *master, i2c_status_t ack);\n    void (*write_request)(conf_object_t *i2c_link, conf_object_t *master, uint8 value);\n    void (*read_response)(conf_object_t *i2c_link, conf_object_t *slave, uint8 value);\n    void (*ack_read_response)(conf_object_t *i2c_link, conf_object_t *slave);\n    void (*write_response)(conf_object_t *i2c_link, conf_object_t *slave, i2c_status_t status);\n    void (*start_response)(conf_object_t *i2c_link, conf_object_t *slave, i2c_status_t status);\n    void (*stop)(conf_object_t *i2c_link, conf_object_t *master);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_link_interface_t:register_slave_address;unregister_slave_address;register_bridge;disconnect_device;start_request;read_request;ack_read_request;write_request;read_response;ack_read_response;write_response;start_response;stop"
 ],
 "struct i2c_master_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct i2c_master_interface {\n    void (*bus_freed)(conf_object_t *device);\n    void (*read_response)(conf_object_t *device, uint8 value);\n    void (*ack_read_response)(conf_object_t *device);\n    void (*write_response)(conf_object_t *device, i2c_status_t status);\n    void (*start_response)(conf_object_t *device, i2c_status_t status);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_master_interface_t:bus_freed;read_response;ack_read_response;write_response;start_response"
 ],
 "struct i2c_master_v2_interface": [
  "devs/i2c.h",
  "devs/i2c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct i2c_master_v2_interface {\n    void (*acknowledge)(conf_object_t *device, i2c_ack_t ack);\n    void (*read_response)(conf_object_t *device, uint8 value);\n};"
   ]
  ],
  "s:i2c_master_v2_interface_t:acknowledge;read_response"
 ],
 "struct i2c_slave_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct i2c_slave_interface {\n    void (*start_request)(conf_object_t *device, uint32 address);\n    void (*read_request)(conf_object_t *device);\n    void (*ack_read_request)(conf_object_t *device, i2c_status_t ack);\n    void (*write_request)(conf_object_t *device, uint8 value);\n    void (*stop)(conf_object_t *device, uint8 repeated_start);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:i2c_slave_interface_t:start_request;read_request;ack_read_request;write_request;stop"
 ],
 "struct i2c_slave_v2_interface": [
  "devs/i2c.h",
  "devs/i2c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct i2c_slave_v2_interface {\n    void (*start)(conf_object_t *device, uint8 address);\n    void (*read)(conf_object_t *device);\n    void (*write)(conf_object_t *device, uint8 value);\n    void (*stop)(conf_object_t *device);\n    attr_value_t (*addresses)(conf_object_t *device);\n};"
   ]
  ],
  "s:i2c_slave_v2_interface_t:start;read;write;stop;addresses"
 ],
 "struct i3c_daa_snoop_interface": [
  "devs/i3c.h",
  "devs/i3c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct i3c_daa_snoop_interface {\n    void (*assigned_address)(conf_object_t *obj, uint64 id, uint8 bcr, uint8 dcr, uint8 address);\n};"
   ]
  ],
  "s:i3c_daa_snoop_interface_t:assigned_address"
 ],
 "struct i3c_hdr_master_interface": [
  "devs/i3c.h",
  "devs/i3c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct i3c_hdr_master_interface {\n    void (*hdr_read_response)(conf_object_t *obj, bytes_t bytes, bool more);\n    void (*hdr_acknowledge)(conf_object_t *obj, i3c_ack_t ack);\n};"
   ]
  ],
  "s:i3c_hdr_master_interface_t:hdr_read_response;hdr_acknowledge"
 ],
 "struct i3c_hdr_slave_interface": [
  "devs/i3c.h",
  "devs/i3c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct i3c_hdr_slave_interface {\n    void (*hdr_write)(conf_object_t *obj, bytes_t data);\n    void (*hdr_read)(conf_object_t *obj, uint32 max_len);\n    void (*hdr_restart)(conf_object_t *obj);\n    void (*hdr_exit)(conf_object_t *obj);\n};"
   ]
  ],
  "s:i3c_hdr_slave_interface_t:hdr_write;hdr_read;hdr_restart;hdr_exit"
 ],
 "struct i3c_master_interface": [
  "devs/i3c.h",
  "devs/i3c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct i3c_master_interface {\n    void (*acknowledge)(conf_object_t *obj, i3c_ack_t ack);\n    void (*read_response)(conf_object_t *obj, uint8 value, bool more);\n    void (*daa_response)(conf_object_t *obj, uint64 id, uint8 bcr, uint8 dcr);\n    void (*ibi_request)(conf_object_t *obj);\n    void (*ibi_address)(conf_object_t *obj, uint8 address);\n};"
   ]
  ],
  "s:i3c_master_interface_t:acknowledge;read_response;daa_response;ibi_request;ibi_address"
 ],
 "struct i3c_slave_interface": [
  "devs/i3c.h",
  "devs/i3c.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct i3c_slave_interface {\n    void (*start)(conf_object_t *obj, uint8 address);\n    void (*write)(conf_object_t *obj, uint8 value);\n    void (*sdr_write)(conf_object_t *obj, bytes_t data);\n    void (*read)(conf_object_t *obj);\n    void (*daa_read)(conf_object_t *obj);\n    void (*stop)(conf_object_t *obj);\n    void (*ibi_start)(conf_object_t *obj);\n    void (*ibi_acknowledge)(conf_object_t *obj, i3c_ack_t ack);\n};"
   ]
  ],
  "s:i3c_slave_interface_t:start;write;sdr_write;read;daa_read;stop;ibi_start;ibi_acknowledge"
 ],
 "struct i8051_interrupt_interface": [
  "arch/i8051.h",
  "arch/i8051.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct i8051_interrupt_interface {\n    int (*active_interrupt)(conf_object_t *NOTNULL obj);\n    void (*reti)(conf_object_t *NOTNULL obj);\n    bool (*suppress_irq)(conf_object_t *NOTNULL obj, uint32 addr);\n};"
   ]
  ],
  "s:i8051_interrupt_interface_t:active_interrupt;reti;suppress_irq"
 ],
 "struct i8051_timer_interface": [
  "arch/i8051.h",
  "arch/i8051.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct i8051_timer_interface {\n    void (*change_mode)(conf_object_t *NOTNULL obj, uint8 mode);\n    void (*switch_timer)(conf_object_t *obj, uint8 caller, bool onoff);\n};"
   ]
  ],
  "s:i8051_timer_interface_t:change_mode;switch_timer"
 ],
 "struct ieee_802_3_mac_interface": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ieee_802_3_mac_interface {\n    int (*receive_frame)(conf_object_t *obj, int phy, dbuffer_t *buf, int crc_ok);\n    void (*tx_bandwidth_available)(conf_object_t *obj, int phy);\n    void (*link_status_changed)(conf_object_t *obj, int phy, ieee_802_3_link_status_t status);\n};"
   ]
  ],
  "s:ieee_802_3_mac_interface_t:receive_frame;tx_bandwidth_available;link_status_changed"
 ],
 "struct ieee_802_3_mac_v3_interface": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ieee_802_3_mac_v3_interface {\n    void (*receive_frame)(conf_object_t *obj, int phy, const frags_t *frame, int crc_ok);\n    void (*tx_bandwidth_available)(conf_object_t *obj, int phy);\n    void (*link_status_changed)(conf_object_t *obj, int phy, ieee_802_3_link_status_t status);\n};"
   ]
  ],
  "s:ieee_802_3_mac_v3_interface_t:receive_frame;tx_bandwidth_available;link_status_changed"
 ],
 "struct ieee_802_3_phy_interface": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ieee_802_3_phy_interface {\n    int (*send_frame)(conf_object_t *obj, dbuffer_t *buf, int replace_crc);\n    int (*check_tx_bandwidth)(conf_object_t *obj);\n    void (*add_mac)(conf_object_t *obj, const uint8 *mac);\n    void (*del_mac)(conf_object_t *obj, const uint8 *mac);\n    void (*add_mac_mask)(conf_object_t *obj, const uint8 *mac, const uint8 *mask);\n    void (*del_mac_mask)(conf_object_t *obj, const uint8 *mac, const uint8 *mask);\n    void (*set_promiscous_mode)(conf_object_t *obj, int enable);\n};"
   ]
  ],
  "s:ieee_802_3_phy_interface_t:send_frame;check_tx_bandwidth;add_mac;del_mac;add_mac_mask;del_mac_mask;set_promiscous_mode"
 ],
 "struct ieee_802_3_phy_v2_interface": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ieee_802_3_phy_v2_interface {\n    int (*send_frame)(conf_object_t *obj, dbuffer_t *buf, int replace_crc);\n    int (*check_tx_bandwidth)(conf_object_t *obj);\n    void (*add_mac)(conf_object_t *obj, byte_string_t mac);\n    void (*del_mac)(conf_object_t *obj, byte_string_t mac);\n    void (*add_mac_mask)(conf_object_t *obj, byte_string_t mac, byte_string_t mask);\n    void (*del_mac_mask)(conf_object_t *obj, byte_string_t mac, byte_string_t mask);\n    void (*set_promiscous_mode)(conf_object_t *obj, int enable);\n};"
   ]
  ],
  "s:ieee_802_3_phy_v2_interface_t:send_frame;check_tx_bandwidth;add_mac;del_mac;add_mac_mask;del_mac_mask;set_promiscous_mode"
 ],
 "struct ieee_802_3_phy_v3_interface": [
  "devs/ieee_802_3.h",
  "devs/ieee_802_3.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ieee_802_3_phy_v3_interface {\n    int (*send_frame)(conf_object_t *obj, const frags_t *frame, int replace_crc);\n    int (*check_tx_bandwidth)(conf_object_t *obj);\n};"
   ]
  ],
  "s:ieee_802_3_phy_v3_interface_t:send_frame;check_tx_bandwidth"
 ],
 "struct image_interface": [
  "model-iface/image.h",
  "model-iface/image.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct image_interface {\n    void (*read)(conf_object_t *img, void *NOTNULL to_buf, uint64 start, size_t length);\n    void (*write)(conf_object_t *img, const void *NOTNULL from_buf, uint64 start, size_t length);\n    int (*for_all_spages)(conf_object_t *img, int (*NOTNULL f)(image_spage_t *NOTNULL p, uint64 ofs, void *arg), void *arg);\n    void (*set_persistent)(conf_object_t *obj);\n    void (*save_to_file)(conf_object_t *NOTNULL obj, const char *NOTNULL file, uint64 start, uint64 length, save_flags_t flags);\n    void (*save_diff)(conf_object_t *NOTNULL obj, const char *NOTNULL file, save_flags_t flags);\n    void (*clear_range)(conf_object_t *NOTNULL obj, uint64 start, uint64 length);\n    void (*fill)(conf_object_t *NOTNULL obj, uint64 start, uint64 length, uint8 value);\n    uint64 (*size)(conf_object_t *NOTNULL obj);\n    void (*set)(conf_object_t *NOTNULL obj, uint64 ofs, bytes_t b);\n    bytes_t (*get)(conf_object_t *NOTNULL obj, uint64 ofs, size_t size);\n    void (*flush_writable)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:image_interface_t:read;write;for_all_spages;set_persistent;save_to_file;save_diff;clear_range;fill;size;set;get;flush_writable"
 ],
 "struct image_snoop_interface": [
  "model-iface/image.h",
  "model-iface/image.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct image_snoop_interface {\n    void (*page_modified)(conf_object_t *obj, conf_object_t *img, uint64 offset, uint8 *page_data, image_spage_t *spage);\n};"
   ]
  ],
  "s:image_snoop_interface_t:page_modified"
 ],
 "struct image_spage": [
  "model-iface/image.h",
  "model-iface/image.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct image_spage;"
   ]
  ],
  "s:image_spage_t"
 ],
 "struct instruction_fetch_interface": [
  "model-iface/instruction-fetch.h",
  "model-iface/instruction-fetch.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct instruction_fetch_interface {\n    instruction_fetch_mode_t (*get_mode)(conf_object_t *obj);\n    void (*set_mode)(conf_object_t *obj, instruction_fetch_mode_t mode);\n    int (*get_line_size)(conf_object_t *obj);\n    void (*set_line_size)(conf_object_t *obj, int size);\n};"
   ]
  ],
  "s:instruction_fetch_interface_t:get_mode;set_mode;get_line_size;set_line_size"
 ],
 "struct instruction_info": [
  "model-iface/decoder.h",
  "model-iface/decoder.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct instruction_info {\n    service_routine_t ii_ServiceRoutine;\n    uint64 ii_Arg;\n    unsigned int ii_Type;\n    lang_void *ii_UserData;\n    logical_address_t ii_LogicalAddress;\n    physical_address_t ii_PhysicalAddress;\n};"
   ]
  ],
  "s:instruction_info_t:ii_ServiceRoutine;ii_Arg;ii_Type;ii_UserData;ii_LogicalAddress;ii_PhysicalAddress"
 ],
 "struct instrumentation_connection_interface": [
  "simulator-iface/instrumentation-tool.h",
  "simulator-iface/instrumentation-tool.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct instrumentation_connection_interface {\n    void (*enable)(conf_object_t *obj);\n    void (*disable)(conf_object_t *obj);\n};"
   ]
  ],
  "s:instrumentation_connection_interface_t:enable;disable"
 ],
 "struct instrumentation_entry": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct instrumentation_entry;"
   ]
  ],
  "s:_cpu_instrumentation_entry_t"
 ],
 "struct instrumentation_filter_master_interface": [
  "simulator-iface/instrumentation-filter.h",
  "simulator-iface/instrumentation-filter.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct instrumentation_filter_master_interface {\n    void (*set_source_id)(conf_object_t *obj, unsigned source_id);\n    bool (*add_slave)(conf_object_t *obj, conf_object_t *slave, conf_object_t *provider_obj);\n    void (*remove_slave)(conf_object_t *obj, conf_object_t *slave, conf_object_t *provider_obj);\n    char *(*short_filter_config)(conf_object_t *obj);\n};"
   ]
  ],
  "s:instrumentation_filter_master_interface_t:set_source_id;add_slave;remove_slave;short_filter_config"
 ],
 "struct instrumentation_filter_slave_interface": [
  "simulator-iface/instrumentation-filter.h",
  "simulator-iface/instrumentation-filter.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct instrumentation_filter_slave_interface {\n    void (*disable)(conf_object_t *obj, unsigned source_id);\n    void (*enable)(conf_object_t *obj, unsigned source_id);\n};"
   ]
  ],
  "s:instrumentation_filter_slave_interface_t:disable;enable"
 ],
 "struct instrumentation_filter_status_interface": [
  "simulator-iface/instrumentation-filter.h",
  "simulator-iface/instrumentation-filter.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct instrumentation_filter_status_interface {\n    attr_value_t (*get_disabled_sources)(conf_object_t *obj);\n};"
   ]
  ],
  "s:instrumentation_filter_status_interface_t:get_disabled_sources"
 ],
 "struct instrumentation_order_interface": [
  "model-iface/instrumentation-provider.h",
  "model-iface/instrumentation-provider.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct instrumentation_order_interface {\n    attr_value_t (*get_connections)(conf_object_t *obj);\n    bool (*move_before)(conf_object_t *self, conf_object_t *connection, conf_object_t *before);\n};"
   ]
  ],
  "s:instrumentation_order_interface_t:get_connections;move_before"
 ],
 "struct instrumentation_tool_interface": [
  "simulator-iface/instrumentation-tool.h",
  "simulator-iface/instrumentation-tool.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct instrumentation_tool_interface {\n    conf_object_t *(*connect)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL provider, attr_value_t args);\n    void (*disconnect)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL conn_obj);\n};"
   ]
  ],
  "s:instrumentation_tool_interface_t:connect;disconnect"
 ],
 "struct int_register_interface": [
  "model-iface/int-register.h",
  "model-iface/int-register.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct int_register_interface {\n    int (*get_number)(conf_object_t *NOTNULL obj, const char *NOTNULL name);\n    const char *(*get_name)(conf_object_t *NOTNULL obj, int reg);\n    uint64 (*read)(conf_object_t *NOTNULL obj, int reg);\n    void (*write)(conf_object_t *NOTNULL obj, int reg, uint64 val);\n    attr_value_t (*all_registers)(conf_object_t *NOTNULL obj);\n    int (*register_info)(conf_object_t *NOTNULL obj, int reg, ireg_info_t info);\n};"
   ]
  ],
  "s:int_register_interface_t:get_number;get_name;read;write;all_registers;register_info"
 ],
 "struct internal_cached_instruction_interface": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct internal_cached_instruction_interface {\n    void (*add_counters)(conf_object_t *obj, cached_instruction_handle_t *ci_handle, uint64 *i_counter, uint64 *t_counter, bool use_atomic_increment);\n    const char *(*get_service_routine_name)(conf_object_t *obj, instruction_handle_t *iq_handle);\n};"
   ]
  ],
  "s:internal_cached_instruction_interface_t:add_counters;get_service_routine_name"
 ],
 "struct interrupt_ack_interface": [
  "devs/interrupt-ack.h",
  "devs/interrupt-ack.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct interrupt_ack_interface {\n    void (*raise_interrupt)(conf_object_t *NOTNULL obj, interrupt_ack_fn_t cb, conf_object_t *ack_obj);\n    void (*lower_interrupt)(conf_object_t *NOTNULL obj, interrupt_ack_fn_t cb);\n};"
   ]
  ],
  "s:interrupt_ack_interface_t:raise_interrupt;lower_interrupt"
 ],
 "struct interrupt_cpu_interface": [
  "devs/interrupt-ack.h",
  "devs/interrupt-ack.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct interrupt_cpu_interface {\n    interrupt_ack_fn_t ack;\n};"
   ]
  ],
  "s:interrupt_cpu_interface_t:ack"
 ],
 "struct interrupt_query_interface": [
  "devs/interrupt.h",
  "devs/interrupt.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct interrupt_query_interface {\n    int (*is_enabled)(conf_object_t *interrupt_controller, int irq_level);\n    void (*register_callback)(conf_object_t *interrupt_controller, conf_object_t *device, int irq_level, interrupt_changed_state_callback_t cb, void *cb_data);\n};"
   ]
  ],
  "s:interrupt_query_interface_t:is_enabled;register_callback"
 ],
 "struct interrupt_subscriber_interface": [
  "devs/interrupt-subscriber.h",
  "devs/interrupt-subscriber.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct interrupt_subscriber_interface {\n    void (*notify)(conf_object_t *NOTNULL obj, apic_delivery_mode_t delivery_mode, bool level_assert, apic_trigger_mode_t trigger_mode, uint8 vector, interrupt_source_t source);\n    void (*reset)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:interrupt_subscriber_interface_t:notify;reset"
 ],
 "struct io_memory_interface": [
  "devs/io-memory.h",
  "devs/io-memory.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct io_memory_interface {\n    int (*_deprecated_map)(conf_object_t *NOTNULL obj, addr_space_t memory_or_io, map_info_t map_info);\n    exception_type_t (*operation)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mem_op, map_info_t map_info);\n};"
   ]
  ],
  "s:io_memory_interface_t:_deprecated_map;operation"
 ],
 "struct jit_control_interface": [
  "model-iface/jit-control.h",
  "model-iface/jit-control.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct jit_control_interface {\n    void (*set_compile_enable)(conf_object_t *obj, bool enabled);\n};"
   ]
  ],
  "s:jit_control_interface_t:set_compile_enable"
 ],
 "struct kbd_console_interface": [
  "model-iface/kbd-interface.h",
  "model-iface/kbd-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct kbd_console_interface {\n    void (*keyboard_ready)(conf_object_t *obj);\n};"
   ]
  ],
  "s:kbd_console_interface_t:keyboard_ready"
 ],
 "struct keyboard_console_interface": [
  "model-iface/kbd-interface.h",
  "model-iface/kbd-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct keyboard_console_interface {\n    void (*keyboard_ready)(conf_object_t *obj);\n};"
   ]
  ],
  "s:keyboard_console_interface_t:keyboard_ready"
 ],
 "struct keyboard_interface": [
  "model-iface/kbd-interface.h",
  "model-iface/kbd-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct keyboard_interface {\n    int (*keyboard_event)(conf_object_t *obj, int key_up, uint8 key);\n};"
   ]
  ],
  "s:keyboard_interface_t:keyboard_event"
 ],
 "struct linear_image_interface": [
  "model-iface/image.h",
  "model-iface/image.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct linear_image_interface {\n    uint8 *(*get_base)(conf_object_t *obj, size_t *retsize);\n    void (*set_base)(conf_object_t *obj, uint8 *NOTNULL base);\n    void (*prepare_range)(conf_object_t *NOTNULL obj, read_or_write_t type, size_t offs, size_t size);\n};"
   ]
  ],
  "s:linear_image_interface_t:get_base;set_base;prepare_range"
 ],
 "struct link_endpoint_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct link_endpoint_interface {\n    slave_time_t (*delivery_time)(conf_object_t *obj);\n    uint64 (*delivery_skey)(conf_object_t *obj);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:link_endpoint_interface_t:delivery_time;delivery_skey"
 ],
 "struct log_object": [
  "base/log.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct log_object;"
   ]
  ],
  "s:log_object_t"
 ],
 "struct map_demap_interface": [
  "devs/map-demap.h",
  "devs/map-demap.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct map_demap_interface {\n    int (*add_map)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, conf_object_t *target, map_info_t map_info);\n    int (*remove_map)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, int function);\n    int (*add_default)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, conf_object_t *target, map_info_t map_info);\n    void (*remove_default)(conf_object_t *NOTNULL space);\n    int (*map_simple)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, const char *dev_port, map_info_t map_info);\n    int (*map_bridge)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, const char *dev_port, conf_object_t *target, const char *target_port, map_info_t map_info);\n    int (*unmap)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, const char *dev_port);\n    int (*unmap_address)(conf_object_t *NOTNULL space, conf_object_t *NOTNULL dev, physical_address_t base, const char *dev_port);\n};"
   ]
  ],
  "s:map_demap_interface_t:add_map;remove_map;add_default;remove_default;map_simple;map_bridge;unmap;unmap_address"
 ],
 "struct map_info": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct map_info {\n    physical_address_t base;\n    physical_address_t start;\n    physical_address_t length;\n    int function;\n    int16 priority;\n    int align_size;\n    swap_mode_t reverse_endian;\n};"
   ]
  ],
  "s:map_info_t:base;start;length;function;priority;align_size;reverse_endian"
 ],
 "struct map_list": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6"
    ],
    "struct map_list {\n    map_type_t map_type;\n    conf_object_t *object;\n    const char *port;\n    const void *interface_ptr;\n    const void *target_interface;\n    const void *breakpoint_interface;\n    const void *breakpoint_query_interface;\n    const void *bridge_interface;\n    conf_object_t *target_object;\n    const char *target_port;\n    conf_object_t *bridge;\n    map_info_t map_info;\n    physical_address_t map_size;\n    int deleted;\n};"
   ],
   [
    [
     "7"
    ],
    "struct map_list {\n    map_type_t map_type;\n    conf_object_t *object;\n    const char *port;\n    const void *interface_ptr;\n    const void *target_interface;\n    const void *breakpoint_interface;\n    const void *breakpoint_query_v2_interface;\n    const void *bridge_interface;\n    conf_object_t *target_object;\n    const char *target_port;\n    conf_object_t *bridge;\n    map_info_t map_info;\n    physical_address_t map_size;\n    int deleted;\n};"
   ]
  ],
  "s:map_list_t:map_type;object;port;interface_ptr;target_interface;breakpoint_interface;breakpoint_query_v2_interface;bridge_interface;target_object;target_port;bridge;map_info;map_size;deleted"
 ],
 "struct map_target": [
  "base/map-target.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct map_target;"
   ]
  ],
  "s:map_target_t"
 ],
 "struct maybe_node_id": [
  "simulator-iface/osa-types.h",
  "simulator-iface/osa-types.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct maybe_node_id {\n    bool valid;\n    node_id_t id;\n};"
   ]
  ],
  "s:maybe_node_id_t:valid;id"
 ],
 "struct mdio45_bus_interface": [
  "devs/mii.h",
  "devs/mii.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mdio45_bus_interface {\n    uint16 (*read_register)(conf_object_t *obj, int phy, int mmd, int reg);\n    void (*write_register)(conf_object_t *obj, int phy, int mdd, int reg, uint16 value);\n};"
   ]
  ],
  "s:mdio45_bus_interface_t:read_register;write_register"
 ],
 "struct mdio45_phy_interface": [
  "devs/mii.h",
  "devs/mii.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mdio45_phy_interface {\n    uint16 (*read_register)(conf_object_t *obj, int mmd, int reg);\n    void (*write_register)(conf_object_t *obj, int mmd, int reg, uint16 value);\n};"
   ]
  ],
  "s:mdio45_phy_interface_t:read_register;write_register"
 ],
 "struct memory_profiler_interface": [
  "model-iface/memory-profiler.h",
  "model-iface/memory-profiler.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct memory_profiler_interface {\n    conf_object_t *(*get)(conf_object_t *obj, read_or_write_t access);\n    bool (*set)(conf_object_t *obj, read_or_write_t access, conf_object_t *prof);\n    int (*get_granularity_log2)(conf_object_t *obj);\n};"
   ]
  ],
  "s:memory_profiler_interface_t:get;set;get_granularity_log2"
 ],
 "struct memory_space_interface": [
  "devs/memory-space.h",
  "devs/memory-space.h",
  [
   [
    [
     "6"
    ],
    "struct memory_space_interface {\n    map_list_t *(*space_lookup)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mop, map_info_t mapinfo);\n    exception_type_t (*access)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mop);\n    exception_type_t (*access_simple)(conf_object_t *obj, conf_object_t *initiator, physical_address_t addr, uint8 *buf, physical_address_t len, read_or_write_t type, endianness_t endian);\n    exception_type_t (*access_simple_inq)(conf_object_t *obj, conf_object_t *initiator, physical_address_t addr, uint8 *buf, physical_address_t len, read_or_write_t type, endianness_t endian);\n    attr_value_t (*read)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, int length, int inquiry);\n    exception_type_t (*write)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, attr_value_t data, int inquiry);\n    cycles_t (*timing_model_operate)(conf_object_t *NOTNULL space, generic_transaction_t *NOTNULL mop);\n    uint64 (*fill)(conf_object_t *NOTNULL obj, physical_address_t start, uint64 size, uint8 value, bool inquiry);\n};"
   ],
   [
    [
     "7"
    ],
    "struct memory_space_interface {\n    map_list_t *(*space_lookup)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mop, map_info_t mapinfo);\n    exception_type_t (*access)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mop);\n    exception_type_t (*access_simple)(conf_object_t *obj, conf_object_t *initiator, physical_address_t addr, uint8 *buf, physical_address_t len, read_or_write_t type, endianness_t endian);\n    exception_type_t (*access_simple_inq)(conf_object_t *obj, conf_object_t *initiator, physical_address_t addr, uint8 *buf, physical_address_t len, read_or_write_t type, endianness_t endian);\n    attr_value_t (*read)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, int length, int inquiry);\n    exception_type_t (*write)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, attr_value_t data, int inquiry);\n    cycles_t (*_deprecated_timing_model_operate)(conf_object_t *NOTNULL space, generic_transaction_t *NOTNULL mop);\n    uint64 (*fill)(conf_object_t *NOTNULL obj, physical_address_t start, uint64 size, uint8 value, bool inquiry);\n};"
   ]
  ],
  "s:memory_space_interface_t:space_lookup;access;access_simple;access_simple_inq;read;write;_deprecated_timing_model_operate;fill"
 ],
 "struct microwire_interface": [
  "devs/microwire.h",
  "devs/microwire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct microwire_interface {\n    void (*set_cs)(conf_object_t *obj, int cs);\n    void (*set_sk)(conf_object_t *obj, int sk);\n    void (*set_di)(conf_object_t *obj, int di);\n    int (*get_do)(conf_object_t *obj);\n    uint16 (*read_word)(conf_object_t *obj, int offset);\n    void (*write_word)(conf_object_t *obj, int offset, uint16 value);\n};"
   ]
  ],
  "s:microwire_interface_t:set_cs;set_sk;set_di;get_do;read_word;write_word"
 ],
 "struct mii_interface": [
  "devs/mii.h",
  "devs/mii.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mii_interface {\n    int (*serial_access)(conf_object_t *obj, int data_in, int clock);\n    uint16 (*read_register)(conf_object_t *obj, int index);\n    void (*write_register)(conf_object_t *obj, int index, uint16 value);\n};"
   ]
  ],
  "s:mii_interface_t:serial_access;read_register;write_register"
 ],
 "struct mii_management_interface": [
  "devs/mii.h",
  "devs/mii.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mii_management_interface {\n    int (*serial_access)(conf_object_t *obj, int data_in, int clock);\n    uint16 (*read_register)(conf_object_t *obj, int phy, int reg);\n    void (*write_register)(conf_object_t *obj, int phy, int reg, uint16 value);\n};"
   ]
  ],
  "s:mii_management_interface_t:serial_access;read_register;write_register"
 ],
 "struct mips_cache_instruction_interface": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mips_cache_instruction_interface {\n    int (*cache_instruction)(conf_object_t *NOTNULL self, conf_object_t *NOTNULL cpu, uint32 op, logical_address_t vaddr);\n};"
   ]
  ],
  "s:mips_cache_instruction_interface_t:cache_instruction"
 ],
 "struct mips_coprocessor_interface": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mips_coprocessor_interface {\n    uint64 (*read_register)(conf_object_t *NOTNULL obj, uint32 thread_id, uint32 reg, uint32 sel);\n    void (*write_register)(conf_object_t *NOTNULL obj, uint32 thread_id, uint64 value, uint32 reg, uint32 sel);\n};"
   ]
  ],
  "s:mips_coprocessor_interface_t:read_register;write_register"
 ],
 "struct mips_eic_interface": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mips_eic_interface {\n    void (*cpu_pending_irqs)(conf_object_t *NOTNULL obj, uint32 cause);\n    uint32 (*requested_ipl)(conf_object_t *NOTNULL obj);\n    uint32 (*requested_offset)(conf_object_t *NOTNULL obj);\n    uint32 (*requested_vect_num)(conf_object_t *NOTNULL obj);\n    uint32 (*reg_set)(conf_object_t *NOTNULL obj);\n    void (*handled)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:mips_eic_interface_t:cpu_pending_irqs;requested_ipl;requested_offset;requested_vect_num;reg_set;handled"
 ],
 "struct mips_exception_query_interface": [
  "arch/mips-instrumentation.h",
  "arch/mips-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mips_exception_query_interface {\n    logical_address_t (*return_pc)(conf_object_t *cpu, exception_handle_t *handle);\n};"
   ]
  ],
  "s:mips_exception_query_interface_t:return_pc"
 ],
 "struct mips_interface": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mips_interface {\n    int dummy;\n};"
   ]
  ],
  "s:mips_interface_t:dummy"
 ],
 "struct mips_ite_interface": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mips_ite_interface {\n    void (*set_dtag_lo)(conf_object_t *NOTNULL obj, uint32 value);\n    uint32 (*get_dtag_lo)(conf_object_t *NOTNULL obj);\n    uint32 (*get_errctl)(conf_object_t *NOTNULL obj);\n    void (*block_tc)(conf_object_t *NOTNULL obj);\n    void (*gated_exception)(conf_object_t *NOTNULL obj);\n    int (*current_tc_num)(conf_object_t *NOTNULL obj);\n    void (*unblock_tc)(conf_object_t *NOTNULL obj, int tc_num);\n    bool (*is_big_endian)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:mips_ite_interface_t:set_dtag_lo;get_dtag_lo;get_errctl;block_tc;gated_exception;current_tc_num;unblock_tc;is_big_endian"
 ],
 "struct mips_memory_transaction": [
  "arch/mips.h",
  "arch/mips.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mips_memory_transaction {\n    generic_transaction_t s;\n    unsigned int cache_coherency : 3;\n};"
   ]
  ],
  "s:mips_memory_transaction_t:s;cache_coherency"
 ],
 "struct mmc_interface": [
  "model-iface/mmc.h",
  "model-iface/mmc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mmc_interface {\n    int (*send_command)(conf_object_t *obj, uint8 cmd, uint32 args, buffer_t response);\n    int (*read_data)(conf_object_t *obj, buffer_t data);\n    int (*write_data)(conf_object_t *obj, bytes_t data);\n};"
   ]
  ],
  "s:mmc_interface_t:send_command;read_data;write_data"
 ],
 "struct mouse_interface": [
  "model-iface/kbd-interface.h",
  "model-iface/kbd-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct mouse_interface {\n    void (*mouse_event)(conf_object_t *obj, int xmicro, int ymicro, int z, int buttons);\n};"
   ]
  ],
  "s:mouse_interface_t:mouse_event"
 ],
 "struct multi_level_signal_interface": [
  "devs/signal.h",
  "devs/signal.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct multi_level_signal_interface {\n    void (*signal_level_change)(conf_object_t *NOTNULL obj, uint64 level);\n    void (*signal_current_level)(conf_object_t *NOTNULL obj, uint64 level);\n};"
   ]
  ],
  "s:multi_level_signal_interface_t:signal_level_change;signal_current_level"
 ],
 "struct nand_flash_interface": [
  "devs/nand-flash.h",
  "devs/nand-flash.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct nand_flash_interface {\n    uint16 (*read_access)(conf_object_t *obj);\n    void (*write_access)(conf_object_t *obj, uint16 value);\n    void (*set_command_latch_enable)(conf_object_t *obj, int value);\n    void (*set_address_latch_enable)(conf_object_t *obj, int value);\n    void (*set_write_protect)(conf_object_t *obj, int value);\n    void (*set_spare_area_enable)(conf_object_t *obj, int value);\n};"
   ]
  ],
  "s:nand_flash_interface_t:read_access;write_access;set_command_latch_enable;set_address_latch_enable;set_write_protect;set_spare_area_enable"
 ],
 "struct network_breakpoint_interface": [
  "devs/ethernet.h",
  "devs/ethernet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct network_breakpoint_interface {\n    int64 (*add)(conf_object_t *NOTNULL obj, bytes_t src_mac_addr, bytes_t dst_mac_addr, int ether_type, break_net_cb_t cb, bool once, int64 bp_id);\n    void (*remove)(conf_object_t *NOTNULL obj, int64 bp_id);\n};"
   ]
  ],
  "s:network_breakpoint_interface_t:add;remove"
 ],
 "struct nios_cache_interface": [
  "arch/nios.h",
  "arch/nios.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct nios_cache_interface {\n    void (*flushd)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*flushda)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*flushi)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*flushp)(conf_object_t *NOTNULL self);\n    void (*initd)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*initda)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*initi)(conf_object_t *NOTNULL self, logical_address_t addr);\n    void (*sync)(conf_object_t *NOTNULL self);\n};"
   ]
  ],
  "s:nios_cache_interface_t:flushd;flushda;flushi;flushp;initd;initda;initi;sync"
 ],
 "struct nios_custom_interface": [
  "arch/nios.h",
  "arch/nios.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct nios_custom_interface {\n    uint32 (*custom)(conf_object_t *NOTNULL self, uint32 n, uint32 a, uint32 b, uint32 c, uint32 rA, uint32 rB, bool readra, bool readrb, bool writerc);\n};"
   ]
  ],
  "s:nios_custom_interface_t:custom"
 ],
 "struct nios_eic_interface": [
  "arch/nios.h",
  "arch/nios.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct nios_eic_interface {\n    logical_address_t (*handler)(conf_object_t *NOTNULL obj);\n    uint32 (*level)(conf_object_t *NOTNULL obj);\n    uint32 (*reg_set)(conf_object_t *NOTNULL obj);\n    bool (*nmi)(conf_object_t *NOTNULL obj);\n    void (*handled)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:nios_eic_interface_t:handler;level;reg_set;nmi;handled"
 ],
 "struct nios_interface": [
  "arch/nios.h",
  "arch/nios.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct nios_interface {\n    int dummy;\n};"
   ]
  ],
  "s:nios_interface_t:dummy"
 ],
 "struct nios_memory_transaction": [
  "arch/nios.h",
  "arch/nios.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct nios_memory_transaction {\n    generic_transaction_t s;\n};"
   ]
  ],
  "s:nios_memory_transaction_t:s"
 ],
 "struct notifier_handle": [
  "base/notifier.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct notifier_handle;"
   ]
  ],
  "s:notifier_handle_t"
 ],
 "struct opcode_info_interface": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct opcode_info_interface {\n    opcode_length_info_t (*get_opcode_length_info)(conf_object_t *obj);\n};"
   ]
  ],
  "s:opcode_info_interface_t:get_opcode_length_info"
 ],
 "struct osa_component_interface": [
  "simulator-iface/osa-component-interface.h",
  "simulator-iface/osa-component-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_component_interface {\n    conf_object_t *(*get_admin)(conf_object_t *NOTNULL obj);\n    maybe_node_id_t (*get_root_node)(conf_object_t *NOTNULL obj);\n    cancel_id_t (*notify_tracker)(conf_object_t *NOTNULL obj, void (*cb)(cbdata_call_t data), cbdata_register_t data);\n    void (*cancel_notify)(conf_object_t *NOTNULL obj, cancel_id_t cancel_id);\n    bool (*has_tracker)(conf_object_t *NOTNULL obj);\n    attr_value_t (*get_processors)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:osa_component_interface_t:get_admin;get_root_node;notify_tracker;cancel_notify;has_tracker;get_processors"
 ],
 "struct osa_control_interface": [
  "simulator-iface/osa-control-interface.h",
  "simulator-iface/osa-control-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_control_interface {\n    request_id_t (*request)(conf_object_t *NOTNULL obj, const char *initiator);\n    void (*release)(conf_object_t *NOTNULL obj, request_id_t id);\n};"
   ]
  ],
  "s:osa_control_interface_t:request;release"
 ],
 "struct osa_control_v2_interface": [
  "simulator-iface/osa-control-v2-interface.h",
  "simulator-iface/osa-control-v2-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_control_v2_interface {\n    attr_value_t (*request)(conf_object_t *NOTNULL obj, const char *initiator);\n    void (*release)(conf_object_t *NOTNULL obj, request_id_t id);\n    attr_value_t (*clear_state)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:osa_control_v2_interface_t:request;release;clear_state"
 ],
 "struct osa_machine_notification_interface": [
  "simulator-iface/osa-machine-interfaces.h",
  "simulator-iface/osa-machine-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_machine_notification_interface {\n    cancel_id_t (*notify_mode_change)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, void (*cb)(cbdata_call_t data, conf_object_t *cpu, processor_mode_t old_mode, processor_mode_t new_mode), cbdata_register_t data);\n    cancel_id_t (*notify_exception)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, int exc_num, void (*cb)(cbdata_call_t data, conf_object_t *cpu, int exc_num), cbdata_register_t data);\n    cancel_id_t (*notify_control_reg)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, int reg_num, void (*cb)(cbdata_call_t data, conf_object_t *cpu, int reg_num, uint64 value), cbdata_register_t data);\n    cancel_id_t (*notify_exec_breakpoint)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, uint64 address, uint64 len, bool virt, void (*cb)(cbdata_call_t data, conf_object_t *cpu, uint64 address), cbdata_register_t data);\n    cancel_id_t (*notify_read_breakpoint)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, uint64 address, unsigned len, bool virt, void (*cb)(cbdata_call_t data, conf_object_t *NOTNULL cpu, uint64 address, unsigned len), cbdata_register_t data);\n    cancel_id_t (*notify_write_breakpoint)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, uint64 address, unsigned len, bool virt, void (*cb)(cbdata_call_t data, conf_object_t *NOTNULL cpu, uint64 address, unsigned len, uint64 old_val, uint64 new_val), cbdata_register_t data);\n    void (*cancel)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, cancel_id_t cancel_id);\n    cancel_id_t (*notify_control_reg_read)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, int reg_num, void (*cb)(cbdata_call_t data, conf_object_t *cpu, int reg_num), cbdata_register_t data);\n};"
   ]
  ],
  "s:osa_machine_notification_interface_t:notify_mode_change;notify_exception;notify_control_reg;notify_exec_breakpoint;notify_read_breakpoint;notify_write_breakpoint;cancel;notify_control_reg_read"
 ],
 "struct osa_machine_query_interface": [
  "simulator-iface/osa-machine-interfaces.h",
  "simulator-iface/osa-machine-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_machine_query_interface {\n    uint64 (*read_register)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, int reg);\n    int (*get_register_number)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, const char *reg);\n    attr_value_t (*read_phys_memory)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, physical_address_t addr, osa_read_len_t len);\n    attr_value_t (*read_phys_bytes)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, physical_address_t paddr, unsigned len);\n    attr_value_t (*virtual_to_physical)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, uint64 vaddr);\n    processor_mode_t (*cpu_mode)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu);\n    attr_value_t (*get_all_processors)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker);\n    int (*get_exception_number)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *NOTNULL cpu, const char *name);\n};"
   ]
  ],
  "s:osa_machine_query_interface_t:read_register;get_register_number;read_phys_memory;read_phys_bytes;virtual_to_physical;cpu_mode;get_all_processors;get_exception_number"
 ],
 "struct osa_mapper_admin_interface": [
  "simulator-iface/osa-mapper-interfaces.h",
  "simulator-iface/osa-mapper-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_mapper_admin_interface {\n    void (*tracker_updated)(conf_object_t *NOTNULL obj, conf_object_t *initiator, attr_value_t changeset);\n};"
   ]
  ],
  "s:osa_mapper_admin_interface_t:tracker_updated"
 ],
 "struct osa_mapper_control_interface": [
  "simulator-iface/osa-mapper-interfaces.h",
  "simulator-iface/osa-mapper-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_mapper_control_interface {\n    void (*disable)(conf_object_t *NOTNULL obj);\n    bool (*enable)(conf_object_t *NOTNULL obj);\n    void (*clear_state)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:osa_mapper_control_interface_t:disable;enable;clear_state"
 ],
 "struct osa_mapper_query_interface": [
  "simulator-iface/osa-mapper-interfaces.h",
  "simulator-iface/osa-mapper-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_mapper_query_interface {\n    attr_value_t (*get_process_list)(conf_object_t *NOTNULL obj);\n    conf_object_t *(*get_mapper)(conf_object_t *NOTNULL obj, node_id_t node_id);\n};"
   ]
  ],
  "s:osa_mapper_query_interface_t:get_process_list;get_mapper"
 ],
 "struct osa_micro_checkpoint_interface": [
  "simulator-iface/osa-micro-checkpoint-interface.h",
  "simulator-iface/osa-micro-checkpoint-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_micro_checkpoint_interface {\n    void (*started)(conf_object_t *NOTNULL obj);\n    void (*finished)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:osa_micro_checkpoint_interface_t:started;finished"
 ],
 "struct osa_node_path_interface": [
  "simulator-iface/osa-node-path-interface.h",
  "simulator-iface/osa-node-path-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_node_path_interface {\n    attr_value_t (*matching_nodes)(conf_object_t *NOTNULL obj, node_id_t root_id, attr_value_t node_path_pattern);\n    attr_value_t (*node_path)(conf_object_t *NOTNULL obj, node_id_t node_id);\n};"
   ]
  ],
  "s:osa_node_path_interface_t:matching_nodes;node_path"
 ],
 "struct osa_node_tree_admin_interface": [
  "simulator-iface/osa-node-tree-admin-interface.h",
  "simulator-iface/osa-node-tree-admin-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_node_tree_admin_interface {\n    transaction_id_t (*begin)(conf_object_t *NOTNULL obj, conf_object_t *initiator);\n    void (*end)(conf_object_t *NOTNULL obj, transaction_id_t transaction_id);\n    node_id_t (*create)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL mapper, attr_value_t props);\n    node_id_t (*add)(conf_object_t *NOTNULL obj, node_id_t parent_id, attr_value_t props);\n    void (*update)(conf_object_t *NOTNULL obj, node_id_t node_id, attr_value_t props);\n    void (*remove)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    void (*event)(conf_object_t *NOTNULL obj, node_id_t node_id, const char *event_name, attr_value_t event_data);\n    void (*activate)(conf_object_t *NOTNULL obj, node_id_t node_id, conf_object_t *NOTNULL cpu);\n    void (*deactivate)(conf_object_t *NOTNULL obj, node_id_t node_id, conf_object_t *NOTNULL cpu);\n    cancel_id_t (*register_formatter)(conf_object_t *NOTNULL obj, node_id_t node_id, const char *NOTNULL key, bool recursive, attr_value_t (*formatter)(attr_value_t val));\n    void (*unregister_formatter)(conf_object_t *NOTNULL obj, cancel_id_t node_id);\n    void (*reset)(conf_object_t *NOTNULL obj, node_id_t node_id, attr_value_t props);\n    void (*set_property)(conf_object_t *NOTNULL obj, node_id_t node_id, const char *key, attr_value_t value);\n};"
   ]
  ],
  "s:osa_node_tree_admin_interface_t:begin;end;create;add;update;remove;event;activate;deactivate;register_formatter;unregister_formatter;reset;set_property"
 ],
 "struct osa_node_tree_notification_interface": [
  "simulator-iface/osa-node-tree-interfaces.h",
  "simulator-iface/osa-node-tree-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_node_tree_notification_interface {\n    cancel_id_t (*notify_create)(conf_object_t *NOTNULL obj, node_id_t node_id, bool recursive, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, node_id_t node_id), cbdata_register_t data);\n    cancel_id_t (*notify_destroy)(conf_object_t *NOTNULL obj, node_id_t node_id, bool recursive, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, node_id_t node_id), cbdata_register_t data);\n    cancel_id_t (*notify_property_change)(conf_object_t *NOTNULL obj, node_id_t node_id, const char *key, bool recursive, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, node_id_t node_id, const char *key, attr_value_t old_val, attr_value_t new_val), cbdata_register_t data);\n    cancel_id_t (*notify_cpu_move_from)(conf_object_t *NOTNULL obj, node_id_t node_id, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, attr_value_t node_path), cbdata_register_t data);\n    cancel_id_t (*notify_cpu_move_to)(conf_object_t *NOTNULL obj, node_id_t node_id, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, attr_value_t node_path), cbdata_register_t data);\n    cancel_id_t (*notify_event)(conf_object_t *NOTNULL obj, node_id_t node_id, const char *event_name, bool recursive, void (*cb)(cbdata_call_t data, conf_object_t *obj, conf_object_t *cpu, node_id_t node_id, const char *event_name, attr_value_t event_data), cbdata_register_t data);\n    cancel_id_t (*notify_enable)(conf_object_t *NOTNULL obj, void (*cb)(cbdata_call_t data, conf_object_t *obj), cbdata_register_t data);\n    cancel_id_t (*notify_disable)(conf_object_t *NOTNULL obj, void (*cb)(cbdata_call_t data, conf_object_t *obj), cbdata_register_t data);\n    void (*cancel_notify)(conf_object_t *NOTNULL obj, cancel_id_t cancel_id);\n    cancel_id_t (*notify_callbacks_done)(conf_object_t *NOTNULL obj, uint64 node_id, void (*cb)(cbdata_call_t data, conf_object_t *obj), cbdata_register_t data);\n};"
   ]
  ],
  "s:osa_node_tree_notification_interface_t:notify_create;notify_destroy;notify_property_change;notify_cpu_move_from;notify_cpu_move_to;notify_event;notify_enable;notify_disable;cancel_notify;notify_callbacks_done"
 ],
 "struct osa_node_tree_query_interface": [
  "simulator-iface/osa-node-tree-interfaces.h",
  "simulator-iface/osa-node-tree-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_node_tree_query_interface {\n    attr_value_t (*get_root_nodes)(conf_object_t *NOTNULL obj);\n    attr_value_t (*get_node)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    attr_value_t (*get_current_nodes)(conf_object_t *NOTNULL obj, node_id_t base_id, conf_object_t *cpu);\n    attr_value_t (*get_current_processors)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    attr_value_t (*get_all_processors)(conf_object_t *NOTNULL obj);\n    conf_object_t *(*get_mapper)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    attr_value_t (*get_parent)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    attr_value_t (*get_children)(conf_object_t *NOTNULL obj, node_id_t node_id);\n    attr_value_t (*get_formatted_properties)(conf_object_t *NOTNULL obj, uint64 node_id);\n};"
   ]
  ],
  "s:osa_node_tree_query_interface_t:get_root_nodes;get_node;get_current_nodes;get_current_processors;get_all_processors;get_mapper;get_parent;get_children;get_formatted_properties"
 ],
 "struct osa_parameters_interface": [
  "simulator-iface/osa-parameters-interface.h",
  "simulator-iface/osa-parameters-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_parameters_interface {\n    attr_value_t (*get_parameters)(conf_object_t *NOTNULL obj, bool include_children);\n    attr_value_t (*set_parameters)(conf_object_t *NOTNULL obj, attr_value_t parameters);\n    bool (*is_kind_supported)(conf_object_t *NOTNULL obj, const char *kind);\n};"
   ]
  ],
  "s:osa_parameters_interface_t:get_parameters;set_parameters;is_kind_supported"
 ],
 "struct osa_tracker_component_interface": [
  "simulator-iface/osa-tracker-component-interface.h",
  "simulator-iface/osa-tracker-component-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_tracker_component_interface {\n    conf_object_t *(*get_tracker)(conf_object_t *NOTNULL obj);\n    conf_object_t *(*get_mapper)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:osa_tracker_component_interface_t:get_tracker;get_mapper"
 ],
 "struct osa_tracker_control_interface": [
  "simulator-iface/osa-tracker-control-interface.h",
  "simulator-iface/osa-tracker-control-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_tracker_control_interface {\n    void (*disable)(conf_object_t *NOTNULL obj);\n    bool (*enable)(conf_object_t *NOTNULL obj);\n    void (*clear_state)(conf_object_t *NOTNULL obj);\n    bool (*add_processor)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL cpu);\n    bool (*remove_processor)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL cpu);\n};"
   ]
  ],
  "s:osa_tracker_control_interface_t:disable;enable;clear_state;add_processor;remove_processor"
 ],
 "struct osa_tracker_state_admin_interface": [
  "simulator-iface/osa-tracker-state-interfaces.h",
  "simulator-iface/osa-tracker-state-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_tracker_state_admin_interface {\n    transaction_id_t (*begin)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, conf_object_t *initiator);\n    void (*end)(conf_object_t *NOTNULL obj, transaction_id_t txid);\n    void (*add)(conf_object_t *NOTNULL obj, entity_id_t entity_id, attr_value_t attributes);\n    void (*remove)(conf_object_t *NOTNULL obj, entity_id_t entity_id);\n    void (*remove_all)(conf_object_t *NOTNULL obj);\n    void (*set_attribute)(conf_object_t *NOTNULL obj, entity_id_t entity_id, const char *key, attr_value_t val);\n    void (*update)(conf_object_t *NOTNULL obj, entity_id_t entity_id, attr_value_t attributes);\n    void (*event)(conf_object_t *NOTNULL obj, entity_id_t entity_id, const char *event_name, attr_value_t event_data);\n};"
   ]
  ],
  "s:osa_tracker_state_admin_interface_t:begin;end;add;remove;remove_all;set_attribute;update;event"
 ],
 "struct osa_tracker_state_notification_interface": [
  "simulator-iface/osa-tracker-state-interfaces.h",
  "simulator-iface/osa-tracker-state-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_tracker_state_notification_interface {\n    void (*subscribe_tracker)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL mapper, conf_object_t *NOTNULL tracker);\n    void (*unsubscribe_tracker)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL mapper, conf_object_t *NOTNULL tracker);\n};"
   ]
  ],
  "s:osa_tracker_state_notification_interface_t:subscribe_tracker;unsubscribe_tracker"
 ],
 "struct osa_tracker_state_query_interface": [
  "simulator-iface/osa-tracker-state-interfaces.h",
  "simulator-iface/osa-tracker-state-interfaces.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct osa_tracker_state_query_interface {\n    attr_value_t (*_deprecated)(conf_object_t *NOTNULL obj);\n    attr_value_t (*get_entities)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker);\n    attr_value_t (*get_entity)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL tracker, entity_id_t id);\n};"
   ]
  ],
  "s:osa_tracker_state_query_interface_t:_deprecated;get_entities;get_entity"
 ],
 "struct packet_interface": [
  "model-iface/packet.h",
  "model-iface/packet.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct packet_interface {\n    void (*transfer)(conf_object_t *obj, bytes_t data);\n};"
   ]
  ],
  "s:packet_interface_t:transfer"
 ],
 "struct page": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct page;"
   ]
  ],
  "s:page_t"
 ],
 "struct pci_bridge_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pci_bridge_interface {\n    void (*system_error)(conf_object_t *obj);\n    void (*raise_interrupt)(conf_object_t *obj, conf_object_t *pci_bus, int device, int pin);\n    void (*lower_interrupt)(conf_object_t *obj, conf_object_t *pci_bus, int device, int pin);\n};"
   ]
  ],
  "s:pci_bridge_interface_t:system_error;raise_interrupt;lower_interrupt"
 ],
 "struct pci_bus_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pci_bus_interface {\n    exception_type_t (*memory_access)(conf_object_t *obj, generic_transaction_t *NOTNULL mem_op);\n    void (*raise_interrupt)(conf_object_t *obj, conf_object_t *NOTNULL dev, int pin);\n    void (*lower_interrupt)(conf_object_t *obj, conf_object_t *NOTNULL dev, int pin);\n    int (*interrupt_acknowledge)(conf_object_t *obj);\n    int (*add_map)(conf_object_t *obj, conf_object_t *dev, addr_space_t space, conf_object_t *target, map_info_t info);\n    int (*remove_map)(conf_object_t *obj, conf_object_t *dev, addr_space_t space, int function);\n    void (*set_bus_number)(conf_object_t *obj, int bus_id);\n    void (*set_sub_bus_number)(conf_object_t *obj, int bus_id);\n    void (*add_default)(conf_object_t *obj, conf_object_t *dev, addr_space_t space, conf_object_t *target, map_info_t info);\n    void (*remove_default)(conf_object_t *obj, addr_space_t space);\n    void (*bus_reset)(conf_object_t *obj);\n    void (*special_cycle)(conf_object_t *obj, uint32 value);\n    void (*system_error)(conf_object_t *obj);\n    int (*get_bus_address)(conf_object_t *obj, conf_object_t *NOTNULL dev);\n    void (*set_device_status)(conf_object_t *obj, int device, int function, int enabled);\n    conf_object_t *(*configuration_space)(conf_object_t *obj);\n    conf_object_t *(*io_space)(conf_object_t *obj);\n    conf_object_t *(*memory_space)(conf_object_t *obj);\n};"
   ]
  ],
  "s:pci_bus_interface_t:memory_access;raise_interrupt;lower_interrupt;interrupt_acknowledge;add_map;remove_map;set_bus_number;set_sub_bus_number;add_default;remove_default;bus_reset;special_cycle;system_error;get_bus_address;set_device_status;configuration_space;io_space;memory_space"
 ],
 "struct pci_device_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pci_device_interface {\n    void (*bus_reset)(conf_object_t *obj);\n    int (*_deprecated_interrupt_acknowledge)(conf_object_t *obj);\n    void (*_deprecated_special_cycle)(conf_object_t *obj, uint32 value);\n    void (*system_error)(conf_object_t *obj);\n    void (*interrupt_raised)(conf_object_t *obj, int pin);\n    void (*interrupt_lowered)(conf_object_t *obj, int pin);\n};"
   ]
  ],
  "s:pci_device_interface_t:bus_reset;_deprecated_interrupt_acknowledge;_deprecated_special_cycle;system_error;interrupt_raised;interrupt_lowered"
 ],
 "struct pci_downstream_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pci_downstream_interface {\n    exception_type_t (*operation)(conf_object_t *obj, generic_transaction_t *mem_op, addr_space_t space);\n};"
   ]
  ],
  "s:pci_downstream_interface_t:operation"
 ],
 "struct pci_express_hotplug_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6"
    ],
    "struct pci_express_hotplug_interface {\n    void (*presence_change)(conf_object_t *dst, conf_object_t *NOTNULL src, int is_present);\n    void (*inject_power_fault)(conf_object_t *obj);\n    void (*press_attention_button)(conf_object_t *obj);\n    void (*set_mrl_state)(conf_object_t *obj, int locked);\n    int (*get_mrl_state)(conf_object_t *obj);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:pci_express_hotplug_interface_t:presence_change;inject_power_fault;press_attention_button;set_mrl_state;get_mrl_state"
 ],
 "struct pci_express_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6"
    ],
    "struct pci_express_interface {\n    int (*send_message)(conf_object_t *dst, conf_object_t *src, pcie_message_type_t type, byte_string_t payload);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:pci_express_interface_t:send_message"
 ],
 "struct pci_interrupt_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pci_interrupt_interface {\n    void (*raise_interrupt)(conf_object_t *obj, conf_object_t *pci_bus, int device, int pin);\n    void (*lower_interrupt)(conf_object_t *obj, conf_object_t *pci_bus, int device, int pin);\n};"
   ]
  ],
  "s:pci_interrupt_interface_t:raise_interrupt;lower_interrupt"
 ],
 "struct pci_memory_transaction": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pci_memory_transaction {\n    generic_transaction_t _internal_s;\n    uint32 _internal_original_size;\n    int _internal_bus_address;\n    int _internal_bus_number;\n    int _internal_device_number;\n    int _internal_function_number;\n    uint32 _internal_tlp_prefix;\n};"
   ]
  ],
  "s:pci_memory_transaction_t:_internal_s;_internal_original_size;_internal_bus_address;_internal_bus_number;_internal_device_number;_internal_function_number;_internal_tlp_prefix"
 ],
 "struct pci_multi_function_device_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pci_multi_function_device_interface {\n    attr_value_t (*supported_functions)(conf_object_t *obj);\n};"
   ]
  ],
  "s:pci_multi_function_device_interface_t:supported_functions"
 ],
 "struct pci_upstream_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pci_upstream_interface {\n    exception_type_t (*operation)(conf_object_t *obj, generic_transaction_t *mem_op, addr_space_t space);\n};"
   ]
  ],
  "s:pci_upstream_interface_t:operation"
 ],
 "struct pci_upstream_operation_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pci_upstream_operation_interface {\n    exception_type_t (*read)(conf_object_t *obj, conf_object_t *initiator, uint16 rid, addr_space_t space, physical_address_t address, buffer_t buffer);\n    exception_type_t (*write)(conf_object_t *obj, conf_object_t *initiator, uint16 rid, addr_space_t space, physical_address_t address, bytes_t buffer);\n};"
   ]
  ],
  "s:pci_upstream_operation_interface_t:read;write"
 ],
 "struct pcie_adapter_compat_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6"
    ],
    "struct pcie_adapter_compat_interface {\n    void (*set_secondary_bus_number)(conf_object_t *obj, int secondary_bus_number);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:pcie_adapter_compat_interface_t:set_secondary_bus_number"
 ],
 "struct pcie_device_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pcie_device_interface {\n    void (*connected)(conf_object_t *obj, conf_object_t *port_obj, uint16 device_id);\n    void (*disconnected)(conf_object_t *obj, conf_object_t *port_obj, uint16 device_id);\n    void (*hot_reset)(conf_object_t *obj);\n};"
   ]
  ],
  "s:pcie_device_interface_t:connected;disconnected;hot_reset"
 ],
 "struct pcie_hotplug_events_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pcie_hotplug_events_interface {\n    void (*presence_change)(conf_object_t *obj, pcie_hotplug_pd_t state);\n    void (*power_fault)(conf_object_t *obj);\n    void (*attention_button_pressed)(conf_object_t *obj);\n    void (*mrl_sensor)(conf_object_t *obj, pcie_hotplug_mrl_t state);\n    void (*data_link_layer)(conf_object_t *obj, bool is_active);\n};"
   ]
  ],
  "s:pcie_hotplug_events_interface_t:presence_change;power_fault;attention_button_pressed;mrl_sensor;data_link_layer"
 ],
 "struct pcie_link_training_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pcie_link_training_interface {\n    bool (*trigger)(conf_object_t *obj, uint16 device_id);\n};"
   ]
  ],
  "s:pcie_link_training_interface_t:trigger"
 ],
 "struct pcie_map_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pcie_map_interface {\n    void (*add_map)(conf_object_t *obj, conf_object_t *map_obj, map_info_t info, pcie_type_t type);\n    void (*del_map)(conf_object_t *obj, conf_object_t *map_obj, physical_address_t base, pcie_type_t type);\n    void (*add_function)(conf_object_t *obj, conf_object_t *map_obj, uint16 device_and_function);\n    void (*del_function)(conf_object_t *obj, conf_object_t *map_obj, uint16 device_and_function);\n    void (*enable_function)(conf_object_t *obj, uint16 device_and_function);\n    void (*disable_function)(conf_object_t *obj, uint16 device_and_function);\n    uint16 (*get_device_id)(conf_object_t *obj, conf_object_t *dev_obj);\n};"
   ]
  ],
  "s:pcie_map_interface_t:add_map;del_map;add_function;del_function;enable_function;disable_function;get_device_id"
 ],
 "struct pcie_port_control_interface": [
  "devs/pci.h",
  "devs/pci.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pcie_port_control_interface {\n    void (*set_secondary_bus_number)(conf_object_t *obj, uint64 value);\n    void (*hot_reset)(conf_object_t *obj);\n};"
   ]
  ],
  "s:pcie_port_control_interface_t:set_secondary_bus_number;hot_reset"
 ],
 "struct pmr_interface": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pmr_interface {\n    uint64 (*get)(conf_object_t *obj, int pmr_number, bool instruction_read);\n    void (*set)(conf_object_t *obj, int pmr_number, uint64 value, bool instruction_write);\n};"
   ]
  ],
  "s:pmr_interface_t:get;set"
 ],
 "struct pool_protect_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct pool_protect_interface {\n    int (*create_group)(conf_object_t *obj, conf_object_t *image_obj);\n    void (*protect)(conf_object_t *obj, int id);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:pool_protect_interface_t:create_group;protect"
 ],
 "struct port_space_interface": [
  "devs/memory-space.h",
  "devs/memory-space.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct port_space_interface {\n    exception_type_t (*port_operation)(conf_object_t *NOTNULL pspace_obj, generic_transaction_t *NOTNULL mop, map_info_t map_info);\n    attr_value_t (*read)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, int length, int inquiry);\n    exception_type_t (*write)(conf_object_t *NOTNULL obj, conf_object_t *initiator, physical_address_t addr, attr_value_t data, int inquiry);\n};"
   ]
  ],
  "s:port_space_interface_t:port_operation;read;write"
 ],
 "struct ppc_interface": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ppc_interface {\n    void (*clear_atomic_reservation_bit)(conf_object_t *cpu);\n    void (*raise_machine_check_exception)(conf_object_t *cpu, ppc_mc_exc_t exc);\n    unsigned (*get_timebase_enabled)(conf_object_t *cpu);\n    void (*set_timebase_enabled)(conf_object_t *cpu, unsigned enabled);\n    ppc_sleep_state_t (*get_sleep_state)(conf_object_t *cpu);\n    void (*set_sleep_state)(conf_object_t *cpu, ppc_sleep_state_t state);\n};"
   ]
  ],
  "s:ppc_interface_t:clear_atomic_reservation_bit;raise_machine_check_exception;get_timebase_enabled;set_timebase_enabled;get_sleep_state;set_sleep_state"
 ],
 "struct ppc_memory_transaction": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ppc_memory_transaction {\n    generic_transaction_t s;\n    processor_mode_t mode;\n    ppc_mem_instr_origin_t instr_origin;\n    logical_address_t ea_origin;\n    uint8 wimg;\n    uint8 alignment;\n    uint8 inhibit_exception;\n    uint8 external_pid;\n    ppc_decoration_t decoration;\n};"
   ]
  ],
  "s:ppc_memory_transaction_t:s;mode;instr_origin;ea_origin;wimg;alignment;inhibit_exception;external_pid;decoration"
 ],
 "struct pre_conf_object_set_t": [
  "simulator/configuration.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pre_conf_object_set_t;"
   ]
  ],
  "s:pre_conf_object_set_t"
 ],
 "struct pre_decoder_interface": [
  "model-iface/cpu-instrumentation.h",
  "model-iface/cpu-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pre_decoder_interface {\n    cpu_cb_handle_t *(*register_pre_decoder_cb)(conf_object_t *cpu, conf_object_t *connection, pre_decoder_cb_t cb, lang_void *data);\n};"
   ]
  ],
  "s:pre_decoder_interface_t:register_pre_decoder_cb"
 ],
 "struct preference_interface": [
  "simulator-iface/preferences.h",
  "simulator-iface/preferences.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct preference_interface {\n    attr_value_t (*get_preference_for_module_key)(conf_object_t *NOTNULL prefs, const char *NOTNULL module, const char *NOTNULL key);\n    void (*set_preference_for_module_key)(conf_object_t *NOTNULL prefs, attr_value_t value, const char *NOTNULL module, const char *NOTNULL key);\n};"
   ]
  ],
  "s:preference_interface_t:get_preference_for_module_key;set_preference_for_module_key"
 ],
 "struct probe_array_interface": [
  "simulator-iface/probe-interface.h",
  "simulator-iface/probe-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct probe_array_interface {\n    int (*num_indices)(conf_object_t *obj);\n    attr_value_t (*value)(conf_object_t *obj, int idx);\n    attr_value_t (*all_values)(conf_object_t *obj);\n    attr_value_t (*properties)(conf_object_t *obj, int idx);\n};"
   ]
  ],
  "s:probe_array_interface_t:num_indices;value;all_values;properties"
 ],
 "struct probe_index_interface": [
  "simulator-iface/probe-interface.h",
  "simulator-iface/probe-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct probe_index_interface {\n    int (*num_indices)(conf_object_t *obj);\n    attr_value_t (*value)(conf_object_t *obj, int idx);\n    attr_value_t (*properties)(conf_object_t *obj, int idx);\n};"
   ]
  ],
  "s:probe_index_interface_t:num_indices;value;properties"
 ],
 "struct probe_interface": [
  "simulator-iface/probe-interface.h",
  "simulator-iface/probe-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct probe_interface {\n    attr_value_t (*value)(conf_object_t *obj);\n    attr_value_t (*properties)(conf_object_t *obj);\n};"
   ]
  ],
  "s:probe_interface_t:value;properties"
 ],
 "struct probe_sampler_cache_interface": [
  "simulator-iface/probe-interface.h",
  "simulator-iface/probe-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct probe_sampler_cache_interface {\n    void (*enable)(conf_object_t *obj);\n    void (*disable)(conf_object_t *obj);\n    uint64 (*get_generation)(conf_object_t *obj);\n};"
   ]
  ],
  "s:probe_sampler_cache_interface_t:enable;disable;get_generation"
 ],
 "struct probe_subscribe_interface": [
  "simulator-iface/probe-interface.h",
  "simulator-iface/probe-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct probe_subscribe_interface {\n    void (*subscribe)(conf_object_t *obj);\n    void (*unsubscribe)(conf_object_t *obj);\n    int (*num_subscribers)(conf_object_t *obj);\n};"
   ]
  ],
  "s:probe_subscribe_interface_t:subscribe;unsubscribe;num_subscribers"
 ],
 "struct processor_cli_interface": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct processor_cli_interface {\n    tuple_int_string_t (*get_disassembly)(conf_object_t *obj, const char *addr_prefix, generic_address_t address, bool print_cpu, const char *mnemonic);\n    char *(*get_pregs)(conf_object_t *cpu, bool all);\n    attr_value_t (*get_diff_regs)(conf_object_t *obj);\n    char *(*get_pending_exception_string)(conf_object_t *obj);\n    char *(*get_address_prefix)(conf_object_t *obj);\n    physical_block_t (*translate_to_physical)(conf_object_t *obj, const char *prefix, generic_address_t address);\n};"
   ]
  ],
  "s:processor_cli_interface_t:get_disassembly;get_pregs;get_diff_regs;get_pending_exception_string;get_address_prefix;translate_to_physical"
 ],
 "struct processor_endian_interface": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct processor_endian_interface {\n    cpu_endian_t (*get_instruction_endian)(conf_object_t *obj);\n    cpu_endian_t (*get_data_endian)(conf_object_t *obj);\n};"
   ]
  ],
  "s:processor_endian_interface_t:get_instruction_endian;get_data_endian"
 ],
 "struct processor_gui_interface": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct processor_gui_interface {\n    void (*dummy)(conf_object_t *obj);\n};"
   ]
  ],
  "s:processor_gui_interface_t:dummy"
 ],
 "struct processor_info_interface": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct processor_info_interface {\n    tuple_int_string_t (*disassemble)(conf_object_t *obj, generic_address_t address, attr_value_t instruction_data, int sub_operation);\n    void (*set_program_counter)(conf_object_t *obj, logical_address_t pc);\n    logical_address_t (*get_program_counter)(conf_object_t *obj);\n    physical_block_t (*logical_to_physical)(conf_object_t *obj, logical_address_t address, access_t access_type);\n    int (*enable_processor)(conf_object_t *obj);\n    int (*disable_processor)(conf_object_t *obj);\n    int (*get_enabled)(conf_object_t *obj);\n    cpu_endian_t (*get_endian)(conf_object_t *obj);\n    conf_object_t *(*get_physical_memory)(conf_object_t *obj);\n    int (*get_logical_address_width)(conf_object_t *obj);\n    int (*get_physical_address_width)(conf_object_t *obj);\n    const char *(*architecture)(conf_object_t *obj);\n};"
   ]
  ],
  "s:processor_info_interface_t:disassemble;set_program_counter;get_program_counter;logical_to_physical;enable_processor;disable_processor;get_enabled;get_endian;get_physical_memory;get_logical_address_width;get_physical_address_width;architecture"
 ],
 "struct processor_info_v2_interface": [
  "model-iface/processor-info.h",
  "model-iface/processor-info.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct processor_info_v2_interface {\n    tuple_int_string_t (*disassemble)(conf_object_t *obj, generic_address_t address, attr_value_t instruction_data, int sub_operation);\n    void (*set_program_counter)(conf_object_t *obj, logical_address_t pc);\n    logical_address_t (*get_program_counter)(conf_object_t *obj);\n    physical_block_t (*logical_to_physical)(conf_object_t *obj, logical_address_t address, access_t access_type);\n    processor_mode_t (*get_processor_mode)(conf_object_t *obj);\n    int (*enable_processor)(conf_object_t *obj);\n    int (*disable_processor)(conf_object_t *obj);\n    int (*get_enabled)(conf_object_t *obj);\n    cpu_endian_t (*get_endian)(conf_object_t *obj);\n    conf_object_t *(*get_physical_memory)(conf_object_t *obj);\n    int (*get_logical_address_width)(conf_object_t *obj);\n    int (*get_physical_address_width)(conf_object_t *obj);\n    const char *(*architecture)(conf_object_t *obj);\n};"
   ]
  ],
  "s:processor_info_v2_interface_t:disassemble;set_program_counter;get_program_counter;logical_to_physical;get_processor_mode;enable_processor;disable_processor;get_enabled;get_endian;get_physical_memory;get_logical_address_width;get_physical_address_width;architecture"
 ],
 "struct prof_data": [
  "util/prof-data.h",
  "processor-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct prof_data;"
   ]
  ],
  "s:prof_data_t"
 ],
 "struct profile_area": [
  "simulator/host-profiling.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct profile_area;"
   ]
  ],
  "s:profile_area_t"
 ],
 "struct pulse_interface": [
  "devs/signal.h",
  "devs/signal.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct pulse_interface {\n    void (*pulse)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:pulse_interface_t:pulse"
 ],
 "struct ram_access_subscribe_interface": [
  "model-iface/ram-instrumentation.h",
  "model-iface/ram-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ram_access_subscribe_interface {\n    void (*remove_callback)(conf_object_t *NOTNULL obj, ram_cb_handle_t *handle);\n    void (*enable_callback)(conf_object_t *NOTNULL obj, ram_cb_handle_t *handle);\n    void (*disable_callback)(conf_object_t *NOTNULL obj, ram_cb_handle_t *handle);\n    ram_cb_handle_t *(*register_access_before_cb)(conf_object_t *NOTNULL obj, conf_object_t *conn_obj, ram_access_cb_t cb, lang_void *data);\n    ram_cb_handle_t *(*register_access_after_cb)(conf_object_t *NOTNULL obj, conf_object_t *conn_obj, ram_access_cb_t cb, lang_void *data);\n    ram_cb_handle_t *(*register_access_filter_cb)(conf_object_t *NOTNULL obj, conf_object_t *connection, access_filter_cb_t cb, lang_void *data);\n};"
   ]
  ],
  "s:ram_access_subscribe_interface_t:remove_callback;enable_callback;disable_callback;register_access_before_cb;register_access_after_cb;register_access_filter_cb"
 ],
 "struct ram_callback_entry": [
  "model-iface/ram-instrumentation.h",
  "model-iface/ram-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ram_callback_entry;"
   ]
  ],
  "s:ram_cb_handle_t"
 ],
 "struct ram_interface": [
  "devs/ram.h",
  "devs/ram.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct ram_interface {\n    page_t *(*get_page)(conf_object_t *NOTNULL obj, physical_address_t addr);\n    void (*fill)(conf_object_t *NOTNULL obj, physical_address_t start, uint64 length, uint8 value);\n    exception_type_t (*read)(conf_object_t *NOTNULL obj, conf_object_t *initiator, uint64 addr, buffer_t data, ram_operation_flags_t flags);\n    exception_type_t (*write)(conf_object_t *NOTNULL obj, conf_object_t *initiator, uint64 addr, bytes_t data, ram_operation_flags_t flags);\n    exception_type_t (*touch)(conf_object_t *NOTNULL obj, conf_object_t *initiator, uint64 addr, uint64 size, read_or_write_t rw, ram_operation_flags_t flags);\n    uint64 (*size)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:ram_interface_t:get_page;fill;read;write;touch;size"
 ],
 "struct recorded_interface": [
  "simulator-iface/recorder.h",
  "simulator-iface/recorder.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct recorded_interface {\n    void (*input)(conf_object_t *NOTNULL obj, bytes_t data, bool playback);\n};"
   ]
  ],
  "s:recorded_interface_t:input"
 ],
 "struct recorder": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct recorder;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:recorder_t"
 ],
 "struct recorder_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct recorder_interface {\n    recorder_t *(*attach)(conf_object_t *rec, conf_object_t *obj, recorder_input_handler_t input_from_recorder);\n    void (*detach)(conf_object_t *rec, recorder_t *r);\n    void (*input)(conf_object_t *rec, recorder_t *r, dbuffer_t *data, uint32 uint_data);\n    bool (*playback)(conf_object_t *rec);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:recorder_interface_t:attach;detach;input;playback"
 ],
 "struct recorder_v2_interface": [
  "simulator-iface/recorder.h",
  "simulator-iface/recorder.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct recorder_v2_interface {\n    void (*record)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL sender, bytes_t data);\n    bool (*playback)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:recorder_v2_interface_t:record;playback"
 ],
 "struct register_breakpoint_interface": [
  "simulator-iface/register-breakpoint.h",
  "simulator-iface/register-breakpoint.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct register_breakpoint_interface {\n    int (*add_breakpoint)(conf_object_t *obj, const char *reg_name, uint64 value, uint64 mask, bool break_upon_change);\n    bool (*remove_breakpoint)(conf_object_t *obj, int id);\n    attr_value_t (*get_breakpoints)(conf_object_t *obj);\n};"
   ]
  ],
  "s:register_breakpoint_interface_t:add_breakpoint;remove_breakpoint;get_breakpoints"
 ],
 "struct register_view_catalog_interface": [
  "model-iface/register-view.h",
  "model-iface/register-view.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct register_view_catalog_interface {\n    attr_value_t (*register_names)(conf_object_t *NOTNULL obj);\n    attr_value_t (*register_offsets)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:register_view_catalog_interface_t:register_names;register_offsets"
 ],
 "struct register_view_interface": [
  "model-iface/register-view.h",
  "model-iface/register-view.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct register_view_interface {\n    const char *(*description)(conf_object_t *NOTNULL obj);\n    bool (*big_endian_bitorder)(conf_object_t *NOTNULL obj);\n    unsigned (*number_of_registers)(conf_object_t *NOTNULL obj);\n    attr_value_t (*register_info)(conf_object_t *NOTNULL obj, unsigned reg);\n    uint64 (*get_register_value)(conf_object_t *NOTNULL obj, unsigned reg);\n    void (*set_register_value)(conf_object_t *NOTNULL obj, unsigned reg, uint64 val);\n};"
   ]
  ],
  "s:register_view_interface_t:description;big_endian_bitorder;number_of_registers;register_info;get_register_value;set_register_value"
 ],
 "struct register_view_read_only_interface": [
  "model-iface/register-view-read-only.h",
  "model-iface/register-view-read-only.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct register_view_read_only_interface {\n    bool (*is_read_only)(conf_object_t *NOTNULL obj, unsigned reg);\n};"
   ]
  ],
  "s:register_view_read_only_interface_t:is_read_only"
 ],
 "struct riscv_clic_interface": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct riscv_clic_interface {\n    void (*acknowledge_interrupt)(conf_object_t *obj, uint64 id);\n};"
   ]
  ],
  "s:riscv_clic_interface_t:acknowledge_interrupt"
 ],
 "struct riscv_clic_interrupt_interface": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct riscv_clic_interrupt_interface {\n    void (*set_active_interrupt)(conf_object_t *obj, uint64 id, uint64 level, riscv_vectoring_mode_t vect_mode, riscv_cpu_mode_t cpu_mode);\n    void (*clear_interrupt)(conf_object_t *obj);\n};"
   ]
  ],
  "s:riscv_clic_interrupt_interface_t:set_active_interrupt;clear_interrupt"
 ],
 "struct riscv_coprocessor_interface": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct riscv_coprocessor_interface {\n    uint64 (*read_register)(conf_object_t *obj, uint64 number);\n    void (*write_register)(conf_object_t *obj, uint64 number, uint64 value);\n};"
   ]
  ],
  "s:riscv_coprocessor_interface_t:read_register;write_register"
 ],
 "struct riscv_custom_csr_interface": [
  "arch/risc-v-customize.h",
  "arch/risc-v-customize.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct riscv_custom_csr_interface {\n    bool (*register_csr)(conf_object_t *cpu, conf_object_t *ext_obj, uint32 csr_address, const char *name, const char *description, riscv_csr_access_cb_t access);\n    void (*register_reset)(conf_object_t *cpu, conf_object_t *csr_obj, riscv_reset_cb_t reset_func);\n};"
   ]
  ],
  "s:riscv_custom_csr_interface_t:register_csr;register_reset"
 ],
 "struct riscv_imsic_interface": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct riscv_imsic_interface {\n    uint32 (*num_guest_files)(conf_object_t *obj);\n    uint64 (*read_irq_file)(conf_object_t *obj, riscv_imsic_file_id_t id, uint32 offset);\n    uint64 (*read_and_write_irq_file)(conf_object_t *obj, riscv_imsic_file_id_t id, uint32 offset, uint64 new_value, uint64 mask);\n    uint64 (*read_xtopei)(conf_object_t *obj, riscv_imsic_file_id_t id);\n    uint64 (*read_and_write_xtopei)(conf_object_t *obj, riscv_imsic_file_id_t id, uint64 value, uint64 mask);\n};"
   ]
  ],
  "s:riscv_imsic_interface_t:num_guest_files;read_irq_file;read_and_write_irq_file;read_xtopei;read_and_write_xtopei"
 ],
 "struct riscv_instruction_action_interface": [
  "arch/risc-v-customize.h",
  "arch/risc-v-customize.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct riscv_instruction_action_interface {\n    uint64 (*read_x_register)(conf_object_t *cpu, uint32 number);\n    void (*write_x_register)(conf_object_t *cpu, uint32 number, uint64 value);\n    const char *(*name_x_register)(conf_object_t *cpu, uint32 number);\n    uint64 (*read_csr)(conf_object_t *cpu, uint32 address);\n    void (*write_csr)(conf_object_t *cpu, uint32 address, uint64 value);\n    uint64 (*read_memory)(conf_object_t *cpu, uint64 address, uint32 size);\n    void (*write_memory)(conf_object_t *cpu, uint64 address, uint32 size, uint64 value);\n    void (*load_memory_buf)(conf_object_t *cpu, uint64 address, buffer_t buf);\n    void (*store_memory_buf)(conf_object_t *cpu, uint64 address, bytes_t buf);\n    riscv_cpu_mode_t (*get_current_cpu_mode)(conf_object_t *cpu);\n    void (*raise_exception)(conf_object_t *cpu, uint64 code, uint64 tval);\n};"
   ]
  ],
  "s:riscv_instruction_action_interface_t:read_x_register;write_x_register;name_x_register;read_csr;write_csr;read_memory;write_memory;load_memory_buf;store_memory_buf;get_current_cpu_mode;raise_exception"
 ],
 "struct riscv_signal_sgeip_interface": [
  "arch/risc-v.h",
  "arch/risc-v.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct riscv_signal_sgeip_interface {\n    void (*signal_raise)(conf_object_t *NOTNULL obj, uint64 vgein);\n    void (*signal_lower)(conf_object_t *NOTNULL obj, uint64 vgein);\n};"
   ]
  ],
  "s:riscv_signal_sgeip_interface_t:signal_raise;signal_lower"
 ],
 "struct rs232_console_interface": [
  "devs/serial-device.h",
  "devs/serial-device.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct rs232_console_interface {\n    void (*set_baudrate)(conf_object_t *obj, int rate, int commit);\n    void (*set_data_bits)(conf_object_t *obj, int bits, int commit);\n    void (*set_stop_bits)(conf_object_t *obj, stop_bits_t stop_bits, int commit);\n    void (*set_parity_mode)(conf_object_t *obj, parity_mode_t parity_mode, int commit);\n    void (*set_dtr)(conf_object_t *obj, int status);\n    void (*set_rts)(conf_object_t *obj, int status);\n    void (*set_break)(conf_object_t *obj, int status);\n};"
   ]
  ],
  "s:rs232_console_interface_t:set_baudrate;set_data_bits;set_stop_bits;set_parity_mode;set_dtr;set_rts;set_break"
 ],
 "struct rs232_device_interface": [
  "devs/serial-device.h",
  "devs/serial-device.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct rs232_device_interface {\n    void (*cts)(conf_object_t *obj, int status);\n    void (*dsr)(conf_object_t *obj, int status);\n    void (*ring)(conf_object_t *obj, int status);\n    void (*carrier)(conf_object_t *obj, int status);\n    void (*got_break)(conf_object_t *obj);\n    void (*got_frame_error)(conf_object_t *obj);\n};"
   ]
  ],
  "s:rs232_device_interface_t:cts;dsr;ring;carrier;got_break;got_frame_error"
 ],
 "struct sata_interface": [
  "devs/sata-interface.h",
  "devs/sata-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct sata_interface {\n    void (*receive_fis)(conf_object_t *obj, const bytes_t fis);\n};"
   ]
  ],
  "s:sata_interface_t:receive_fis"
 ],
 "struct save_state_interface": [
  "model-iface/save-state.h",
  "model-iface/save-state.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct save_state_interface {\n    int (*get_version)(conf_object_t *obj);\n    int (*get_size)(conf_object_t *obj, state_save_kind_t stype);\n    int (*get_align)(conf_object_t *obj, state_save_kind_t stype);\n    int (*save_state)(conf_object_t *obj, state_save_kind_t stype, void *dest);\n    int (*load_state)(conf_object_t *obj, state_save_kind_t stype, void *src);\n    int (*compare_state)(conf_object_t *obj, state_save_kind_t stype, void *src);\n    int (*print_state)(conf_object_t *obj, state_save_kind_t stype, void *src, int symnames, int diff);\n    int (*save_state_he)(conf_object_t *obj, state_save_kind_t stype, void *dest);\n    int (*load_state_he)(conf_object_t *obj, state_save_kind_t stype, void *src);\n    int (*compare_state_he)(conf_object_t *obj, state_save_kind_t stype, void *src);\n    int (*print_state_he)(conf_object_t *obj, state_save_kind_t stype, void *src, int symnames, int diff);\n};"
   ]
  ],
  "s:save_state_interface_t:get_version;get_size;get_align;save_state;load_state;compare_state;print_state;save_state_he;load_state_he;compare_state_he;print_state_he"
 ],
 "struct scalar_time_interface": [
  "simulator-iface/scalar-time.h",
  "simulator-iface/scalar-time.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct scalar_time_interface {\n    int (*add_consumer)(conf_object_t *obj);\n    void (*remove_consumer)(conf_object_t *obj, int consumer);\n    attr_value_t (*poll)(conf_object_t *obj, int consumer);\n};"
   ]
  ],
  "s:scalar_time_interface_t:add_consumer;remove_consumer;poll"
 ],
 "struct scale_factor_listener_interface": [
  "devs/frequency.h",
  "devs/frequency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct scale_factor_listener_interface {\n    void (*set)(conf_object_t *NOTNULL obj, uint64 numerator, uint64 denominator);\n};"
   ]
  ],
  "s:scale_factor_listener_interface_t:set"
 ],
 "struct screenshot_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct screenshot_interface {\n    bool (*save_png)(conf_object_t *NOTNULL obj, const char *filename);\n    bool (*save_bmp)(conf_object_t *NOTNULL obj, const char *filename);\n};"
   ]
  ],
  "s:screenshot_interface_t:save_png;save_bmp"
 ],
 "struct serial_console_frontend_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct serial_console_frontend_interface {\n    void (*write)(conf_object_t *NOTNULL obj, uint8 value);\n};"
   ]
  ],
  "s:serial_console_frontend_interface_t:write"
 ],
 "struct serial_device_interface": [
  "devs/serial-device.h",
  "devs/serial-device.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct serial_device_interface {\n    int (*write)(conf_object_t *obj, int value);\n    void (*receive_ready)(conf_object_t *obj);\n};"
   ]
  ],
  "s:serial_device_interface_t:write;receive_ready"
 ],
 "struct serial_peripheral_interface_master_interface": [
  "devs/serial-peripheral-interface.h",
  "devs/serial-peripheral-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct serial_peripheral_interface_master_interface {\n    void (*spi_response)(conf_object_t *obj, int bits, dbuffer_t *payload);\n};"
   ]
  ],
  "s:serial_peripheral_interface_master_interface_t:spi_response"
 ],
 "struct serial_peripheral_interface_slave_interface": [
  "devs/serial-peripheral-interface.h",
  "devs/serial-peripheral-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct serial_peripheral_interface_slave_interface {\n    void (*spi_request)(conf_object_t *obj, int first, int last, int bits, dbuffer_t *payload);\n    void (*connect_master)(conf_object_t *obj, conf_object_t *master, const char *port, serial_peripheral_interface_flags_t flags);\n    void (*disconnect_master)(conf_object_t *obj, conf_object_t *master);\n};"
   ]
  ],
  "s:serial_peripheral_interface_slave_interface_t:spi_request;connect_master;disconnect_master"
 ],
 "struct signal_interface": [
  "devs/signal.h",
  "devs/signal.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct signal_interface {\n    void (*signal_raise)(conf_object_t *NOTNULL obj);\n    void (*signal_lower)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:signal_interface_t:signal_raise;signal_lower"
 ],
 "struct simple_dispatcher_interface": [
  "devs/frequency.h",
  "devs/frequency.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct simple_dispatcher_interface {\n    void (*subscribe)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL listener, const char *listener_port);\n    void (*unsubscribe)(conf_object_t *NOTNULL bus, conf_object_t *NOTNULL listener, const char *listener_port);\n};"
   ]
  ],
  "s:simple_dispatcher_interface_t:subscribe;unsubscribe"
 ],
 "struct simple_interrupt_interface": [
  "devs/interrupt.h",
  "devs/interrupt.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct simple_interrupt_interface {\n    void (*interrupt)(conf_object_t *NOTNULL obj, int value);\n    void (*interrupt_clear)(conf_object_t *NOTNULL obj, int value);\n};"
   ]
  ],
  "s:simple_interrupt_interface_t:interrupt;interrupt_clear"
 ],
 "struct simulator_cache_interface": [
  "model-iface/simulator-cache.h",
  "model-iface/simulator-cache.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct simulator_cache_interface {\n    void (*flush)(conf_object_t *obj);\n};"
   ]
  ],
  "s:simulator_cache_interface_t:flush"
 ],
 "struct slave_agent_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct slave_agent_interface {\n    void (*accept)(conf_object_t *obj, bytes_t msg);\n    void (*accept_async)(conf_object_t *obj, bytes_t msg);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:slave_agent_interface_t:accept;accept_async"
 ],
 "struct slaver_message_interface": [
  "obsolete/6.h",
  "obsolete/6.h",
  [
   [
    [
     "6"
    ],
    "struct slaver_message_interface {\n    void (*send)(conf_object_t *obj, slave_time_t time, uint64 skey, bytes_t msg);\n    void (*send_async)(conf_object_t *obj, bytes_t msg);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:slaver_message_interface_t:send;send_async"
 ],
 "struct smm_instrumentation_subscribe_interface": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct smm_instrumentation_subscribe_interface {\n    cpu_cb_handle_t *(*register_smm_enter_before_cb)(conf_object_t *cpu, conf_object_t *connection, smm_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_smm_enter_after_cb)(conf_object_t *cpu, conf_object_t *connection, smm_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_smm_leave_before_cb)(conf_object_t *cpu, conf_object_t *connection, smm_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_smm_leave_after_cb)(conf_object_t *cpu, conf_object_t *connection, smm_switch_cb_t cb, lang_void *user_data);\n};"
   ]
  ],
  "s:smm_instrumentation_subscribe_interface_t:register_smm_enter_before_cb;register_smm_enter_after_cb;register_smm_leave_before_cb;register_smm_leave_after_cb"
 ],
 "struct snoop_memory_interface": [
  "model-iface/timing-model.h",
  "model-iface/timing-model.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct snoop_memory_interface {\n    cycles_t (*operate)(conf_object_t *NOTNULL mem_hier, conf_object_t *NOTNULL space, map_list_t *map_list, generic_transaction_t *NOTNULL mem_op);\n};"
   ]
  ],
  "s:snoop_memory_interface_t:operate"
 ],
 "struct spr_interface": [
  "arch/ppc.h",
  "arch/ppc.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct spr_interface {\n    void (*register_user_handlers)(conf_object_t *cpu, int64 spr_number, gen_spr_user_getter_func_t getter, lang_void *user_getter_data, gen_spr_user_setter_func_t setter, lang_void *user_setter_data, int privilege_checks);\n    void (*unregister_user_handlers)(conf_object_t *cpu, int64 spr_number);\n    void (*set_target_value)(conf_object_t *cpu, uint64 value);\n    void (*stash_value)(conf_object_t *cpu, int64 spr_number, uint64 value);\n    uint64 (*fetch_value)(conf_object_t *cpu, int64 spr_number);\n    gen_spr_ret_t (*default_getter)(conf_object_t *cpu, int64 spr_number, gen_spr_access_type_t type);\n    gen_spr_ret_t (*default_setter)(conf_object_t *cpu, int64 spr_number, uint64 value, gen_spr_access_type_t type);\n    const char *(*get_name)(conf_object_t *cpu, int64 spr_number);\n    int64 (*get_number)(conf_object_t *cpu, const char *spr_name);\n};"
   ]
  ],
  "s:spr_interface_t:register_user_handlers;unregister_user_handlers;set_target_value;stash_value;fetch_value;default_getter;default_setter;get_name;get_number"
 ],
 "struct stall_interface": [
  "model-iface/step.h",
  "model-iface/step.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct stall_interface {\n    cycles_t (*get_stall_cycles)(conf_object_t *obj);\n    void (*set_stall_cycles)(conf_object_t *obj, cycles_t cycles);\n    cycles_t (*get_total_stall_cycles)(conf_object_t *obj);\n};"
   ]
  ],
  "s:stall_interface_t:get_stall_cycles;set_stall_cycles;get_total_stall_cycles"
 ],
 "struct step_cycle_ratio_interface": [
  "model-iface/step.h",
  "model-iface/step.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct step_cycle_ratio_interface {\n    step_cycle_ratio_t (*get_ratio)(conf_object_t *obj);\n    void (*set_ratio)(conf_object_t *obj, uint32 steps, uint32 cycles);\n};"
   ]
  ],
  "s:step_cycle_ratio_interface_t:get_ratio;set_ratio"
 ],
 "struct step_event_instrumentation_interface": [
  "model-iface/event-instrumentation.h",
  "model-iface/event-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct step_event_instrumentation_interface {\n    step_handle_t *(*register_step_event_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, step_event_cb_t cb, lang_void *data);\n    void (*remove_step_event_cb)(conf_object_t *cpu, step_handle_t *handle);\n};"
   ]
  ],
  "s:step_event_instrumentation_interface_t:register_step_event_cb;remove_step_event_cb"
 ],
 "struct step_info_interface": [
  "model-iface/step.h",
  "model-iface/step.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct step_info_interface {\n    pc_step_t (*get_halt_steps)(conf_object_t *obj);\n    void (*set_halt_steps)(conf_object_t *obj, pc_step_t steps);\n    pc_step_t (*get_ffwd_steps)(conf_object_t *obj);\n    void (*set_ffwd_steps)(conf_object_t *obj, pc_step_t steps);\n    pc_step_t (*get_ma_steps)(conf_object_t *obj);\n    void (*set_ma_steps)(conf_object_t *obj, pc_step_t steps);\n};"
   ]
  ],
  "s:step_info_interface_t:get_halt_steps;set_halt_steps;get_ffwd_steps;set_ffwd_steps;get_ma_steps;set_ma_steps"
 ],
 "struct step_instrumentation": [
  "model-iface/event-instrumentation.h",
  "model-iface/event-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct step_instrumentation;"
   ]
  ],
  "s:step_handle_t"
 ],
 "struct step_interface": [
  "model-iface/step.h",
  "model-iface/step.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct step_interface {\n    pc_step_t (*get_step_count)(conf_object_t *NOTNULL queue);\n    void (*post_step)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, pc_step_t steps, lang_void *user_data);\n    void (*cancel_step)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    pc_step_t (*find_next_step)(conf_object_t *NOTNULL queue, event_class_t *NOTNULL evclass, conf_object_t *NOTNULL obj, int (*pred)(lang_void *data, lang_void *match_data), lang_void *match_data);\n    attr_value_t (*events)(conf_object_t *NOTNULL obj);\n    pc_step_t (*advance)(conf_object_t *queue, pc_step_t steps);\n};"
   ]
  ],
  "s:step_interface_t:get_step_count;post_step;cancel_step;find_next_step;events;advance"
 ],
 "struct strbuf": [
  "base/attr-value.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct strbuf;"
   ]
  ],
  "s:strbuf_t"
 ],
 "struct synchronous_mode_interface": [
  "model-iface/co-execute.h",
  "model-iface/co-execute.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct synchronous_mode_interface {\n    int (*enter)(conf_object_t *NOTNULL obj);\n    int (*leave)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:synchronous_mode_interface_t:enter;leave"
 ],
 "struct table_interface": [
  "simulator-iface/table.h",
  "simulator-iface/table.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct table_interface {\n    attr_value_t (*data)(conf_object_t *obj);\n    attr_value_t (*properties)(conf_object_t *obj);\n};"
   ]
  ],
  "s:table_interface_t:data;properties"
 ],
 "struct tcf_channel_interface": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct tcf_channel_interface {\n    attr_value_t (*start_channel)(conf_object_t *NOTNULL obj, const char *NOTNULL url);\n};"
   ]
  ],
  "s:tcf_channel_interface_t:start_channel"
 ],
 "struct telemetry_interface": [
  "devs/telemetry-interface.h",
  "devs/telemetry-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct telemetry_interface {\n    telemetry_class_id_t (*get_telemetry_class_id)(conf_object_t *obj, const char *telemetry_class_name);\n    const char *(*get_telemetry_class_name)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id);\n    const char *(*get_telemetry_class_description)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id);\n    telemetry_id_t (*get_telemetry_id)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id, const char *telemetry_name);\n    const char *(*get_telemetry_name)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id, telemetry_id_t telemetry_id);\n    const char *(*get_telemetry_description)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id, telemetry_id_t telemetry_id);\n    attr_value_t (*get_value)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id, telemetry_id_t telemetry_id);\n};"
   ]
  ],
  "s:telemetry_interface_t:get_telemetry_class_id;get_telemetry_class_name;get_telemetry_class_description;get_telemetry_id;get_telemetry_name;get_telemetry_description;get_value"
 ],
 "struct telemetry_manager_interface": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct telemetry_manager_interface {\n    void (*add_data)(conf_object_t *obj, const char *group, const char *key, attr_value_t *value);\n};"
   ]
  ],
  "s:telemetry_manager_interface_t:add_data"
 ],
 "struct telnet_connection_v2_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct telnet_connection_v2_interface {\n    bool (*listening)(conf_object_t *NOTNULL obj);\n    bool (*connected)(conf_object_t *NOTNULL obj);\n    void (*disconnect)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:telnet_connection_v2_interface_t:listening;connected;disconnect"
 ],
 "struct temporal_state_interface": [
  "model-iface/temporal-state.h",
  "model-iface/temporal-state.h",
  [
   [
    [
     "6"
    ],
    "struct temporal_state_interface {\n    lang_void *(*save)(conf_object_t *obj);\n    void (*merge)(conf_object_t *obj, lang_void *prev, lang_void *killed);\n    void (*prepare_restore)(conf_object_t *obj);\n    void (*finish_restore)(conf_object_t *obj, lang_void *state);\n};"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:temporal_state_interface_t:save;merge;prepare_restore;finish_restore"
 ],
 "struct terminal_client_interface": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct terminal_client_interface {\n    void (*write)(conf_object_t *obj, int id, const char *str);\n    void (*disconnect)(conf_object_t *obj, int id);\n};"
   ]
  ],
  "s:terminal_client_interface_t:write;disconnect"
 ],
 "struct terminal_server_interface": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct terminal_server_interface {\n    void (*write)(conf_object_t *obj, const char *NOTNULL str);\n    void (*set_size)(conf_object_t *obj, int left, int right);\n    void (*disconnect)(conf_object_t *obj);\n};"
   ]
  ],
  "s:terminal_server_interface_t:write;set_size;disconnect"
 ],
 "struct text_console_backend_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct text_console_backend_interface {\n    void (*input)(conf_object_t *NOTNULL obj, text_console_key_t key, text_console_modifier_t modifiers);\n    void (*request_refresh)(conf_object_t *NOTNULL obj);\n    void (*set_visible)(conf_object_t *NOTNULL obj, bool visible);\n    int (*line_length)(conf_object_t *NOTNULL obj, int line_num);\n    bool (*line_wrap)(conf_object_t *NOTNULL obj, int line_num);\n    void (*set_size)(conf_object_t *NOTNULL obj, int width, int height);\n    void (*set_default_colours)(conf_object_t *NOTNULL obj, uint32 default_fg_col, uint32 default_bg_col);\n};"
   ]
  ],
  "s:text_console_backend_interface_t:input;request_refresh;set_visible;line_length;line_wrap;set_size;set_default_colours"
 ],
 "struct text_console_frontend_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct text_console_frontend_interface {\n    int (*start)(conf_object_t *NOTNULL obj, conf_object_t *backend);\n    void (*stop)(conf_object_t *NOTNULL obj, int handle);\n    void (*set_title)(conf_object_t *NOTNULL obj, int handle, const char *short_title, const char *long_title);\n    void (*set_size)(conf_object_t *NOTNULL obj, int handle, int width, int height);\n    void (*set_max_scrollback_size)(conf_object_t *NOTNULL obj, int handle, int num_lines);\n    void (*set_default_colours)(conf_object_t *NOTNULL obj, int handle, uint32 default_fg_col, uint32 default_bg_col);\n    void (*set_visible)(conf_object_t *NOTNULL obj, int handle, bool visible);\n    void (*set_contents)(conf_object_t *NOTNULL obj, int handle, int top, int left, int bottom, int right, const char *text, const text_console_attrib_t *attrib);\n    void (*set_cursor_pos)(conf_object_t *NOTNULL obj, int handle, int row, int col);\n    void (*append_text)(conf_object_t *NOTNULL obj, int handle, int num_lines, const char *text, const text_console_attrib_t *attrib);\n    void (*refresh_screen)(conf_object_t *NOTNULL obj, int handle, const char *text, const text_console_attrib_t *attrib, const char *sb_text, const text_console_attrib_t *sb_attrib, int scrollback_size);\n};"
   ]
  ],
  "s:text_console_frontend_interface_t:start;stop;set_title;set_size;set_max_scrollback_size;set_default_colours;set_visible;set_contents;set_cursor_pos;append_text;refresh_screen"
 ],
 "struct timing_model_interface": [
  "model-iface/timing-model.h",
  "model-iface/timing-model.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct timing_model_interface {\n    cycles_t (*operate)(conf_object_t *NOTNULL mem_hier, conf_object_t *NOTNULL space, map_list_t *map_list, generic_transaction_t *NOTNULL mem_op);\n};"
   ]
  ],
  "s:timing_model_interface_t:operate"
 ],
 "struct transaction": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct transaction {\n    atom_t *atoms;\n    struct transaction *prev;\n    struct transaction_cache *_cache;\n    uint64 _status;\n};"
   ]
  ],
  "s:transaction_t:atoms;prev;_cache;_status"
 ],
 "struct transaction_bytemap": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct transaction_bytemap;"
   ]
  ],
  "s:transaction_bytemap_t"
 ],
 "struct transaction_callback_entry": [
  "model-iface/transaction-instrumentation.h",
  "model-iface/transaction-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct transaction_callback_entry;"
   ]
  ],
  "s:transaction_cb_handle_t"
 ],
 "struct transaction_interface": [
  "model-iface/transaction.h",
  "model-iface/transaction.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct transaction_interface {\n    exception_type_t (*issue)(conf_object_t *NOTNULL obj, transaction_t *NOTNULL t, uint64 addr);\n};"
   ]
  ],
  "s:transaction_interface_t:issue"
 ],
 "struct transaction_subscribe_interface": [
  "model-iface/transaction-instrumentation.h",
  "model-iface/transaction-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct transaction_subscribe_interface {\n    void (*remove_callback)(conf_object_t *NOTNULL obj, transaction_cb_handle_t *handle);\n    void (*enable_callback)(conf_object_t *NOTNULL obj, transaction_cb_handle_t *handle);\n    void (*disable_callback)(conf_object_t *NOTNULL obj, transaction_cb_handle_t *handle);\n    transaction_cb_handle_t *(*register_issue_cb)(conf_object_t *NOTNULL obj, conf_object_t *conn_obj, transaction_issue_cb_t cb, lang_void *data);\n};"
   ]
  ],
  "s:transaction_subscribe_interface_t:remove_callback;enable_callback;disable_callback;register_issue_cb"
 ],
 "struct transaction_trace_atom_access": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct transaction_trace_atom_access {\n    void (*callback)(const transaction_t *t, atom_id_t atom_id, lang_void *data);\n    lang_void *cb_data;\n    uint64 _internal;\n};"
   ]
  ],
  "s:transaction_trace_atom_access_t:callback;cb_data;_internal"
 ],
 "struct transaction_translator_interface": [
  "devs/translator.h",
  "devs/translator.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct transaction_translator_interface {\n    exception_type_t (*translate)(conf_object_t *NOTNULL obj, uint64 addr, access_t access, transaction_t *t, exception_type_t (*NOTNULL callback)(translation_t translation, transaction_t *transaction, cbdata_call_t data), cbdata_register_t data);\n};"
   ]
  ],
  "s:transaction_translator_interface_t:translate"
 ],
 "struct translate_interface": [
  "devs/memory-space.h",
  "devs/memory-space.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct translate_interface {\n    conf_object_t *(*translate)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mem_op, map_info_t mapinfo);\n};"
   ]
  ],
  "s:translate_interface_t:translate"
 ],
 "struct translation": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct translation {\n    const map_target_t *target;\n    physical_address_t base;\n    physical_address_t start;\n    physical_address_t size;\n    translation_flags_t flags;\n};"
   ]
  ],
  "s:translation_t:target;base;start;size;flags"
 ],
 "struct translation_flush_interface": [
  "devs/translator.h",
  "devs/translator.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct translation_flush_interface {\n    bool (*flush_range)(conf_object_t *obj, uint64 base, uint64 size, access_t access, const map_target_t *default_target);\n};"
   ]
  ],
  "s:translation_flush_interface_t:flush_range"
 ],
 "struct translator_interface": [
  "devs/translator.h",
  "devs/translator.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct translator_interface {\n    translation_t (*translate)(conf_object_t *NOTNULL obj, physical_address_t addr, access_t access, const map_target_t *default_target);\n};"
   ]
  ],
  "s:translator_interface_t:translate"
 ],
 "struct uint64_state_interface": [
  "model-iface/state.h",
  "model-iface/state.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct uint64_state_interface {\n    void (*set)(conf_object_t *NOTNULL obj, uint64 level);\n};"
   ]
  ],
  "s:uint64_state_interface_t:set"
 ],
 "struct usb_device_interface": [
  "devs/usb.h",
  "devs/usb.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct usb_device_interface {\n    usb_transfer_completion_t (*submit_transfer)(conf_object_t *dev_obj, usb_transfer_t *transfer);\n    void (*abort_transfer)(conf_object_t *dev_obj, usb_transfer_t *transfer);\n    void (*reset)(conf_object_t *dev_obj);\n};"
   ]
  ],
  "s:usb_device_interface_t:submit_transfer;abort_transfer;reset"
 ],
 "struct usb_interface": [
  "devs/usb.h",
  "devs/usb.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct usb_interface {\n    int (*connect_device)(conf_object_t *bus_obj, conf_object_t *NOTNULL dev_obj, usb_speed_t speed);\n    int (*disconnect_device)(conf_object_t *bus_obj, conf_object_t *NOTNULL dev_obj);\n    void (*complete_transfer)(conf_object_t *bus_obj, conf_object_t *NOTNULL dev_obj, usb_transfer_t *NOTNULL transfer);\n};"
   ]
  ],
  "s:usb_interface_t:connect_device;disconnect_device;complete_transfer"
 ],
 "struct vectored_interrupt_interface": [
  "devs/vectored-interrupt.h",
  "devs/vectored-interrupt.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct vectored_interrupt_interface {\n    void (*set_level)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL source, int level);\n};"
   ]
  ],
  "s:vectored_interrupt_interface_t:set_level"
 ],
 "struct vectored_interrupt_source_interface": [
  "devs/vectored-interrupt.h",
  "devs/vectored-interrupt.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct vectored_interrupt_source_interface {\n    int (*acknowledge)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL target, int level);\n};"
   ]
  ],
  "s:vectored_interrupt_source_interface_t:acknowledge"
 ],
 "struct vga_text_info_interface": [
  "model-iface/vga-text-interface.h",
  "model-iface/vga-text-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct vga_text_info_interface {\n    bool (*text_mode)(conf_object_t *NOTNULL obj);\n    bool (*font_size)(conf_object_t *NOTNULL obj, int *width, int *height);\n    bool (*screen_size)(conf_object_t *NOTNULL obj, int *columns, int *rows);\n    bool (*text)(conf_object_t *NOTNULL obj, uint8 *text, uint8 *line_lengths);\n};"
   ]
  ],
  "s:vga_text_info_interface_t:text_mode;font_size;screen_size;text"
 ],
 "struct vga_text_interface": [
  "model-iface/vga-text-interface.h",
  "model-iface/vga-text-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct vga_text_interface {\n    int (*add_string_notification)(conf_object_t *obj, char *substring, double sample_interval);\n};"
   ]
  ],
  "s:vga_text_interface_t:add_string_notification"
 ],
 "struct vga_text_update_interface": [
  "model-iface/vga-text-interface.h",
  "model-iface/vga-text-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct vga_text_update_interface {\n    void (*write)(conf_object_t *NOTNULL obj, char value);\n};"
   ]
  ],
  "s:vga_text_update_interface_t:write"
 ],
 "struct vga_update_interface": [
  "model-iface/gfx-console.h",
  "model-iface/gfx-console.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct vga_update_interface {\n    void (*refresh)(conf_object_t *NOTNULL obj);\n    void (*refresh_all)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:vga_update_interface_t:refresh;refresh_all"
 ],
 "struct virtual_data_bp_handle": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct virtual_data_bp_handle;"
   ]
  ],
  "s:virtual_data_bp_handle_t"
 ],
 "struct virtual_data_breakpoint_interface": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct virtual_data_breakpoint_interface {\n    virtual_data_bp_handle_t *NOTNULL (*add_read)(conf_object_t *NOTNULL obj, generic_address_t first, generic_address_t last, void (*NOTNULL callback)(cbdata_call_t data, conf_object_t *NOTNULL initiator, generic_address_t address, unsigned size), cbdata_register_t data, uint32 flags);\n    virtual_data_bp_handle_t *NOTNULL (*add_write)(conf_object_t *NOTNULL obj, generic_address_t first, generic_address_t last, void (*NOTNULL callback)(cbdata_call_t data, conf_object_t *NOTNULL initiator, generic_address_t address, bytes_t value), cbdata_register_t data, uint32 flags);\n    void (*remove)(conf_object_t *NOTNULL obj, virtual_data_bp_handle_t *NOTNULL bp_handle);\n};"
   ]
  ],
  "s:virtual_data_breakpoint_interface_t:add_read;add_write;remove"
 ],
 "struct virtual_instr_bp_handle": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct virtual_instr_bp_handle;"
   ]
  ],
  "s:virtual_instr_bp_handle_t"
 ],
 "struct virtual_instruction_breakpoint_interface": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct virtual_instruction_breakpoint_interface {\n    virtual_instr_bp_handle_t *NOTNULL (*add)(conf_object_t *NOTNULL obj, generic_address_t first, generic_address_t last, bool (*filter)(cbdata_call_t filter_data, conf_object_t *NOTNULL cpu, bytes_t opcode), cbdata_register_t filter_data, void (*NOTNULL callback)(cbdata_call_t callback_data, conf_object_t *NOTNULL cpu, generic_address_t address, unsigned size), cbdata_register_t callback_data, uint32 flags);\n    void (*remove)(conf_object_t *NOTNULL obj, virtual_instr_bp_handle_t *NOTNULL bp_handle);\n};"
   ]
  ],
  "s:virtual_instruction_breakpoint_interface_t:add;remove"
 ],
 "struct vmp_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct vmp_interface {\n    bool (*class_has_support)(conf_object_t *obj);\n    bool (*host_support)(conf_object_t *obj);\n    bool (*compatible_config)(conf_object_t *obj);\n    bool (*enable)(conf_object_t *obj);\n    void (*disable)(conf_object_t *obj);\n    bool (*enabled)(conf_object_t *obj);\n    void (*set_threshold)(conf_object_t *obj, int threshold);\n    bool (*get_feature)(conf_object_t *obj, vmp_feature_t feature);\n    bool (*set_feature)(conf_object_t *obj, vmp_feature_t feature, bool val);\n    uint64 (*get_info)(conf_object_t *obj, vmp_info_t info);\n};"
   ]
  ],
  "s:vmp_interface_t:class_has_support;host_support;compatible_config;enable;disable;enabled;set_threshold;get_feature;set_feature;get_info"
 ],
 "struct vmx_instrumentation_subscribe_interface": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct vmx_instrumentation_subscribe_interface {\n    cpu_cb_handle_t *(*register_vmx_mode_leave_cb)(conf_object_t *cpu, conf_object_t *connection, vmx_mode_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_vmx_mode_enter_cb)(conf_object_t *cpu, conf_object_t *connection, vmx_mode_switch_cb_t cb, lang_void *user_data);\n};"
   ]
  ],
  "s:vmx_instrumentation_subscribe_interface_t:register_vmx_mode_leave_cb;register_vmx_mode_enter_cb"
 ],
 "struct vnc_server_v2_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct vnc_server_v2_interface {\n    bool (*listening)(conf_object_t *NOTNULL obj);\n    int (*num_clients)(conf_object_t *NOTNULL obj);\n    void (*disconnect)(conf_object_t *NOTNULL obj);\n};"
   ]
  ],
  "s:vnc_server_v2_interface_t:listening;num_clients;disconnect"
 ],
 "struct wait_handler": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct wait_handler;"
   ]
  ],
  "s:wait_handler_t"
 ],
 "struct winsome_console_interface": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct winsome_console_interface {\n    void (*gfx)(conf_object_t *NOTNULL obj, lang_void *console, int left, int right, int top, int bottom, bytes_t data, bool text_mode);\n    void (*resize)(conf_object_t *NOTNULL obj, lang_void *console, int width, int height);\n    void (*refresh)(conf_object_t *NOTNULL obj, lang_void *console, bytes_t text, bytes_t attrib, bytes_t sb_text, bytes_t sb_attrib, int sb_size, int cursor_x, int cursor_y);\n    void (*append)(conf_object_t *NOTNULL obj, lang_void *console, uint64 num_lines, bytes_t text, bytes_t attrib, int cursor_x, int cursor_y);\n    void (*text)(conf_object_t *NOTNULL obj, lang_void *console, int left, int right, int top, int bottom, bytes_t text, bytes_t attrib, int cursor_x, int cursor_y);\n    void (*activity)(conf_object_t *NOTNULL obj, lang_void *console);\n};"
   ]
  ],
  "s:winsome_console_interface_t:gfx;resize;refresh;append;text;activity"
 ],
 "struct x86_access_type_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_access_type_interface {\n    const char *(*get_enum_name)(conf_object_t *obj, x86_access_type_t at);\n    const char *(*get_short_name)(conf_object_t *obj, x86_access_type_t at);\n    const char *(*get_description)(conf_object_t *obj, x86_access_type_t at);\n    bool (*implicit)(conf_object_t *obj, x86_access_type_t at);\n};"
   ]
  ],
  "s:x86_access_type_interface_t:get_enum_name;get_short_name;get_description;implicit"
 ],
 "struct x86_address_query_interface": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_address_query_interface {\n    x86_seg_t (*segment)(conf_object_t *cpu, address_handle_t *handle);\n    page_crossing_info_t (*get_page_crossing_info)(conf_object_t *cpu, address_handle_t *handle);\n};"
   ]
  ],
  "s:x86_address_query_interface_t:segment;get_page_crossing_info"
 ],
 "struct x86_cache_flush_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_cache_flush_interface {\n    void (*flush)(conf_object_t *obj, conf_object_t *cpu, bool writeback);\n};"
   ]
  ],
  "s:x86_cache_flush_interface_t:flush"
 ],
 "struct x86_cpuid_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_cpuid_interface {\n    cpuid_ret_t (*cpuid)(conf_object_t *obj, conf_object_t *cpu, uint32 in_eax, uint32 in_ebx, uint32 in_ecx, uint32 in_edx);\n};"
   ]
  ],
  "s:x86_cpuid_interface_t:cpuid"
 ],
 "struct x86_cpuid_query_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_cpuid_query_interface {\n    cpuid_value_t (*cpuid_query)(conf_object_t *obj, uint32 leaf, uint32 subleaf);\n};"
   ]
  ],
  "s:x86_cpuid_query_interface_t:cpuid_query"
 ],
 "struct x86_cstate_interface": [
  "devs/x86-cstate-iface.h",
  "devs/x86-cstate-iface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_cstate_interface {\n    x86_cstate_t (*get_cstate)(conf_object_t *cpu_obj);\n    void (*set_cstate)(conf_object_t *cpu_obj, uint32 state, uint32 sub_state);\n};"
   ]
  ],
  "s:x86_cstate_interface_t:get_cstate;set_cstate"
 ],
 "struct x86_cstate_notification_interface": [
  "devs/x86-cstate-iface.h",
  "devs/x86-cstate-iface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_cstate_notification_interface {\n    void (*notification)(conf_object_t *listener, conf_object_t *cpu, uint32 state, uint32 sub_state);\n};"
   ]
  ],
  "s:x86_cstate_notification_interface_t:notification"
 ],
 "struct x86_ept_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_ept_interface {\n    physical_block_t (*guest_physical_to_physical)(conf_object_t *obj, generic_address_t address, x86_processor_mode_t cpu_mode, access_t access);\n    bool (*is_ept_active)(conf_object_t *obj);\n};"
   ]
  ],
  "s:x86_ept_interface_t:guest_physical_to_physical;is_ept_active"
 ],
 "struct x86_exception_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_exception_interface {\n    void (*DE_fault)(conf_object_t *cpu);\n    void (*BR_fault)(conf_object_t *cpu);\n    void (*UD_fault)(conf_object_t *cpu);\n    void (*NM_fault)(conf_object_t *cpu);\n    void (*DF_abort)(conf_object_t *cpu, const char *desc);\n    void (*TS_fault)(conf_object_t *cpu, uint16 sel);\n    void (*NP_fault)(conf_object_t *cpu, uint16 sel_vec, bool is_vec);\n    void (*SS_fault)(conf_object_t *cpu, uint16 sel);\n    void (*GP_fault)(conf_object_t *cpu, uint16 sel_vec, bool is_vec, const char *desc);\n    void (*PF_fault)(conf_object_t *cpu, linear_address_t laddr, uint32 ecode);\n    void (*MF_fault)(conf_object_t *cpu);\n    void (*AC_fault)(conf_object_t *cpu);\n    void (*XM_fault)(conf_object_t *cpu);\n};"
   ]
  ],
  "s:x86_exception_interface_t:DE_fault;BR_fault;UD_fault;NM_fault;DF_abort;TS_fault;NP_fault;SS_fault;GP_fault;PF_fault;MF_fault;AC_fault;XM_fault"
 ],
 "struct x86_exception_query_interface": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_exception_query_interface {\n    uint8 (*vector)(conf_object_t *cpu, exception_handle_t *handle);\n    x86_exception_source_t (*source)(conf_object_t *cpu, exception_handle_t *handle);\n    uint32 (*error_code)(conf_object_t *cpu, exception_handle_t *handle);\n};"
   ]
  ],
  "s:x86_exception_query_interface_t:vector;source;error_code"
 ],
 "struct x86_instruction_query_interface": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_instruction_query_interface {\n    linear_address_t (*linear_address)(conf_object_t *cpu, instruction_handle_t *handle);\n};"
   ]
  ],
  "s:x86_instruction_query_interface_t:linear_address"
 ],
 "struct x86_instrumentation_subscribe_interface": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_instrumentation_subscribe_interface {\n    cpu_cb_handle_t *(*register_mode_switch_cb)(conf_object_t *cpu, conf_object_t *connection, x86_mode_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_illegal_instruction_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_instruction_decoder_cb_t cb, cpu_instruction_disassemble_cb_t disass_cb, lang_void *data);\n};"
   ]
  ],
  "s:x86_instrumentation_subscribe_interface_t:register_mode_switch_cb;register_illegal_instruction_cb"
 ],
 "struct x86_instrumentation_subscribe_v2_interface": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_instrumentation_subscribe_v2_interface {\n    cpu_cb_handle_t *(*register_mode_enter_cb)(conf_object_t *cpu, conf_object_t *connection, x86_mode_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_mode_leave_cb)(conf_object_t *cpu, conf_object_t *connection, x86_mode_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_illegal_instruction_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_instruction_decoder_cb_t cb, cpu_instruction_disassemble_cb_t disass_cb, lang_void *data);\n};"
   ]
  ],
  "s:x86_instrumentation_subscribe_v2_interface_t:register_mode_enter_cb;register_mode_leave_cb;register_illegal_instruction_cb"
 ],
 "struct x86_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_interface {\n    void (*set_pin_status)(conf_object_t *obj, x86_pin_t pin, int status);\n    void (*start_up)(conf_object_t *obj, uint32 start_address);\n    int (*interrupt)(conf_object_t *obj, int (*ack)(conf_object_t *obj), conf_object_t *data);\n    void (*uninterrupt)(conf_object_t *obj, int (*ack)(conf_object_t *obj));\n    int (*has_pending_interrupt)(conf_object_t *obj);\n    int (*has_waiting_interrupt)(conf_object_t *obj);\n    tagged_linear_address_t (*logical_to_linear)(conf_object_t *obj, int segment, logical_address_t addr);\n    physical_address_t (*linear_to_physical)(conf_object_t *obj, data_or_instr_t d_or_i, linear_address_t addr);\n    void (*enter_acpi_c2_state)(conf_object_t *obj);\n};"
   ]
  ],
  "s:x86_interface_t:set_pin_status;start_up;interrupt;uninterrupt;has_pending_interrupt;has_waiting_interrupt;logical_to_linear;linear_to_physical;enter_acpi_c2_state"
 ],
 "struct x86_memory_access_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_memory_access_interface {\n    uint64 (*read_logical)(conf_object_t *cpu, logical_address_t offs, x86_seg_t seg, unsigned len, x86_processor_mode_t mode, x86_access_type_t access_type);\n    void (*read_logical_buf)(conf_object_t *cpu, logical_address_t offs, x86_seg_t seg, unsigned len, void *p, x86_processor_mode_t mode, x86_access_type_t access_type, x86_alignment_t alignment);\n    void (*write_logical)(conf_object_t *cpu, logical_address_t offs, x86_seg_t seg, unsigned len, uint64 val, x86_processor_mode_t mode, x86_access_type_t access_type);\n    void (*write_logical_buf)(conf_object_t *cpu, logical_address_t offs, x86_seg_t seg, unsigned len, const void *p, x86_processor_mode_t mode, x86_access_type_t access_type, x86_alignment_t alignment);\n};"
   ]
  ],
  "s:x86_memory_access_interface_t:read_logical;read_logical_buf;write_logical;write_logical_buf"
 ],
 "struct x86_memory_operation_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_memory_operation_interface {\n    uint64 (*read_logical)(conf_object_t *cpu, x86_seg_t seg, logical_address_t offs, unsigned size, x86_processor_mode_t mode, x86_access_type_t access_type);\n    void (*read_logical_buf)(conf_object_t *cpu, uint8 *dst, x86_seg_t seg, logical_address_t offs, unsigned size, x86_processor_mode_t mode, x86_access_type_t access_type);\n    void (*write_logical)(conf_object_t *cpu, uint64 val, x86_seg_t seg, logical_address_t offs, unsigned size, x86_processor_mode_t mode, x86_access_type_t access_type);\n    void (*write_logical_buf)(conf_object_t *cpu, const uint8 *src, x86_seg_t seg, logical_address_t offs, unsigned size, x86_processor_mode_t mode, x86_access_type_t access_type);\n    x86_read_physical_ret_t (*read_physical)(conf_object_t *cpu, physical_address_t address, unsigned size, x86_access_type_t access_type);\n    exception_type_t (*read_physical_buf)(conf_object_t *cpu, uint8 *dst, physical_address_t address, unsigned size, x86_access_type_t access_type);\n    exception_type_t (*write_physical)(conf_object_t *cpu, uint64 val, physical_address_t address, unsigned size, x86_access_type_t access_type);\n    exception_type_t (*write_physical_buf)(conf_object_t *cpu, const uint8 *src, physical_address_t address, unsigned size, x86_access_type_t access_type);\n};"
   ]
  ],
  "s:x86_memory_operation_interface_t:read_logical;read_logical_buf;write_logical;write_logical_buf;read_physical;read_physical_buf;write_physical;write_physical_buf"
 ],
 "struct x86_memory_query_interface": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_memory_query_interface {\n    linear_address_t (*linear_address)(conf_object_t *cpu, memory_handle_t *handle);\n    x86_seg_t (*segment)(conf_object_t *cpu, memory_handle_t *handle);\n    x86_access_type_t (*access_type)(conf_object_t *obj, memory_handle_t *handle);\n    x86_memory_type_t (*memory_type)(conf_object_t *obj, memory_handle_t *handle);\n};"
   ]
  ],
  "s:x86_memory_query_interface_t:linear_address;segment;access_type;memory_type"
 ],
 "struct x86_memory_transaction": [
  "arch/x86-memop.h",
  "arch/x86-memop.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_memory_transaction {\n    generic_transaction_t s;\n    linear_address_t linear_address;\n    physical_address_t guest_physical_address;\n    uint16 segnum;\n    uint16 access_linear : 1;\n    uint16 io : 1;\n    uint16 fault_as_if_write : 1;\n    uint16 guest_phys_valid : 1;\n    processor_mode_t mode;\n    x86_access_type_t access_type;\n    x86_memory_type_t pat_type;\n    x86_memory_type_t mtrr_type;\n    x86_memory_type_t effective_type;\n    int sequence_number;\n};"
   ]
  ],
  "s:x86_memory_transaction_t:s;linear_address;guest_physical_address;segnum;access_linear;io;fault_as_if_write;guest_phys_valid;mode;access_type;pat_type;mtrr_type;effective_type;sequence_number"
 ],
 "struct x86_msr_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_msr_interface {\n    void (*register_handlers)(conf_object_t *cpu, int64 number, x86_msr_getter_func_t getter, lang_void *getter_data, x86_msr_setter_func_t setter, lang_void *setter_data, const char *name);\n    void (*unregister_handlers)(conf_object_t *cpu, int64 number);\n    x86_msr_getter_ret_t (*get)(conf_object_t *cpu, int64 number, x86_msr_access_type_t type);\n    x86_msr_ret_t (*set)(conf_object_t *cpu, int64 number, uint64 value, x86_msr_access_type_t type);\n    const char *(*get_name)(conf_object_t *cpu, int64 number);\n    int64 (*get_number)(conf_object_t *cpu, const char *name);\n    attr_value_t (*get_all_valid_numbers)(conf_object_t *cpu);\n};"
   ]
  ],
  "s:x86_msr_interface_t:register_handlers;unregister_handlers;get;set;get_name;get_number;get_all_valid_numbers"
 ],
 "struct x86_pkg_cstate_interface": [
  "devs/x86-cstate-iface.h",
  "devs/x86-cstate-iface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_pkg_cstate_interface {\n    x86_cstate_t (*get_pkg_cstate)(conf_object_t *cpu_obj);\n    void (*set_pkg_cstate)(conf_object_t *cpu_obj, uint32 state, uint32 sub_state);\n    void (*pkg_cstate_update)(conf_object_t *cpu_obj, bool notify);\n};"
   ]
  ],
  "s:x86_pkg_cstate_interface_t:get_pkg_cstate;set_pkg_cstate;pkg_cstate_update"
 ],
 "struct x86_reg_access_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_reg_access_interface {\n    uint64 (*get_gpr)(conf_object_t *cpu, unsigned index);\n    void (*set_gpr)(conf_object_t *cpu, unsigned index, uint64 val);\n    uint64 (*get_rip)(conf_object_t *cpu);\n    void (*set_rip)(conf_object_t *cpu, uint64 rip);\n    uint64 (*get_rflags)(conf_object_t *cpu);\n    void (*set_rflags)(conf_object_t *cpu, uint64 rflags);\n    void (*set_status_flags)(conf_object_t *cpu, uint16 flags);\n    x86_seg_reg_t (*get_seg)(conf_object_t *cpu, x86_seg_t n);\n    void (*set_seg)(conf_object_t *cpu, x86_seg_t n, x86_seg_reg_t seg);\n    x86_system_seg_reg_t (*get_system_seg)(conf_object_t *cpu, x86_system_seg_t n);\n    void (*set_system_seg)(conf_object_t *cpu, x86_system_seg_t n, x86_system_seg_reg_t seg);\n    uint64 (*get_cr)(conf_object_t *cpu, x86_cr_t n);\n    void (*set_cr)(conf_object_t *cpu, x86_cr_t n, uint64 val);\n    uint64 (*get_efer)(conf_object_t *cpu);\n    void (*set_efer)(conf_object_t *cpu, uint64 efer);\n    uint64 (*get_xcr)(conf_object_t *cpu, x86_xcr_t n);\n    void (*set_xcr)(conf_object_t *cpu, x86_xcr_t n, uint64 val);\n    x86_fpu_reg_t (*get_freg)(conf_object_t *cpu, unsigned index);\n    void (*set_freg)(conf_object_t *cpu, unsigned index, x86_fpu_reg_t freg);\n    x86_fpu_env_t (*get_fpu_env)(conf_object_t *cpu);\n    void (*set_fpu_env)(conf_object_t *cpu, x86_fpu_env_t state);\n    xmm_reg_t (*get_xmm)(conf_object_t *cpu, unsigned index);\n    void (*set_xmm)(conf_object_t *cpu, unsigned index, xmm_reg_t val);\n    ymm_reg_t (*get_ymm)(conf_object_t *cpu, unsigned index);\n    void (*set_ymm)(conf_object_t *cpu, unsigned index, ymm_reg_t val);\n    uint32 (*get_mxcsr)(conf_object_t *cpu);\n    void (*set_mxcsr)(conf_object_t *cpu, uint32 mxcsr);\n    uint64 (*get_dr)(conf_object_t *cpu, x86_dr_t n);\n    void (*set_dr)(conf_object_t *cpu, x86_dr_t n, uint64 val);\n    bool (*get_in_smm)(conf_object_t *cpu);\n    void (*set_in_smm)(conf_object_t *cpu, bool val);\n    uint64 (*get_smm_base)(conf_object_t *cpu);\n    void (*set_smm_base)(conf_object_t *cpu, uint64 val);\n    x86_monitor_info_t (*get_monitor_info)(conf_object_t *cpu);\n    void (*set_monitor_info)(conf_object_t *cpu, x86_monitor_info_t val);\n    x86_mwait_info_t (*get_mwait_info)(conf_object_t *cpu);\n    void (*set_mwait_info)(conf_object_t *cpu, x86_mwait_info_t val);\n    x86_activity_t (*get_activity_state)(conf_object_t *cpu);\n    void (*set_activity_state)(conf_object_t *cpu, x86_activity_t val);\n    x86_intstate_t (*get_interruptibility_state)(conf_object_t *cpu);\n    void (*set_interruptibility_state)(conf_object_t *cpu, x86_intstate_t val);\n    x86_pending_debug_exc_t (*get_pending_debug_exc)(conf_object_t *cpu);\n    void (*set_pending_debug_exc)(conf_object_t *cpu, x86_pending_debug_exc_t val);\n    x86_xmode_info_t (*get_xmode_info)(conf_object_t *cpu);\n    x86_exec_mode_t (*get_exec_mode)(conf_object_t *cpu);\n    uint32 (*get_mxcsr_mask)(conf_object_t *cpu);\n    uint64 (*get_ext_state_dirty_bits)(conf_object_t *cpu);\n    void (*or_ext_state_dirty_bits)(conf_object_t *cpu, uint64 dirty_bits);\n    void (*and_ext_state_dirty_bits)(conf_object_t *cpu, uint64 dirty_bits);\n    uint64 (*get_pdpte)(conf_object_t *cpu, int num);\n    void (*set_pdpte)(conf_object_t *cpu, int num, uint64 val);\n    uint32 (*get_vmx_mode)(conf_object_t *cpu);\n};"
   ]
  ],
  "s:x86_reg_access_interface_t:get_gpr;set_gpr;get_rip;set_rip;get_rflags;set_rflags;set_status_flags;get_seg;set_seg;get_system_seg;set_system_seg;get_cr;set_cr;get_efer;set_efer;get_xcr;set_xcr;get_freg;set_freg;get_fpu_env;set_fpu_env;get_xmm;set_xmm;get_ymm;set_ymm;get_mxcsr;set_mxcsr;get_dr;set_dr;get_in_smm;set_in_smm;get_smm_base;set_smm_base;get_monitor_info;set_monitor_info;get_mwait_info;set_mwait_info;get_activity_state;set_activity_state;get_interruptibility_state;set_interruptibility_state;get_pending_debug_exc;set_pending_debug_exc;get_xmode_info;get_exec_mode;get_mxcsr_mask;get_ext_state_dirty_bits;or_ext_state_dirty_bits;and_ext_state_dirty_bits;get_pdpte;set_pdpte;get_vmx_mode"
 ],
 "struct x86_smm_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_smm_interface {\n    void (*save_state)(conf_object_t *obj, conf_object_t *cpu);\n    void (*restore_state)(conf_object_t *obj, conf_object_t *cpu);\n};"
   ]
  ],
  "s:x86_smm_interface_t:save_state;restore_state"
 ],
 "struct x86_smm_state_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_smm_state_interface {\n    void (*get_state)(conf_object_t *cpu, smm_reg_state_t *state);\n    void (*set_state)(conf_object_t *cpu, const smm_reg_state_t *state);\n    uint64 (*smram_read)(conf_object_t *obj, unsigned smram_offs, unsigned len);\n    void (*smram_write)(conf_object_t *obj, unsigned smram_offs, unsigned len, uint64 val);\n};"
   ]
  ],
  "s:x86_smm_state_interface_t:get_state;set_state;smram_read;smram_write"
 ],
 "struct x86_tlb_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_tlb_interface {\n    void (*flush_all)(conf_object_t *obj, int keep_global_entries);\n    void (*flush_page)(conf_object_t *obj, linear_address_t laddr);\n    int (*lookup)(conf_object_t *obj, x86_memory_transaction_t *mem_tr);\n    void (*add)(conf_object_t *obj, processor_mode_t mode, read_or_write_t read_or_write, data_or_instr_t data_or_instr, int global_page, x86_memory_type_t pat_type, x86_memory_type_t mtrr_type, linear_address_t laddr, physical_address_t paddr, int page_size);\n    tagged_physical_address_t (*itlb_lookup)(conf_object_t *obj, linear_address_t laddr, processor_mode_t mode);\n    void (*set_pae_mode)(conf_object_t *obj, bool pae_mode);\n};"
   ]
  ],
  "s:x86_tlb_interface_t:flush_all;flush_page;lookup;add;itlb_lookup;set_pae_mode"
 ],
 "struct x86_tlb_v2_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_tlb_v2_interface {\n    void (*flush_all)(conf_object_t *obj, int keep_global_entries);\n    void (*flush_page)(conf_object_t *obj, linear_address_t laddr);\n    const x86_tlb_entry_t *(*lookup)(conf_object_t *obj, x86_memory_transaction_t *mem_tr);\n    void (*add)(conf_object_t *obj, linear_address_t laddr, physical_address_t paddr, x86_tlb_attrs_t attrs);\n    tagged_physical_address_t (*itlb_lookup)(conf_object_t *obj, linear_address_t laddr, processor_mode_t mode);\n};"
   ]
  ],
  "s:x86_tlb_v2_interface_t:flush_all;flush_page;lookup;add;itlb_lookup"
 ],
 "struct x86_tlb_v3_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_tlb_v3_interface {\n    void (*add)(conf_object_t *obj, uint64 hint, linear_address_t laddr, physical_address_t paddr, x86_tlb_attrs_v3_t attrs);\n    const x86_tlb_entry_v3_t *(*lookup)(conf_object_t *obj, uint64 hint, x86_memory_transaction_t *mem_tr);\n    tagged_physical_address_t (*itlb_lookup)(conf_object_t *obj, uint64 hint, linear_address_t laddr, processor_mode_t mode);\n    void (*invalidate_page)(conf_object_t *obj, uint64 hint, linear_address_t laddr);\n    void (*invalidate)(conf_object_t *obj, uint32 type, uint64 hint, linear_address_t la);\n};"
   ]
  ],
  "s:x86_tlb_v3_interface_t:add;lookup;itlb_lookup;invalidate_page;invalidate"
 ],
 "struct x86_vmp_control_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct x86_vmp_control_interface {\n    unsigned (*get_block_count)(conf_object_t *cpu);\n    void (*set_block_count)(conf_object_t *cpu, unsigned cnt);\n};"
   ]
  ],
  "s:x86_vmp_control_interface_t:get_block_count;set_block_count"
 ],
 "struct xed_access_interface": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xed_access_interface {\n    int (*get_last)(conf_object_t *obj, xed_data_type_t type);\n    int (*decode)(conf_object_t *obj, xed_data_type_t type, bytes_t bytes);\n    const char *(*to_string)(conf_object_t *obj, xed_data_type_t type, int value);\n};"
   ]
  ],
  "s:xed_access_interface_t:get_last;decode;to_string"
 ],
 "struct xtensa_export_state_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_export_state_interface {\n    void (*register_export_state)(conf_object_t *obj, lang_void *user_object, lang_void *export_state_func);\n};"
   ]
  ],
  "s:xtensa_export_state_interface_t:register_export_state"
 ],
 "struct xtensa_import_wire_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_import_wire_interface {\n    void (*register_import_wire)(conf_object_t *obj, lang_void *user_object, lang_void *import_wire_func);\n};"
   ]
  ],
  "s:xtensa_import_wire_interface_t:register_import_wire"
 ],
 "struct xtensa_input_queue_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_input_queue_interface {\n    void (*register_input_queue)(conf_object_t *obj, lang_void *user_object, lang_void *empty_callback, lang_void *data_callback);\n};"
   ]
  ],
  "s:xtensa_input_queue_interface_t:register_input_queue"
 ],
 "struct xtensa_internal_memories_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_internal_memories_interface {\n    attr_value_t (*iram_mappings)(conf_object_t *obj);\n    attr_value_t (*irom_mappings)(conf_object_t *obj);\n    attr_value_t (*dram_mappings)(conf_object_t *obj);\n    attr_value_t (*drom_mappings)(conf_object_t *obj);\n};"
   ]
  ],
  "s:xtensa_internal_memories_interface_t:iram_mappings;irom_mappings;dram_mappings;drom_mappings"
 ],
 "struct xtensa_lookup_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_lookup_interface {\n    void (*register_lookup)(conf_object_t *obj, lang_void *user_object, lang_void *lookup_func);\n};"
   ]
  ],
  "s:xtensa_lookup_interface_t:register_lookup"
 ],
 "struct xtensa_memory_transaction": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_memory_transaction {\n    generic_transaction_t s;\n};"
   ]
  ],
  "s:xtensa_memory_transaction_t:s"
 ],
 "struct xtensa_mpu_lookup": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_mpu_lookup {\n    bool background;\n    uint16 region;\n    uint32 start;\n    uint32 end;\n    bool sr;\n    bool sw;\n    bool sx;\n    bool ur;\n    bool uw;\n    bool ux;\n};"
   ]
  ],
  "s:xtensa_mpu_lookup_t:background;region;start;end;sr;sw;sx;ur;uw;ux"
 ],
 "struct xtensa_mpu_lookup_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_mpu_lookup_interface {\n    xtensa_mpu_lookup_t (*mpu_region)(conf_object_t *obj, uint32 address);\n};"
   ]
  ],
  "s:xtensa_mpu_lookup_interface_t:mpu_region"
 ],
 "struct xtensa_output_queue_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_output_queue_interface {\n    void (*register_output_queue)(conf_object_t *obj, lang_void *user_object, lang_void *full_callback, lang_void *data_callback);\n};"
   ]
  ],
  "s:xtensa_output_queue_interface_t:register_output_queue"
 ],
 "struct xtensa_tie_export_state_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_tie_export_state_interface {\n    void (*data)(conf_object_t *obj, uint32 bit_width, const uint32 *out_data);\n};"
   ]
  ],
  "s:xtensa_tie_export_state_interface_t:data"
 ],
 "struct xtensa_tie_import_wire_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_tie_import_wire_interface {\n    void (*data)(conf_object_t *obj, uint32 bit_width, uint32 *in_data);\n};"
   ]
  ],
  "s:xtensa_tie_import_wire_interface_t:data"
 ],
 "struct xtensa_tie_input_queue_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_tie_input_queue_interface {\n    bool (*empty)(conf_object_t *obj);\n    void (*data)(conf_object_t *obj, uint32 bit_width, bool is_peek, uint32 *in_data);\n};"
   ]
  ],
  "s:xtensa_tie_input_queue_interface_t:empty;data"
 ],
 "struct xtensa_tie_lookup_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_tie_lookup_interface {\n    void (*data)(conf_object_t *obj, uint32 out_width, const uint32 *out_data, uint32 in_width, uint32 *in_data);\n};"
   ]
  ],
  "s:xtensa_tie_lookup_interface_t:data"
 ],
 "struct xtensa_tie_output_queue_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_tie_output_queue_interface {\n    bool (*full)(conf_object_t *obj);\n    void (*data)(conf_object_t *obj, uint32 bit_width, bool reserve_only, const uint32 *out_data);\n};"
   ]
  ],
  "s:xtensa_tie_output_queue_interface_t:full;data"
 ],
 "struct xtensa_wwdt_config_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_wwdt_config_interface {\n    bool (*has_wwdt)(conf_object_t *obj);\n    uint32 (*reset_val)(conf_object_t *obj);\n    uint32 (*hb_reset_val)(conf_object_t *obj);\n    uint32 (*ikey)(conf_object_t *obj);\n    uint32 (*bkey)(conf_object_t *obj);\n    uint32 (*rkey)(conf_object_t *obj);\n    uint32 (*kkey)(conf_object_t *obj);\n    uint32 (*ekey)(conf_object_t *obj);\n    uint32 (*c1key)(conf_object_t *obj);\n    uint32 (*c2key)(conf_object_t *obj);\n    uint32 (*t1key)(conf_object_t *obj);\n    uint32 (*t2key)(conf_object_t *obj);\n};"
   ]
  ],
  "s:xtensa_wwdt_config_interface_t:has_wwdt;reset_val;hb_reset_val;ikey;bkey;rkey;kkey;ekey;c1key;c2key;t1key;t2key"
 ],
 "struct xtensa_wwdt_faultinfo_interface": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "struct xtensa_wwdt_faultinfo_interface {\n    uint8 (*status)(conf_object_t *obj);\n};"
   ]
  ],
  "s:xtensa_wwdt_faultinfo_interface_t:status"
 ],
 "swab32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 swab32(uint32 x);"
   ]
  ],
  "f"
 ],
 "swab64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 swab64(uint64 x);"
   ]
  ],
  "f"
 ],
 "swap_mode_t": [
  "base/memory.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum swap_mode {\n    Sim_Swap_None      = 0,\n    Sim_Swap_Bus       = 1,\n    Sim_Swap_Bus_Trans = 2,\n    Sim_Swap_Trans     = 3\n} swap_mode_t;"
   ]
  ],
  "e:swap_mode_t:Sim_Swap_None;Sim_Swap_Bus;Sim_Swap_Bus_Trans;Sim_Swap_Trans"
 ],
 "synchronous_mode_interface_t": [
  "model-iface/co-execute.h",
  "model-iface/co-execute.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct synchronous_mode_interface {\n    int (*enter)(conf_object_t *NOTNULL obj);\n    int (*leave)(conf_object_t *NOTNULL obj);\n} synchronous_mode_interface_t;"
   ]
  ],
  "s:synchronous_mode_interface_t:enter;leave"
 ],
 "table_interface_t": [
  "simulator-iface/table.h",
  "simulator-iface/table.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct table_interface {\n    attr_value_t (*data)(conf_object_t *obj);\n    attr_value_t (*properties)(conf_object_t *obj);\n} table_interface_t;"
   ]
  ],
  "s:table_interface_t:data;properties"
 ],
 "table_key_t": [
  "simulator-iface/table.h",
  "simulator-iface/table.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Table_Key_Name                 = 1,\n    Table_Key_Description,\n    Table_Key_Default_Sort_Column,\n    Table_Key_Columns,\n    Table_Key_Extra_Headers,\n    Table_Key_Stream_Header_Repeat\n} table_key_t;"
   ]
  ],
  "e:table_key_t:Table_Key_Name;Table_Key_Description;Table_Key_Default_Sort_Column;Table_Key_Columns;Table_Key_Extra_Headers;Table_Key_Stream_Header_Repeat"
 ],
 "tagged_linear_address_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    bool valid;\n    linear_address_t addr;\n} tagged_linear_address_t;"
   ]
  ],
  "s:tagged_linear_address_t:valid;addr"
 ],
 "tagged_physical_address_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    int valid;\n    physical_address_t paddr;\n} tagged_physical_address_t;"
   ]
  ],
  "s:tagged_physical_address_t:valid;paddr"
 ],
 "tcf_channel_interface_t": [
  "simulator/control.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct tcf_channel_interface {\n    attr_value_t (*start_channel)(conf_object_t *NOTNULL obj, const char *NOTNULL url);\n} tcf_channel_interface_t;"
   ]
  ],
  "s:tcf_channel_interface_t:start_channel"
 ],
 "telemetry_class_id_t": [
  "devs/telemetry-interface.h",
  "devs/telemetry-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int telemetry_class_id_t;"
   ]
  ],
  "t"
 ],
 "telemetry_id_t": [
  "devs/telemetry-interface.h",
  "devs/telemetry-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef int telemetry_id_t;"
   ]
  ],
  "t"
 ],
 "telemetry_interface_t": [
  "devs/telemetry-interface.h",
  "devs/telemetry-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct telemetry_interface {\n    telemetry_class_id_t (*get_telemetry_class_id)(conf_object_t *obj, const char *telemetry_class_name);\n    const char *(*get_telemetry_class_name)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id);\n    const char *(*get_telemetry_class_description)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id);\n    telemetry_id_t (*get_telemetry_id)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id, const char *telemetry_name);\n    const char *(*get_telemetry_name)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id, telemetry_id_t telemetry_id);\n    const char *(*get_telemetry_description)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id, telemetry_id_t telemetry_id);\n    attr_value_t (*get_value)(conf_object_t *obj, telemetry_class_id_t telemetry_class_id, telemetry_id_t telemetry_id);\n} telemetry_interface_t;"
   ]
  ],
  "s:telemetry_interface_t:get_telemetry_class_id;get_telemetry_class_name;get_telemetry_class_description;get_telemetry_id;get_telemetry_name;get_telemetry_description;get_value"
 ],
 "telemetry_manager_interface_t": [
  "simulator/callbacks.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct telemetry_manager_interface {\n    void (*add_data)(conf_object_t *obj, const char *group, const char *key, attr_value_t *value);\n} telemetry_manager_interface_t;"
   ]
  ],
  "s:telemetry_manager_interface_t:add_data"
 ],
 "telnet_connection_v2_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct telnet_connection_v2_interface {\n    bool (*listening)(conf_object_t *NOTNULL obj);\n    bool (*connected)(conf_object_t *NOTNULL obj);\n    void (*disconnect)(conf_object_t *NOTNULL obj);\n} telnet_connection_v2_interface_t;"
   ]
  ],
  "s:telnet_connection_v2_interface_t:listening;connected;disconnect"
 ],
 "temporal_state_interface_t": [
  "model-iface/temporal-state.h",
  "model-iface/temporal-state.h",
  [
   [
    [
     "6"
    ],
    "typedef struct temporal_state_interface {\n    lang_void *(*save)(conf_object_t *obj);\n    void (*merge)(conf_object_t *obj, lang_void *prev, lang_void *killed);\n    void (*prepare_restore)(conf_object_t *obj);\n    void (*finish_restore)(conf_object_t *obj, lang_void *state);\n} temporal_state_interface_t;"
   ],
   [
    [
     "7"
    ],
    null
   ]
  ],
  "s:temporal_state_interface_t:save;merge;prepare_restore;finish_restore"
 ],
 "terminal_client_interface_t": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct terminal_client_interface {\n    void (*write)(conf_object_t *obj, int id, const char *str);\n    void (*disconnect)(conf_object_t *obj, int id);\n} terminal_client_interface_t;"
   ]
  ],
  "s:terminal_client_interface_t:write;disconnect"
 ],
 "terminal_server_interface_t": [
  "simulator/cmd-line.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct terminal_server_interface {\n    void (*write)(conf_object_t *obj, const char *NOTNULL str);\n    void (*set_size)(conf_object_t *obj, int left, int right);\n    void (*disconnect)(conf_object_t *obj);\n} terminal_server_interface_t;"
   ]
  ],
  "s:terminal_server_interface_t:write;set_size;disconnect"
 ],
 "text_console_attrib_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint8 attrib;\n    uint16 fg;\n    uint16 bg;\n} text_console_attrib_t;"
   ]
  ],
  "s:text_console_attrib_t:attrib;fg;bg"
 ],
 "text_console_backend_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct text_console_backend_interface {\n    void (*input)(conf_object_t *NOTNULL obj, text_console_key_t key, text_console_modifier_t modifiers);\n    void (*request_refresh)(conf_object_t *NOTNULL obj);\n    void (*set_visible)(conf_object_t *NOTNULL obj, bool visible);\n    int (*line_length)(conf_object_t *NOTNULL obj, int line_num);\n    bool (*line_wrap)(conf_object_t *NOTNULL obj, int line_num);\n    void (*set_size)(conf_object_t *NOTNULL obj, int width, int height);\n    void (*set_default_colours)(conf_object_t *NOTNULL obj, uint32 default_fg_col, uint32 default_bg_col);\n} text_console_backend_interface_t;"
   ]
  ],
  "s:text_console_backend_interface_t:input;request_refresh;set_visible;line_length;line_wrap;set_size;set_default_colours"
 ],
 "text_console_colour_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Text_Console_Colour_Black              = 0,\n    Text_Console_Colour_Red                = 1,\n    Text_Console_Colour_Green              = 2,\n    Text_Console_Colour_Yellow             = 3,\n    Text_Console_Colour_Blue               = 4,\n    Text_Console_Colour_Magenta            = 5,\n    Text_Console_Colour_Cyan               = 6,\n    Text_Console_Colour_White              = 7,\n    Text_Console_Colour_Black_Bright       = 8,\n    Text_Console_Colour_Red_Bright         = 9,\n    Text_Console_Colour_Green_Bright       = 10,\n    Text_Console_Colour_Yellow_Bright      = 11,\n    Text_Console_Colour_Blue_Bright        = 12,\n    Text_Console_Colour_Magenta_Bright     = 13,\n    Text_Console_Colour_Cyan_Bright        = 14,\n    Text_Console_Colour_White_Bright       = 15,\n    Text_Console_Colour_Cube_16            = 16,\n    Text_Console_Colour_Cube_17            = 17,\n    Text_Console_Colour_Cube_18            = 18,\n    Text_Console_Colour_Cube_19            = 19,\n    Text_Console_Colour_Cube_20            = 20,\n    Text_Console_Colour_Cube_21            = 21,\n    Text_Console_Colour_Cube_22            = 22,\n    Text_Console_Colour_Cube_23            = 23,\n    Text_Console_Colour_Cube_24            = 24,\n    Text_Console_Colour_Cube_25            = 25,\n    Text_Console_Colour_Cube_26            = 26,\n    Text_Console_Colour_Cube_27            = 27,\n    Text_Console_Colour_Cube_28            = 28,\n    Text_Console_Colour_Cube_29            = 29,\n    Text_Console_Colour_Cube_30            = 30,\n    Text_Console_Colour_Cube_31            = 31,\n    Text_Console_Colour_Cube_32            = 32,\n    Text_Console_Colour_Cube_33            = 33,\n    Text_Console_Colour_Cube_34            = 34,\n    Text_Console_Colour_Cube_35            = 35,\n    Text_Console_Colour_Cube_36            = 36,\n    Text_Console_Colour_Cube_37            = 37,\n    Text_Console_Colour_Cube_38            = 38,\n    Text_Console_Colour_Cube_39            = 39,\n    Text_Console_Colour_Cube_40            = 40,\n    Text_Console_Colour_Cube_41            = 41,\n    Text_Console_Colour_Cube_42            = 42,\n    Text_Console_Colour_Cube_43            = 43,\n    Text_Console_Colour_Cube_44            = 44,\n    Text_Console_Colour_Cube_45            = 45,\n    Text_Console_Colour_Cube_46            = 46,\n    Text_Console_Colour_Cube_47            = 47,\n    Text_Console_Colour_Cube_48            = 48,\n    Text_Console_Colour_Cube_49            = 49,\n    Text_Console_Colour_Cube_50            = 50,\n    Text_Console_Colour_Cube_51            = 51,\n    Text_Console_Colour_Cube_52            = 52,\n    Text_Console_Colour_Cube_53            = 53,\n    Text_Console_Colour_Cube_54            = 54,\n    Text_Console_Colour_Cube_55            = 55,\n    Text_Console_Colour_Cube_56            = 56,\n    Text_Console_Colour_Cube_57            = 57,\n    Text_Console_Colour_Cube_58            = 58,\n    Text_Console_Colour_Cube_59            = 59,\n    Text_Console_Colour_Cube_60            = 60,\n    Text_Console_Colour_Cube_61            = 61,\n    Text_Console_Colour_Cube_62            = 62,\n    Text_Console_Colour_Cube_63            = 63,\n    Text_Console_Colour_Cube_64            = 64,\n    Text_Console_Colour_Cube_65            = 65,\n    Text_Console_Colour_Cube_66            = 66,\n    Text_Console_Colour_Cube_67            = 67,\n    Text_Console_Colour_Cube_68            = 68,\n    Text_Console_Colour_Cube_69            = 69,\n    Text_Console_Colour_Cube_70            = 70,\n    Text_Console_Colour_Cube_71            = 71,\n    Text_Console_Colour_Cube_72            = 72,\n    Text_Console_Colour_Cube_73            = 73,\n    Text_Console_Colour_Cube_74            = 74,\n    Text_Console_Colour_Cube_75            = 75,\n    Text_Console_Colour_Cube_76            = 76,\n    Text_Console_Colour_Cube_77            = 77,\n    Text_Console_Colour_Cube_78            = 78,\n    Text_Console_Colour_Cube_79            = 79,\n    Text_Console_Colour_Cube_80            = 80,\n    Text_Console_Colour_Cube_81            = 81,\n    Text_Console_Colour_Cube_82            = 82,\n    Text_Console_Colour_Cube_83            = 83,\n    Text_Console_Colour_Cube_84            = 84,\n    Text_Console_Colour_Cube_85            = 85,\n    Text_Console_Colour_Cube_86            = 86,\n    Text_Console_Colour_Cube_87            = 87,\n    Text_Console_Colour_Cube_88            = 88,\n    Text_Console_Colour_Cube_89            = 89,\n    Text_Console_Colour_Cube_90            = 90,\n    Text_Console_Colour_Cube_91            = 91,\n    Text_Console_Colour_Cube_92            = 92,\n    Text_Console_Colour_Cube_93            = 93,\n    Text_Console_Colour_Cube_94            = 94,\n    Text_Console_Colour_Cube_95            = 95,\n    Text_Console_Colour_Cube_96            = 96,\n    Text_Console_Colour_Cube_97            = 97,\n    Text_Console_Colour_Cube_98            = 98,\n    Text_Console_Colour_Cube_99            = 99,\n    Text_Console_Colour_Cube_100           = 100,\n    Text_Console_Colour_Cube_101           = 101,\n    Text_Console_Colour_Cube_102           = 102,\n    Text_Console_Colour_Cube_103           = 103,\n    Text_Console_Colour_Cube_104           = 104,\n    Text_Console_Colour_Cube_105           = 105,\n    Text_Console_Colour_Cube_106           = 106,\n    Text_Console_Colour_Cube_107           = 107,\n    Text_Console_Colour_Cube_108           = 108,\n    Text_Console_Colour_Cube_109           = 109,\n    Text_Console_Colour_Cube_110           = 110,\n    Text_Console_Colour_Cube_111           = 111,\n    Text_Console_Colour_Cube_112           = 112,\n    Text_Console_Colour_Cube_113           = 113,\n    Text_Console_Colour_Cube_114           = 114,\n    Text_Console_Colour_Cube_115           = 115,\n    Text_Console_Colour_Cube_116           = 116,\n    Text_Console_Colour_Cube_117           = 117,\n    Text_Console_Colour_Cube_118           = 118,\n    Text_Console_Colour_Cube_119           = 119,\n    Text_Console_Colour_Cube_120           = 120,\n    Text_Console_Colour_Cube_121           = 121,\n    Text_Console_Colour_Cube_122           = 122,\n    Text_Console_Colour_Cube_123           = 123,\n    Text_Console_Colour_Cube_124           = 124,\n    Text_Console_Colour_Cube_125           = 125,\n    Text_Console_Colour_Cube_126           = 126,\n    Text_Console_Colour_Cube_127           = 127,\n    Text_Console_Colour_Cube_128           = 128,\n    Text_Console_Colour_Cube_129           = 129,\n    Text_Console_Colour_Cube_130           = 130,\n    Text_Console_Colour_Cube_131           = 131,\n    Text_Console_Colour_Cube_132           = 132,\n    Text_Console_Colour_Cube_133           = 133,\n    Text_Console_Colour_Cube_134           = 134,\n    Text_Console_Colour_Cube_135           = 135,\n    Text_Console_Colour_Cube_136           = 136,\n    Text_Console_Colour_Cube_137           = 137,\n    Text_Console_Colour_Cube_138           = 138,\n    Text_Console_Colour_Cube_139           = 139,\n    Text_Console_Colour_Cube_140           = 140,\n    Text_Console_Colour_Cube_141           = 141,\n    Text_Console_Colour_Cube_142           = 142,\n    Text_Console_Colour_Cube_143           = 143,\n    Text_Console_Colour_Cube_144           = 144,\n    Text_Console_Colour_Cube_145           = 145,\n    Text_Console_Colour_Cube_146           = 146,\n    Text_Console_Colour_Cube_147           = 147,\n    Text_Console_Colour_Cube_148           = 148,\n    Text_Console_Colour_Cube_149           = 149,\n    Text_Console_Colour_Cube_150           = 150,\n    Text_Console_Colour_Cube_151           = 151,\n    Text_Console_Colour_Cube_152           = 152,\n    Text_Console_Colour_Cube_153           = 153,\n    Text_Console_Colour_Cube_154           = 154,\n    Text_Console_Colour_Cube_155           = 155,\n    Text_Console_Colour_Cube_156           = 156,\n    Text_Console_Colour_Cube_157           = 157,\n    Text_Console_Colour_Cube_158           = 158,\n    Text_Console_Colour_Cube_159           = 159,\n    Text_Console_Colour_Cube_160           = 160,\n    Text_Console_Colour_Cube_161           = 161,\n    Text_Console_Colour_Cube_162           = 162,\n    Text_Console_Colour_Cube_163           = 163,\n    Text_Console_Colour_Cube_164           = 164,\n    Text_Console_Colour_Cube_165           = 165,\n    Text_Console_Colour_Cube_166           = 166,\n    Text_Console_Colour_Cube_167           = 167,\n    Text_Console_Colour_Cube_168           = 168,\n    Text_Console_Colour_Cube_169           = 169,\n    Text_Console_Colour_Cube_170           = 170,\n    Text_Console_Colour_Cube_171           = 171,\n    Text_Console_Colour_Cube_172           = 172,\n    Text_Console_Colour_Cube_173           = 173,\n    Text_Console_Colour_Cube_174           = 174,\n    Text_Console_Colour_Cube_175           = 175,\n    Text_Console_Colour_Cube_176           = 176,\n    Text_Console_Colour_Cube_177           = 177,\n    Text_Console_Colour_Cube_178           = 178,\n    Text_Console_Colour_Cube_179           = 179,\n    Text_Console_Colour_Cube_180           = 180,\n    Text_Console_Colour_Cube_181           = 181,\n    Text_Console_Colour_Cube_182           = 182,\n    Text_Console_Colour_Cube_183           = 183,\n    Text_Console_Colour_Cube_184           = 184,\n    Text_Console_Colour_Cube_185           = 185,\n    Text_Console_Colour_Cube_186           = 186,\n    Text_Console_Colour_Cube_187           = 187,\n    Text_Console_Colour_Cube_188           = 188,\n    Text_Console_Colour_Cube_189           = 189,\n    Text_Console_Colour_Cube_190           = 190,\n    Text_Console_Colour_Cube_191           = 191,\n    Text_Console_Colour_Cube_192           = 192,\n    Text_Console_Colour_Cube_193           = 193,\n    Text_Console_Colour_Cube_194           = 194,\n    Text_Console_Colour_Cube_195           = 195,\n    Text_Console_Colour_Cube_196           = 196,\n    Text_Console_Colour_Cube_197           = 197,\n    Text_Console_Colour_Cube_198           = 198,\n    Text_Console_Colour_Cube_199           = 199,\n    Text_Console_Colour_Cube_200           = 200,\n    Text_Console_Colour_Cube_201           = 201,\n    Text_Console_Colour_Cube_202           = 202,\n    Text_Console_Colour_Cube_203           = 203,\n    Text_Console_Colour_Cube_204           = 204,\n    Text_Console_Colour_Cube_205           = 205,\n    Text_Console_Colour_Cube_206           = 206,\n    Text_Console_Colour_Cube_207           = 207,\n    Text_Console_Colour_Cube_208           = 208,\n    Text_Console_Colour_Cube_209           = 209,\n    Text_Console_Colour_Cube_210           = 210,\n    Text_Console_Colour_Cube_211           = 211,\n    Text_Console_Colour_Cube_212           = 212,\n    Text_Console_Colour_Cube_213           = 213,\n    Text_Console_Colour_Cube_214           = 214,\n    Text_Console_Colour_Cube_215           = 215,\n    Text_Console_Colour_Cube_216           = 216,\n    Text_Console_Colour_Cube_217           = 217,\n    Text_Console_Colour_Cube_218           = 218,\n    Text_Console_Colour_Cube_219           = 219,\n    Text_Console_Colour_Cube_220           = 220,\n    Text_Console_Colour_Cube_221           = 221,\n    Text_Console_Colour_Cube_222           = 222,\n    Text_Console_Colour_Cube_223           = 223,\n    Text_Console_Colour_Cube_224           = 224,\n    Text_Console_Colour_Cube_225           = 225,\n    Text_Console_Colour_Cube_226           = 226,\n    Text_Console_Colour_Cube_227           = 227,\n    Text_Console_Colour_Cube_228           = 228,\n    Text_Console_Colour_Cube_229           = 229,\n    Text_Console_Colour_Cube_230           = 230,\n    Text_Console_Colour_Cube_231           = 231,\n    Text_Console_Colour_Grey_232           = 232,\n    Text_Console_Colour_Grey_233           = 233,\n    Text_Console_Colour_Grey_234           = 234,\n    Text_Console_Colour_Grey_235           = 235,\n    Text_Console_Colour_Grey_236           = 236,\n    Text_Console_Colour_Grey_237           = 237,\n    Text_Console_Colour_Grey_238           = 238,\n    Text_Console_Colour_Grey_239           = 239,\n    Text_Console_Colour_Grey_240           = 240,\n    Text_Console_Colour_Grey_241           = 241,\n    Text_Console_Colour_Grey_242           = 242,\n    Text_Console_Colour_Grey_243           = 243,\n    Text_Console_Colour_Grey_244           = 244,\n    Text_Console_Colour_Grey_245           = 245,\n    Text_Console_Colour_Grey_246           = 246,\n    Text_Console_Colour_Grey_247           = 247,\n    Text_Console_Colour_Grey_248           = 248,\n    Text_Console_Colour_Grey_249           = 249,\n    Text_Console_Colour_Grey_250           = 250,\n    Text_Console_Colour_Grey_251           = 251,\n    Text_Console_Colour_Grey_252           = 252,\n    Text_Console_Colour_Grey_253           = 253,\n    Text_Console_Colour_Grey_254           = 254,\n    Text_Console_Colour_Grey_255           = 255,\n    Text_Console_Colour_Default_Foreground = 256,\n    Text_Console_Colour_Default_Background = 257\n} text_console_colour_t;"
   ]
  ],
  "e:text_console_colour_t:Text_Console_Colour_Black;Text_Console_Colour_Red;Text_Console_Colour_Green;Text_Console_Colour_Yellow;Text_Console_Colour_Blue;Text_Console_Colour_Magenta;Text_Console_Colour_Cyan;Text_Console_Colour_White;Text_Console_Colour_Black_Bright;Text_Console_Colour_Red_Bright;Text_Console_Colour_Green_Bright;Text_Console_Colour_Yellow_Bright;Text_Console_Colour_Blue_Bright;Text_Console_Colour_Magenta_Bright;Text_Console_Colour_Cyan_Bright;Text_Console_Colour_White_Bright;Text_Console_Colour_Cube_16;Text_Console_Colour_Cube_17;Text_Console_Colour_Cube_18;Text_Console_Colour_Cube_19;Text_Console_Colour_Cube_20;Text_Console_Colour_Cube_21;Text_Console_Colour_Cube_22;Text_Console_Colour_Cube_23;Text_Console_Colour_Cube_24;Text_Console_Colour_Cube_25;Text_Console_Colour_Cube_26;Text_Console_Colour_Cube_27;Text_Console_Colour_Cube_28;Text_Console_Colour_Cube_29;Text_Console_Colour_Cube_30;Text_Console_Colour_Cube_31;Text_Console_Colour_Cube_32;Text_Console_Colour_Cube_33;Text_Console_Colour_Cube_34;Text_Console_Colour_Cube_35;Text_Console_Colour_Cube_36;Text_Console_Colour_Cube_37;Text_Console_Colour_Cube_38;Text_Console_Colour_Cube_39;Text_Console_Colour_Cube_40;Text_Console_Colour_Cube_41;Text_Console_Colour_Cube_42;Text_Console_Colour_Cube_43;Text_Console_Colour_Cube_44;Text_Console_Colour_Cube_45;Text_Console_Colour_Cube_46;Text_Console_Colour_Cube_47;Text_Console_Colour_Cube_48;Text_Console_Colour_Cube_49;Text_Console_Colour_Cube_50;Text_Console_Colour_Cube_51;Text_Console_Colour_Cube_52;Text_Console_Colour_Cube_53;Text_Console_Colour_Cube_54;Text_Console_Colour_Cube_55;Text_Console_Colour_Cube_56;Text_Console_Colour_Cube_57;Text_Console_Colour_Cube_58;Text_Console_Colour_Cube_59;Text_Console_Colour_Cube_60;Text_Console_Colour_Cube_61;Text_Console_Colour_Cube_62;Text_Console_Colour_Cube_63;Text_Console_Colour_Cube_64;Text_Console_Colour_Cube_65;Text_Console_Colour_Cube_66;Text_Console_Colour_Cube_67;Text_Console_Colour_Cube_68;Text_Console_Colour_Cube_69;Text_Console_Colour_Cube_70;Text_Console_Colour_Cube_71;Text_Console_Colour_Cube_72;Text_Console_Colour_Cube_73;Text_Console_Colour_Cube_74;Text_Console_Colour_Cube_75;Text_Console_Colour_Cube_76;Text_Console_Colour_Cube_77;Text_Console_Colour_Cube_78;Text_Console_Colour_Cube_79;Text_Console_Colour_Cube_80;Text_Console_Colour_Cube_81;Text_Console_Colour_Cube_82;Text_Console_Colour_Cube_83;Text_Console_Colour_Cube_84;Text_Console_Colour_Cube_85;Text_Console_Colour_Cube_86;Text_Console_Colour_Cube_87;Text_Console_Colour_Cube_88;Text_Console_Colour_Cube_89;Text_Console_Colour_Cube_90;Text_Console_Colour_Cube_91;Text_Console_Colour_Cube_92;Text_Console_Colour_Cube_93;Text_Console_Colour_Cube_94;Text_Console_Colour_Cube_95;Text_Console_Colour_Cube_96;Text_Console_Colour_Cube_97;Text_Console_Colour_Cube_98;Text_Console_Colour_Cube_99;Text_Console_Colour_Cube_100;Text_Console_Colour_Cube_101;Text_Console_Colour_Cube_102;Text_Console_Colour_Cube_103;Text_Console_Colour_Cube_104;Text_Console_Colour_Cube_105;Text_Console_Colour_Cube_106;Text_Console_Colour_Cube_107;Text_Console_Colour_Cube_108;Text_Console_Colour_Cube_109;Text_Console_Colour_Cube_110;Text_Console_Colour_Cube_111;Text_Console_Colour_Cube_112;Text_Console_Colour_Cube_113;Text_Console_Colour_Cube_114;Text_Console_Colour_Cube_115;Text_Console_Colour_Cube_116;Text_Console_Colour_Cube_117;Text_Console_Colour_Cube_118;Text_Console_Colour_Cube_119;Text_Console_Colour_Cube_120;Text_Console_Colour_Cube_121;Text_Console_Colour_Cube_122;Text_Console_Colour_Cube_123;Text_Console_Colour_Cube_124;Text_Console_Colour_Cube_125;Text_Console_Colour_Cube_126;Text_Console_Colour_Cube_127;Text_Console_Colour_Cube_128;Text_Console_Colour_Cube_129;Text_Console_Colour_Cube_130;Text_Console_Colour_Cube_131;Text_Console_Colour_Cube_132;Text_Console_Colour_Cube_133;Text_Console_Colour_Cube_134;Text_Console_Colour_Cube_135;Text_Console_Colour_Cube_136;Text_Console_Colour_Cube_137;Text_Console_Colour_Cube_138;Text_Console_Colour_Cube_139;Text_Console_Colour_Cube_140;Text_Console_Colour_Cube_141;Text_Console_Colour_Cube_142;Text_Console_Colour_Cube_143;Text_Console_Colour_Cube_144;Text_Console_Colour_Cube_145;Text_Console_Colour_Cube_146;Text_Console_Colour_Cube_147;Text_Console_Colour_Cube_148;Text_Console_Colour_Cube_149;Text_Console_Colour_Cube_150;Text_Console_Colour_Cube_151;Text_Console_Colour_Cube_152;Text_Console_Colour_Cube_153;Text_Console_Colour_Cube_154;Text_Console_Colour_Cube_155;Text_Console_Colour_Cube_156;Text_Console_Colour_Cube_157;Text_Console_Colour_Cube_158;Text_Console_Colour_Cube_159;Text_Console_Colour_Cube_160;Text_Console_Colour_Cube_161;Text_Console_Colour_Cube_162;Text_Console_Colour_Cube_163;Text_Console_Colour_Cube_164;Text_Console_Colour_Cube_165;Text_Console_Colour_Cube_166;Text_Console_Colour_Cube_167;Text_Console_Colour_Cube_168;Text_Console_Colour_Cube_169;Text_Console_Colour_Cube_170;Text_Console_Colour_Cube_171;Text_Console_Colour_Cube_172;Text_Console_Colour_Cube_173;Text_Console_Colour_Cube_174;Text_Console_Colour_Cube_175;Text_Console_Colour_Cube_176;Text_Console_Colour_Cube_177;Text_Console_Colour_Cube_178;Text_Console_Colour_Cube_179;Text_Console_Colour_Cube_180;Text_Console_Colour_Cube_181;Text_Console_Colour_Cube_182;Text_Console_Colour_Cube_183;Text_Console_Colour_Cube_184;Text_Console_Colour_Cube_185;Text_Console_Colour_Cube_186;Text_Console_Colour_Cube_187;Text_Console_Colour_Cube_188;Text_Console_Colour_Cube_189;Text_Console_Colour_Cube_190;Text_Console_Colour_Cube_191;Text_Console_Colour_Cube_192;Text_Console_Colour_Cube_193;Text_Console_Colour_Cube_194;Text_Console_Colour_Cube_195;Text_Console_Colour_Cube_196;Text_Console_Colour_Cube_197;Text_Console_Colour_Cube_198;Text_Console_Colour_Cube_199;Text_Console_Colour_Cube_200;Text_Console_Colour_Cube_201;Text_Console_Colour_Cube_202;Text_Console_Colour_Cube_203;Text_Console_Colour_Cube_204;Text_Console_Colour_Cube_205;Text_Console_Colour_Cube_206;Text_Console_Colour_Cube_207;Text_Console_Colour_Cube_208;Text_Console_Colour_Cube_209;Text_Console_Colour_Cube_210;Text_Console_Colour_Cube_211;Text_Console_Colour_Cube_212;Text_Console_Colour_Cube_213;Text_Console_Colour_Cube_214;Text_Console_Colour_Cube_215;Text_Console_Colour_Cube_216;Text_Console_Colour_Cube_217;Text_Console_Colour_Cube_218;Text_Console_Colour_Cube_219;Text_Console_Colour_Cube_220;Text_Console_Colour_Cube_221;Text_Console_Colour_Cube_222;Text_Console_Colour_Cube_223;Text_Console_Colour_Cube_224;Text_Console_Colour_Cube_225;Text_Console_Colour_Cube_226;Text_Console_Colour_Cube_227;Text_Console_Colour_Cube_228;Text_Console_Colour_Cube_229;Text_Console_Colour_Cube_230;Text_Console_Colour_Cube_231;Text_Console_Colour_Grey_232;Text_Console_Colour_Grey_233;Text_Console_Colour_Grey_234;Text_Console_Colour_Grey_235;Text_Console_Colour_Grey_236;Text_Console_Colour_Grey_237;Text_Console_Colour_Grey_238;Text_Console_Colour_Grey_239;Text_Console_Colour_Grey_240;Text_Console_Colour_Grey_241;Text_Console_Colour_Grey_242;Text_Console_Colour_Grey_243;Text_Console_Colour_Grey_244;Text_Console_Colour_Grey_245;Text_Console_Colour_Grey_246;Text_Console_Colour_Grey_247;Text_Console_Colour_Grey_248;Text_Console_Colour_Grey_249;Text_Console_Colour_Grey_250;Text_Console_Colour_Grey_251;Text_Console_Colour_Grey_252;Text_Console_Colour_Grey_253;Text_Console_Colour_Grey_254;Text_Console_Colour_Grey_255;Text_Console_Colour_Default_Foreground;Text_Console_Colour_Default_Background"
 ],
 "text_console_frontend_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct text_console_frontend_interface {\n    int (*start)(conf_object_t *NOTNULL obj, conf_object_t *backend);\n    void (*stop)(conf_object_t *NOTNULL obj, int handle);\n    void (*set_title)(conf_object_t *NOTNULL obj, int handle, const char *short_title, const char *long_title);\n    void (*set_size)(conf_object_t *NOTNULL obj, int handle, int width, int height);\n    void (*set_max_scrollback_size)(conf_object_t *NOTNULL obj, int handle, int num_lines);\n    void (*set_default_colours)(conf_object_t *NOTNULL obj, int handle, uint32 default_fg_col, uint32 default_bg_col);\n    void (*set_visible)(conf_object_t *NOTNULL obj, int handle, bool visible);\n    void (*set_contents)(conf_object_t *NOTNULL obj, int handle, int top, int left, int bottom, int right, const char *text, const text_console_attrib_t *attrib);\n    void (*set_cursor_pos)(conf_object_t *NOTNULL obj, int handle, int row, int col);\n    void (*append_text)(conf_object_t *NOTNULL obj, int handle, int num_lines, const char *text, const text_console_attrib_t *attrib);\n    void (*refresh_screen)(conf_object_t *NOTNULL obj, int handle, const char *text, const text_console_attrib_t *attrib, const char *sb_text, const text_console_attrib_t *sb_attrib, int scrollback_size);\n} text_console_frontend_interface_t;"
   ]
  ],
  "s:text_console_frontend_interface_t:start;stop;set_title;set_size;set_max_scrollback_size;set_default_colours;set_visible;set_contents;set_cursor_pos;append_text;refresh_screen"
 ],
 "text_console_key_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Text_Console_Key_Tab       = 9,\n    Text_Console_Key_Return    = 13,\n    Text_Console_Key_Escape    = 27,\n    Text_Console_Key_Backspace = 128,\n    Text_Console_Key_Left,\n    Text_Console_Key_Up,\n    Text_Console_Key_Right,\n    Text_Console_Key_Down,\n    Text_Console_Key_Home,\n    Text_Console_Key_End,\n    Text_Console_Key_Ins,\n    Text_Console_Key_Del,\n    Text_Console_Key_Pgup,\n    Text_Console_Key_Pgdn,\n    Text_Console_Key_F1,\n    Text_Console_Key_F2,\n    Text_Console_Key_F3,\n    Text_Console_Key_F4,\n    Text_Console_Key_F5,\n    Text_Console_Key_F6,\n    Text_Console_Key_F7,\n    Text_Console_Key_F8,\n    Text_Console_Key_F9,\n    Text_Console_Key_F10,\n    Text_Console_Key_F11,\n    Text_Console_Key_F12,\n    Text_Console_Key_KP_0,\n    Text_Console_Key_KP_1,\n    Text_Console_Key_KP_2,\n    Text_Console_Key_KP_3,\n    Text_Console_Key_KP_4,\n    Text_Console_Key_KP_5,\n    Text_Console_Key_KP_6,\n    Text_Console_Key_KP_7,\n    Text_Console_Key_KP_8,\n    Text_Console_Key_KP_9,\n    Text_Console_Key_KP_Plus,\n    Text_Console_Key_KP_Minus,\n    Text_Console_Key_KP_Mul,\n    Text_Console_Key_KP_Div,\n    Text_Console_Key_KP_Dot,\n    Text_Console_Key_KP_Enter\n} text_console_key_t;"
   ]
  ],
  "e:text_console_key_t:Text_Console_Key_Tab;Text_Console_Key_Return;Text_Console_Key_Escape;Text_Console_Key_Backspace;Text_Console_Key_Left;Text_Console_Key_Up;Text_Console_Key_Right;Text_Console_Key_Down;Text_Console_Key_Home;Text_Console_Key_End;Text_Console_Key_Ins;Text_Console_Key_Del;Text_Console_Key_Pgup;Text_Console_Key_Pgdn;Text_Console_Key_F1;Text_Console_Key_F2;Text_Console_Key_F3;Text_Console_Key_F4;Text_Console_Key_F5;Text_Console_Key_F6;Text_Console_Key_F7;Text_Console_Key_F8;Text_Console_Key_F9;Text_Console_Key_F10;Text_Console_Key_F11;Text_Console_Key_F12;Text_Console_Key_KP_0;Text_Console_Key_KP_1;Text_Console_Key_KP_2;Text_Console_Key_KP_3;Text_Console_Key_KP_4;Text_Console_Key_KP_5;Text_Console_Key_KP_6;Text_Console_Key_KP_7;Text_Console_Key_KP_8;Text_Console_Key_KP_9;Text_Console_Key_KP_Plus;Text_Console_Key_KP_Minus;Text_Console_Key_KP_Mul;Text_Console_Key_KP_Div;Text_Console_Key_KP_Dot;Text_Console_Key_KP_Enter"
 ],
 "text_console_modifier_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Text_Console_Modifier_Alt   = 1,\n    Text_Console_Modifier_Ctrl  = 2,\n    Text_Console_Modifier_Shift = 4\n} text_console_modifier_t;"
   ]
  ],
  "e:text_console_modifier_t:Text_Console_Modifier_Alt;Text_Console_Modifier_Ctrl;Text_Console_Modifier_Shift"
 ],
 "text_console_text_attrib_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Text_Console_Attrib_Bold      = 1,\n    Text_Console_Attrib_Underline = 2\n} text_console_text_attrib_t;"
   ]
  ],
  "e:text_console_text_attrib_t:Text_Console_Attrib_Bold;Text_Console_Attrib_Underline"
 ],
 "timing_model_interface_t": [
  "model-iface/timing-model.h",
  "model-iface/timing-model.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct timing_model_interface {\n    cycles_t (*operate)(conf_object_t *NOTNULL mem_hier, conf_object_t *NOTNULL space, map_list_t *map_list, generic_transaction_t *NOTNULL mem_op);\n} timing_model_interface_t;"
   ]
  ],
  "s:timing_model_interface_t:operate"
 ],
 "transaction_bytemap_t": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct transaction_bytemap transaction_bytemap_t;"
   ]
  ],
  "s:transaction_bytemap_t"
 ],
 "transaction_cb_handle_t": [
  "model-iface/transaction-instrumentation.h",
  "model-iface/transaction-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct transaction_callback_entry transaction_cb_handle_t;"
   ]
  ],
  "s:transaction_cb_handle_t"
 ],
 "transaction_completion_t": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef exception_type_t (*transaction_completion_t)(conf_object_t *obj, transaction_t *t, exception_type_t ex);"
   ]
  ],
  "t"
 ],
 "transaction_flags_t": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Transaction_Fetch      = ...,\n    Sim_Transaction_Write      = ...,\n    Sim_Transaction_Control    = ...,\n    Sim_Transaction_Inquiry    = ...,\n    Sim_Transaction_Incoherent = ...,\n    Sim_Transaction_Atomic     = ...\n} transaction_flags_t;"
   ]
  ],
  "e:transaction_flags_t:Sim_Transaction_Fetch;Sim_Transaction_Write;Sim_Transaction_Control;Sim_Transaction_Inquiry;Sim_Transaction_Incoherent;Sim_Transaction_Atomic"
 ],
 "transaction_id_t": [
  "simulator-iface/osa-types.h",
  "simulator-iface/osa-types.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef uint64 transaction_id_t;"
   ]
  ],
  "t"
 ],
 "transaction_interface_t": [
  "model-iface/transaction.h",
  "model-iface/transaction.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct transaction_interface {\n    exception_type_t (*issue)(conf_object_t *NOTNULL obj, transaction_t *NOTNULL t, uint64 addr);\n} transaction_interface_t;"
   ]
  ],
  "s:transaction_interface_t:issue"
 ],
 "transaction_issue_cb_t": [
  "model-iface/transaction-instrumentation.h",
  "model-iface/transaction-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef next_map_t (*transaction_issue_cb_t)(conf_object_t *obj, const map_target_t *mt, const char *map_target_type, map_info_t *map, transaction_t *t, uint64 offset, do_map_target_cb_t do_mt, lang_void *handle, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "transaction_subscribe_interface_t": [
  "model-iface/transaction-instrumentation.h",
  "model-iface/transaction-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct transaction_subscribe_interface {\n    void (*remove_callback)(conf_object_t *NOTNULL obj, transaction_cb_handle_t *handle);\n    void (*enable_callback)(conf_object_t *NOTNULL obj, transaction_cb_handle_t *handle);\n    void (*disable_callback)(conf_object_t *NOTNULL obj, transaction_cb_handle_t *handle);\n    transaction_cb_handle_t *(*register_issue_cb)(conf_object_t *NOTNULL obj, conf_object_t *conn_obj, transaction_issue_cb_t cb, lang_void *data);\n} transaction_subscribe_interface_t;"
   ]
  ],
  "s:transaction_subscribe_interface_t:remove_callback;enable_callback;disable_callback;register_issue_cb"
 ],
 "transaction_t": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct transaction {\n    atom_t *atoms;\n    struct transaction *prev;\n    struct transaction_cache *_cache;\n    uint64 _status;\n} transaction_t;"
   ]
  ],
  "s:transaction_t:atoms;prev;_cache;_status"
 ],
 "transaction_target_type_ret_t": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    transaction_target_type_t val;\n} transaction_target_type_ret_t;"
   ]
  ],
  "s:transaction_target_type_ret_t:val"
 ],
 "transaction_target_type_t": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Transaction_Target_Unset              = 0,\n    Sim_Transaction_Target_Ram                = ...,\n    Sim_Transaction_Target_Device             = ...,\n    Sim_Transaction_Target_Uncacheable        = ...,\n    Sim_Transaction_Target_Cacheable_Ram      = ...,\n    Sim_Transaction_Target_Cacheable_Device   = ...,\n    Sim_Transaction_Target_Uncacheable_Ram    = ...,\n    Sim_Transaction_Target_Uncacheable_Device = ...\n} transaction_target_type_t;"
   ]
  ],
  "e:transaction_target_type_t:Sim_Transaction_Target_Unset;Sim_Transaction_Target_Ram;Sim_Transaction_Target_Device;Sim_Transaction_Target_Uncacheable;Sim_Transaction_Target_Cacheable_Ram;Sim_Transaction_Target_Cacheable_Device;Sim_Transaction_Target_Uncacheable_Ram;Sim_Transaction_Target_Uncacheable_Device"
 ],
 "transaction_trace_atom_access_t": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct transaction_trace_atom_access {\n    void (*callback)(const transaction_t *t, atom_id_t atom_id, lang_void *data);\n    lang_void *cb_data;\n    uint64 _internal;\n} transaction_trace_atom_access_t;"
   ]
  ],
  "s:transaction_trace_atom_access_t:callback;cb_data;_internal"
 ],
 "transaction_translator_interface_t": [
  "devs/translator.h",
  "devs/translator.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct transaction_translator_interface {\n    exception_type_t (*translate)(conf_object_t *NOTNULL obj, uint64 addr, access_t access, transaction_t *t, exception_type_t (*NOTNULL callback)(translation_t translation, transaction_t *transaction, cbdata_call_t data), cbdata_register_t data);\n} transaction_translator_interface_t;"
   ]
  ],
  "s:transaction_translator_interface_t:translate"
 ],
 "translate_interface_t": [
  "devs/memory-space.h",
  "devs/memory-space.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct translate_interface {\n    conf_object_t *(*translate)(conf_object_t *NOTNULL obj, generic_transaction_t *NOTNULL mem_op, map_info_t mapinfo);\n} translate_interface_t;"
   ]
  ],
  "s:translate_interface_t:translate"
 ],
 "translation_flags_t": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_Translation_Dynamic   = 1,\n    Sim_Translation_Ambiguous = 2\n} translation_flags_t;"
   ]
  ],
  "e:translation_flags_t:Sim_Translation_Dynamic;Sim_Translation_Ambiguous"
 ],
 "translation_flush_interface_t": [
  "devs/translator.h",
  "devs/translator.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct translation_flush_interface {\n    bool (*flush_range)(conf_object_t *obj, uint64 base, uint64 size, access_t access, const map_target_t *default_target);\n} translation_flush_interface_t;"
   ]
  ],
  "s:translation_flush_interface_t:flush_range"
 ],
 "translation_t": [
  "base/transaction.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct translation {\n    const map_target_t *target;\n    physical_address_t base;\n    physical_address_t start;\n    physical_address_t size;\n    translation_flags_t flags;\n} translation_t;"
   ]
  ],
  "s:translation_t:target;base;start;size;flags"
 ],
 "translator_interface_t": [
  "devs/translator.h",
  "devs/translator.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct translator_interface {\n    translation_t (*translate)(conf_object_t *NOTNULL obj, physical_address_t addr, access_t access, const map_target_t *default_target);\n} translator_interface_t;"
   ]
  ],
  "s:translator_interface_t:translate"
 ],
 "tuple_int_string_t": [
  "base/types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    int integer;\n    char *string;\n} tuple_int_string_t;"
   ]
  ],
  "s:tuple_int_string_t:integer;string"
 ],
 "uint16": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef unsigned short uint16;"
   ]
  ],
  "t"
 ],
 "uint32": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef unsigned int uint32;"
   ]
  ],
  "t"
 ],
 "uint32_array_t": [
  "devs/firewire.h",
  "devs/firewire.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    size_t len;\n    uint32 *data;\n} uint32_array_t;"
   ]
  ],
  "s:uint32_array_t:len;data"
 ],
 "uint64": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef unsigned long long uint64;"
   ]
  ],
  "t"
 ],
 "uint64_state_interface_t": [
  "model-iface/state.h",
  "model-iface/state.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct uint64_state_interface {\n    void (*set)(conf_object_t *NOTNULL obj, uint64 level);\n} uint64_state_interface_t;"
   ]
  ],
  "s:uint64_state_interface_t:set"
 ],
 "uint8": [
  "base-types.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef unsigned char uint8;"
   ]
  ],
  "t"
 ],
 "unaligned_load16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint16 unaligned_load16(const void *p);"
   ]
  ],
  "f"
 ],
 "unaligned_load32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint32 unaligned_load32(const void *p);"
   ]
  ],
  "f"
 ],
 "unaligned_load64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 unaligned_load64(const void *p);"
   ]
  ],
  "f"
 ],
 "unaligned_load8": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint8 unaligned_load8(const void *p);"
   ]
  ],
  "f"
 ],
 "unaligned_store16": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void unaligned_store16(void *p, uint16 x);"
   ]
  ],
  "f"
 ],
 "unaligned_store32": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void unaligned_store32(void *p, uint32 x);"
   ]
  ],
  "f"
 ],
 "unaligned_store64": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void unaligned_store64(void *p, uint64 x);"
   ]
  ],
  "f"
 ],
 "unaligned_store8": [
  "util/swabber.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void unaligned_store8(void *p, uint8 x);"
   ]
  ],
  "f"
 ],
 "unsigned_divide_128_by_64": [
  "util/arith.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline int unsigned_divide_128_by_64(uint64 dividend_high, uint64 dividend_low, uint64 divisor, uint64 *quotient, uint64 *remainder);"
   ]
  ],
  "f"
 ],
 "unsigned_divide_128_by_64_nocheck": [
  "util/arith.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void unsigned_divide_128_by_64_nocheck(uint64 dividend_high, uint64 dividend_low, uint64 divisor, uint64 *quotient, uint64 *remainder);"
   ]
  ],
  "f"
 ],
 "unsigned_gcd": [
  "util/arith.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "uint64 unsigned_gcd(uint64 n, uint64 d);"
   ]
  ],
  "f"
 ],
 "unsigned_multiply_64_by_64": [
  "util/arith.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline void unsigned_multiply_64_by_64(uint64 a, uint64 b, uint64 *prod_h, uint64 *prod_l);"
   ]
  ],
  "f"
 ],
 "unsigned_multiply_64_by_64_high": [
  "util/arith.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "static inline uint64 unsigned_multiply_64_by_64_high(uint64 a, uint64 b);"
   ]
  ],
  "f"
 ],
 "unsigned_multiply_rational": [
  "util/arith.h",
  "device-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "int unsigned_multiply_rational(uint64 num1, uint64 den1, uint64 num2, uint64 den2, uint64 *result_num, uint64 *result_den);"
   ]
  ],
  "f"
 ],
 "usb_device_interface_t": [
  "devs/usb.h",
  "devs/usb.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct usb_device_interface {\n    usb_transfer_completion_t (*submit_transfer)(conf_object_t *dev_obj, usb_transfer_t *transfer);\n    void (*abort_transfer)(conf_object_t *dev_obj, usb_transfer_t *transfer);\n    void (*reset)(conf_object_t *dev_obj);\n} usb_device_interface_t;"
   ]
  ],
  "s:usb_device_interface_t:submit_transfer;abort_transfer;reset"
 ],
 "usb_device_request_t": [
  "devs/usb.h",
  "devs/usb.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint8 bmRequestType;\n    uint8 bRequest;\n    uint16 wValue;\n    uint16 wIndex;\n    uint16 wLength;\n} usb_device_request_t;"
   ]
  ],
  "s:usb_device_request_t:bmRequestType;bRequest;wValue;wIndex;wLength"
 ],
 "usb_direction_t": [
  "devs/usb.h",
  "devs/usb.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    USB_Direction_None,\n    USB_Direction_In,\n    USB_Direction_Out\n} usb_direction_t;"
   ]
  ],
  "e:usb_direction_t:USB_Direction_None;USB_Direction_In;USB_Direction_Out"
 ],
 "usb_interface_t": [
  "devs/usb.h",
  "devs/usb.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct usb_interface {\n    int (*connect_device)(conf_object_t *bus_obj, conf_object_t *NOTNULL dev_obj, usb_speed_t speed);\n    int (*disconnect_device)(conf_object_t *bus_obj, conf_object_t *NOTNULL dev_obj);\n    void (*complete_transfer)(conf_object_t *bus_obj, conf_object_t *NOTNULL dev_obj, usb_transfer_t *NOTNULL transfer);\n} usb_interface_t;"
   ]
  ],
  "s:usb_interface_t:connect_device;disconnect_device;complete_transfer"
 ],
 "usb_speed_t": [
  "devs/usb.h",
  "devs/usb.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    USB_Speed_Low,\n    USB_Speed_Full,\n    USB_Speed_High\n} usb_speed_t;"
   ]
  ],
  "e:usb_speed_t:USB_Speed_Low;USB_Speed_Full;USB_Speed_High"
 ],
 "usb_status_t": [
  "devs/usb.h",
  "devs/usb.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    USB_Status_Undef,\n    USB_Status_Ack,\n    USB_Status_Nak,\n    USB_Status_Stall\n} usb_status_t;"
   ]
  ],
  "e:usb_status_t:USB_Status_Undef;USB_Status_Ack;USB_Status_Nak;USB_Status_Stall"
 ],
 "usb_transfer_completion_t": [
  "devs/usb.h",
  "devs/usb.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    USB_Transfer_Completed,\n    USB_Transfer_Not_Ready\n} usb_transfer_completion_t;"
   ]
  ],
  "e:usb_transfer_completion_t:USB_Transfer_Completed;USB_Transfer_Not_Ready"
 ],
 "usb_transfer_t": [
  "devs/usb.h",
  "devs/usb.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint8 function_address;\n    uint8 endpoint_number;\n    usb_type_t type;\n    union {\n        usb_device_request_t control_request;\n        nano_secs_t periodic_time;\n    } u;\n    usb_direction_t direction;\n    int size;\n    dbuffer_t *buf;\n    usb_status_t status;\n} usb_transfer_t;"
   ]
  ],
  "s:usb_transfer_t:function_address;endpoint_number;type;u;direction;size;buf;status"
 ],
 "usb_type_t": [
  "devs/usb.h",
  "devs/usb.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    USB_Type_Control,\n    USB_Type_Interrupt,\n    USB_Type_Isochronous,\n    USB_Type_Bulk\n} usb_type_t;"
   ]
  ],
  "e:usb_type_t:USB_Type_Control;USB_Type_Interrupt;USB_Type_Isochronous;USB_Type_Bulk"
 ],
 "vectored_interrupt_interface_t": [
  "devs/vectored-interrupt.h",
  "devs/vectored-interrupt.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct vectored_interrupt_interface {\n    void (*set_level)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL source, int level);\n} vectored_interrupt_interface_t;"
   ]
  ],
  "s:vectored_interrupt_interface_t:set_level"
 ],
 "vectored_interrupt_source_interface_t": [
  "devs/vectored-interrupt.h",
  "devs/vectored-interrupt.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct vectored_interrupt_source_interface {\n    int (*acknowledge)(conf_object_t *NOTNULL obj, conf_object_t *NOTNULL target, int level);\n} vectored_interrupt_source_interface_t;"
   ]
  ],
  "s:vectored_interrupt_source_interface_t:acknowledge"
 ],
 "vga_text_info_interface_t": [
  "model-iface/vga-text-interface.h",
  "model-iface/vga-text-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct vga_text_info_interface {\n    bool (*text_mode)(conf_object_t *NOTNULL obj);\n    bool (*font_size)(conf_object_t *NOTNULL obj, int *width, int *height);\n    bool (*screen_size)(conf_object_t *NOTNULL obj, int *columns, int *rows);\n    bool (*text)(conf_object_t *NOTNULL obj, uint8 *text, uint8 *line_lengths);\n} vga_text_info_interface_t;"
   ]
  ],
  "s:vga_text_info_interface_t:text_mode;font_size;screen_size;text"
 ],
 "vga_text_interface_t": [
  "model-iface/vga-text-interface.h",
  "model-iface/vga-text-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct vga_text_interface {\n    int (*add_string_notification)(conf_object_t *obj, char *substring, double sample_interval);\n} vga_text_interface_t;"
   ]
  ],
  "s:vga_text_interface_t:add_string_notification"
 ],
 "vga_text_update_interface_t": [
  "model-iface/vga-text-interface.h",
  "model-iface/vga-text-interface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct vga_text_update_interface {\n    void (*write)(conf_object_t *NOTNULL obj, char value);\n} vga_text_update_interface_t;"
   ]
  ],
  "s:vga_text_update_interface_t:write"
 ],
 "vga_update_interface_t": [
  "model-iface/gfx-console.h",
  "model-iface/gfx-console.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct vga_update_interface {\n    void (*refresh)(conf_object_t *NOTNULL obj);\n    void (*refresh_all)(conf_object_t *NOTNULL obj);\n} vga_update_interface_t;"
   ]
  ],
  "s:vga_update_interface_t:refresh;refresh_all"
 ],
 "virtual_breakpoint_flags_t": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Virtual_Breakpoint_Flag_Linear = 1\n} virtual_breakpoint_flags_t;"
   ]
  ],
  "e:virtual_breakpoint_flags_t:Virtual_Breakpoint_Flag_Linear"
 ],
 "virtual_data_bp_handle_t": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct virtual_data_bp_handle virtual_data_bp_handle_t;"
   ]
  ],
  "s:virtual_data_bp_handle_t"
 ],
 "virtual_data_breakpoint_interface_t": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct virtual_data_breakpoint_interface {\n    virtual_data_bp_handle_t *NOTNULL (*add_read)(conf_object_t *NOTNULL obj, generic_address_t first, generic_address_t last, void (*NOTNULL callback)(cbdata_call_t data, conf_object_t *NOTNULL initiator, generic_address_t address, unsigned size), cbdata_register_t data, uint32 flags);\n    virtual_data_bp_handle_t *NOTNULL (*add_write)(conf_object_t *NOTNULL obj, generic_address_t first, generic_address_t last, void (*NOTNULL callback)(cbdata_call_t data, conf_object_t *NOTNULL initiator, generic_address_t address, bytes_t value), cbdata_register_t data, uint32 flags);\n    void (*remove)(conf_object_t *NOTNULL obj, virtual_data_bp_handle_t *NOTNULL bp_handle);\n} virtual_data_breakpoint_interface_t;"
   ]
  ],
  "s:virtual_data_breakpoint_interface_t:add_read;add_write;remove"
 ],
 "virtual_instr_bp_handle_t": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct virtual_instr_bp_handle virtual_instr_bp_handle_t;"
   ]
  ],
  "s:virtual_instr_bp_handle_t"
 ],
 "virtual_instruction_breakpoint_interface_t": [
  "model-iface/breakpoints.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct virtual_instruction_breakpoint_interface {\n    virtual_instr_bp_handle_t *NOTNULL (*add)(conf_object_t *NOTNULL obj, generic_address_t first, generic_address_t last, bool (*filter)(cbdata_call_t filter_data, conf_object_t *NOTNULL cpu, bytes_t opcode), cbdata_register_t filter_data, void (*NOTNULL callback)(cbdata_call_t callback_data, conf_object_t *NOTNULL cpu, generic_address_t address, unsigned size), cbdata_register_t callback_data, uint32 flags);\n    void (*remove)(conf_object_t *NOTNULL obj, virtual_instr_bp_handle_t *NOTNULL bp_handle);\n} virtual_instruction_breakpoint_interface_t;"
   ]
  ],
  "s:virtual_instruction_breakpoint_interface_t:add;remove"
 ],
 "vmp_feature_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Vmp_Feature_Ept,\n    Vmp_Feature_Tpr_Threshold,\n    Vmp_Feature_Unrestricted_Guest,\n    Vmp_Feature_Backoff,\n    Vmp_Feature_Shadow_VMCS,\n    Vmp_Feature_Nested_EPT,\n    Vmp_Feature_Direct_Rdtsc,\n    Vmp_Feature_Five_Level_Paging\n} vmp_feature_t;"
   ]
  ],
  "e:vmp_feature_t:Vmp_Feature_Ept;Vmp_Feature_Tpr_Threshold;Vmp_Feature_Unrestricted_Guest;Vmp_Feature_Backoff;Vmp_Feature_Shadow_VMCS;Vmp_Feature_Nested_EPT;Vmp_Feature_Direct_Rdtsc;Vmp_Feature_Five_Level_Paging"
 ],
 "vmp_info_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Vmp_Info_Cpu_Version,\n    Vmp_Info_Vmxmon_Version\n} vmp_info_t;"
   ]
  ],
  "e:vmp_info_t:Vmp_Info_Cpu_Version;Vmp_Info_Vmxmon_Version"
 ],
 "vmp_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct vmp_interface {\n    bool (*class_has_support)(conf_object_t *obj);\n    bool (*host_support)(conf_object_t *obj);\n    bool (*compatible_config)(conf_object_t *obj);\n    bool (*enable)(conf_object_t *obj);\n    void (*disable)(conf_object_t *obj);\n    bool (*enabled)(conf_object_t *obj);\n    void (*set_threshold)(conf_object_t *obj, int threshold);\n    bool (*get_feature)(conf_object_t *obj, vmp_feature_t feature);\n    bool (*set_feature)(conf_object_t *obj, vmp_feature_t feature, bool val);\n    uint64 (*get_info)(conf_object_t *obj, vmp_info_t info);\n} vmp_interface_t;"
   ]
  ],
  "s:vmp_interface_t:class_has_support;host_support;compatible_config;enable;disable;enabled;set_threshold;get_feature;set_feature;get_info"
 ],
 "vmx_instrumentation_subscribe_interface_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct vmx_instrumentation_subscribe_interface {\n    cpu_cb_handle_t *(*register_vmx_mode_leave_cb)(conf_object_t *cpu, conf_object_t *connection, vmx_mode_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_vmx_mode_enter_cb)(conf_object_t *cpu, conf_object_t *connection, vmx_mode_switch_cb_t cb, lang_void *user_data);\n} vmx_instrumentation_subscribe_interface_t;"
   ]
  ],
  "s:vmx_instrumentation_subscribe_interface_t:register_vmx_mode_leave_cb;register_vmx_mode_enter_cb"
 ],
 "vmx_mode_switch_cb_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*vmx_mode_switch_cb_t)(conf_object_t *obj, conf_object_t *cpu, vmx_mode_t mode, physical_address_t vmcs_address, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "vmx_mode_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Vmx_Off      = 0,\n    Vmx_Root     = 1,\n    Vmx_Non_Root = 2\n} vmx_mode_t;"
   ]
  ],
  "e:vmx_mode_t:Vmx_Off;Vmx_Root;Vmx_Non_Root"
 ],
 "vnc_server_v2_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct vnc_server_v2_interface {\n    bool (*listening)(conf_object_t *NOTNULL obj);\n    int (*num_clients)(conf_object_t *NOTNULL obj);\n    void (*disconnect)(conf_object_t *NOTNULL obj);\n} vnc_server_v2_interface_t;"
   ]
  ],
  "s:vnc_server_v2_interface_t:listening;num_clients;disconnect"
 ],
 "wait_handler_t": [
  "simulator/async-wait.h",
  "simulator-api.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct wait_handler wait_handler_t;"
   ]
  ],
  "s:wait_handler_t"
 ],
 "winsome_console_interface_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct winsome_console_interface {\n    void (*gfx)(conf_object_t *NOTNULL obj, lang_void *console, int left, int right, int top, int bottom, bytes_t data, bool text_mode);\n    void (*resize)(conf_object_t *NOTNULL obj, lang_void *console, int width, int height);\n    void (*refresh)(conf_object_t *NOTNULL obj, lang_void *console, bytes_t text, bytes_t attrib, bytes_t sb_text, bytes_t sb_attrib, int sb_size, int cursor_x, int cursor_y);\n    void (*append)(conf_object_t *NOTNULL obj, lang_void *console, uint64 num_lines, bytes_t text, bytes_t attrib, int cursor_x, int cursor_y);\n    void (*text)(conf_object_t *NOTNULL obj, lang_void *console, int left, int right, int top, int bottom, bytes_t text, bytes_t attrib, int cursor_x, int cursor_y);\n    void (*activity)(conf_object_t *NOTNULL obj, lang_void *console);\n} winsome_console_interface_t;"
   ]
  ],
  "s:winsome_console_interface_t:gfx;resize;refresh;append;text;activity"
 ],
 "winsome_update_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    winsome_update_type_t type;\n    union {\n        struct {\n            char *text;\n            text_console_attrib_t *attrib;\n            int left;\n            int right;\n            int top;\n            int bottom;\n            int cursor_x;\n            int cursor_y;\n        } text;\n        struct {\n            uint64 num_lines;\n            char *text;\n            text_console_attrib_t *attrib;\n            uint64 text_len;\n            int cursor_x;\n            int cursor_y;\n        } sb;\n        struct {\n            char *text;\n            text_console_attrib_t *attrib;\n            char *sb_text;\n            text_console_attrib_t *sb_attrib;\n            int width;\n            int height;\n            int sb_size;\n            int cursor_x;\n            int cursor_y;\n        } refresh;\n        struct {\n            int width;\n            int height;\n        } resize;\n        struct {\n            uint32 *data;\n            int left;\n            int right;\n            int top;\n            int bottom;\n            int width;\n            int height;\n            bool text_mode;\n        } gfx;\n    } u;\n} winsome_update_t;"
   ]
  ],
  "s:winsome_update_t:type;u"
 ],
 "winsome_update_type_t": [
  "simulator-iface/consoles.h",
  "simulator-iface/consoles.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Winsome_Update_Nothing     = 0,\n    Winsome_Update_Text_Cursor = 1,\n    Winsome_Update_Append      = 2,\n    Winsome_Update_Refresh     = 3,\n    Winsome_Update_Gfx         = 4,\n    Winsome_Update_Resize      = 5,\n    Winsome_Update_Activity    = 6\n} winsome_update_type_t;"
   ]
  ],
  "e:winsome_update_type_t:Winsome_Update_Nothing;Winsome_Update_Text_Cursor;Winsome_Update_Append;Winsome_Update_Refresh;Winsome_Update_Gfx;Winsome_Update_Resize;Winsome_Update_Activity"
 ],
 "x86_access_type_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_access_type_interface {\n    const char *(*get_enum_name)(conf_object_t *obj, x86_access_type_t at);\n    const char *(*get_short_name)(conf_object_t *obj, x86_access_type_t at);\n    const char *(*get_description)(conf_object_t *obj, x86_access_type_t at);\n    bool (*implicit)(conf_object_t *obj, x86_access_type_t at);\n} x86_access_type_interface_t;"
   ]
  ],
  "s:x86_access_type_interface_t:get_enum_name;get_short_name;get_description;implicit"
 ],
 "x86_access_type_t": [
  "arch/x86-memop.h",
  "arch/x86-memop.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum x86_access_type {\n    X86_Other,\n    X86_Vanilla,\n    X86_Instruction,\n    X86_Clflush,\n    X86_Fpu_Env,\n    X86_Fpu_State,\n    X86_Idt,\n    X86_Gdt,\n    X86_Ldt,\n    X86_Task_Segment,\n    X86_Task_Switch,\n    X86_Far_Call_Parameter,\n    X86_Stack,\n    X86_Pml4,\n    X86_Pdp,\n    X86_Pd,\n    X86_Pt,\n    X86_Sse,\n    X86_Fpu,\n    X86_Access_Simple,\n    X86_Microcode_Update,\n    X86_Non_Temporal,\n    X86_Prefetch_3DNow,\n    X86_Prefetchw_3DNow,\n    X86_Prefetch_T0,\n    X86_Prefetch_T1,\n    X86_Prefetch_T2,\n    X86_Prefetch_NTA,\n    X86_Loadall,\n    X86_Atomic_Info,\n    X86_Cmpxchg16b,\n    X86_Smm_State,\n    X86_Vmcs,\n    X86_Vmx_IO_Bitmap,\n    X86_Vmx_Vapic,\n    X86_Vmx_Msr,\n    X86_Vmx_Msr_Bitmaps,\n    X86_Pml4e,\n    X86_Pdpte,\n    X86_Pde,\n    X86_Pte,\n    X86_Invept_Descriptor,\n    X86_Shadow_Stack,\n    X86_Invvpid_Descriptor,\n    X86_Processor_Trace,\n    X86_Pml5,\n    X86_Pml5e,\n    X86_Pdp_Pae,\n    X86_Vmx_EPTP_List,\n    X86_Vmx_VE_Info,\n    X86_Sppt,\n    X86_Pml_Log,\n    X86_Pebs,\n    X86_Vmx_Pasid_Translation,\n    X86_Stack_Explicit,\n    X86_Mtt_Metadata,\n    X86_Prefetch_Other,\n    X86_Access_Type_Last\n} x86_access_type_t;"
   ]
  ],
  "e:x86_access_type_t:X86_Other;X86_Vanilla;X86_Instruction;X86_Clflush;X86_Fpu_Env;X86_Fpu_State;X86_Idt;X86_Gdt;X86_Ldt;X86_Task_Segment;X86_Task_Switch;X86_Far_Call_Parameter;X86_Stack;X86_Pml4;X86_Pdp;X86_Pd;X86_Pt;X86_Sse;X86_Fpu;X86_Access_Simple;X86_Microcode_Update;X86_Non_Temporal;X86_Prefetch_3DNow;X86_Prefetchw_3DNow;X86_Prefetch_T0;X86_Prefetch_T1;X86_Prefetch_T2;X86_Prefetch_NTA;X86_Loadall;X86_Atomic_Info;X86_Cmpxchg16b;X86_Smm_State;X86_Vmcs;X86_Vmx_IO_Bitmap;X86_Vmx_Vapic;X86_Vmx_Msr;X86_Vmx_Msr_Bitmaps;X86_Pml4e;X86_Pdpte;X86_Pde;X86_Pte;X86_Invept_Descriptor;X86_Shadow_Stack;X86_Invvpid_Descriptor;X86_Processor_Trace;X86_Pml5;X86_Pml5e;X86_Pdp_Pae;X86_Vmx_EPTP_List;X86_Vmx_VE_Info;X86_Sppt;X86_Pml_Log;X86_Pebs;X86_Vmx_Pasid_Translation;X86_Stack_Explicit;X86_Mtt_Metadata;X86_Prefetch_Other;X86_Access_Type_Last"
 ],
 "x86_activity_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Activity_Normal             = 0,\n    X86_Activity_Hlt                = 1,\n    X86_Activity_Shutdown           = 2,\n    X86_Activity_Wait_For_SIPI      = 3,\n    X86_Activity_Cx_State           = 4,\n    X86_Activity_MWait              = 5,\n    X86_Activity_Senter_Sleep_State = 6\n} x86_activity_t;"
   ]
  ],
  "e:x86_activity_t:X86_Activity_Normal;X86_Activity_Hlt;X86_Activity_Shutdown;X86_Activity_Wait_For_SIPI;X86_Activity_Cx_State;X86_Activity_MWait;X86_Activity_Senter_Sleep_State"
 ],
 "x86_address_query_interface_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_address_query_interface {\n    x86_seg_t (*segment)(conf_object_t *cpu, address_handle_t *handle);\n    page_crossing_info_t (*get_page_crossing_info)(conf_object_t *cpu, address_handle_t *handle);\n} x86_address_query_interface_t;"
   ]
  ],
  "s:x86_address_query_interface_t:segment;get_page_crossing_info"
 ],
 "x86_alignment_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Alignment_Not_Required,\n    X86_Alignment_Required\n} x86_alignment_t;"
   ]
  ],
  "e:x86_alignment_t:X86_Alignment_Not_Required;X86_Alignment_Required"
 ],
 "x86_cache_flush_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_cache_flush_interface {\n    void (*flush)(conf_object_t *obj, conf_object_t *cpu, bool writeback);\n} x86_cache_flush_interface_t;"
   ]
  ],
  "s:x86_cache_flush_interface_t:flush"
 ],
 "x86_cpuid_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_cpuid_interface {\n    cpuid_ret_t (*cpuid)(conf_object_t *obj, conf_object_t *cpu, uint32 in_eax, uint32 in_ebx, uint32 in_ecx, uint32 in_edx);\n} x86_cpuid_interface_t;"
   ]
  ],
  "s:x86_cpuid_interface_t:cpuid"
 ],
 "x86_cpuid_query_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_cpuid_query_interface {\n    cpuid_value_t (*cpuid_query)(conf_object_t *obj, uint32 leaf, uint32 subleaf);\n} x86_cpuid_query_interface_t;"
   ]
  ],
  "s:x86_cpuid_query_interface_t:cpuid_query"
 ],
 "x86_cr_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Cr0 = 0,\n    X86_Cr2 = 2,\n    X86_Cr3 = 3,\n    X86_Cr4 = 4,\n    X86_Cr8 = 8\n} x86_cr_t;"
   ]
  ],
  "e:x86_cr_t:X86_Cr0;X86_Cr2;X86_Cr3;X86_Cr4;X86_Cr8"
 ],
 "x86_cstate_interface_t": [
  "devs/x86-cstate-iface.h",
  "devs/x86-cstate-iface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_cstate_interface {\n    x86_cstate_t (*get_cstate)(conf_object_t *cpu_obj);\n    void (*set_cstate)(conf_object_t *cpu_obj, uint32 state, uint32 sub_state);\n} x86_cstate_interface_t;"
   ]
  ],
  "s:x86_cstate_interface_t:get_cstate;set_cstate"
 ],
 "x86_cstate_notification_interface_t": [
  "devs/x86-cstate-iface.h",
  "devs/x86-cstate-iface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_cstate_notification_interface {\n    void (*notification)(conf_object_t *listener, conf_object_t *cpu, uint32 state, uint32 sub_state);\n} x86_cstate_notification_interface_t;"
   ]
  ],
  "s:x86_cstate_notification_interface_t:notification"
 ],
 "x86_cstate_t": [
  "devs/x86-cstate-iface.h",
  "devs/x86-cstate-iface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint32 state;\n    uint32 sub_state;\n} x86_cstate_t;"
   ]
  ],
  "s:x86_cstate_t:state;sub_state"
 ],
 "x86_detailed_exec_mode_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Detailed_Exec_Mode_Real_16,\n    X86_Detailed_Exec_Mode_Real_32,\n    X86_Detailed_Exec_Mode_V86,\n    X86_Detailed_Exec_Mode_Protected_16,\n    X86_Detailed_Exec_Mode_Protected_32,\n    X86_Detailed_Exec_Mode_Protected_64,\n    X86_Detailed_Exec_Mode_Compatibility_16,\n    X86_Detailed_Exec_Mode_Compatibility_32\n} x86_detailed_exec_mode_t;"
   ]
  ],
  "e:x86_detailed_exec_mode_t:X86_Detailed_Exec_Mode_Real_16;X86_Detailed_Exec_Mode_Real_32;X86_Detailed_Exec_Mode_V86;X86_Detailed_Exec_Mode_Protected_16;X86_Detailed_Exec_Mode_Protected_32;X86_Detailed_Exec_Mode_Protected_64;X86_Detailed_Exec_Mode_Compatibility_16;X86_Detailed_Exec_Mode_Compatibility_32"
 ],
 "x86_dr_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Dr0 = 0,\n    X86_Dr1 = 1,\n    X86_Dr2 = 2,\n    X86_Dr3 = 3,\n    X86_Dr6 = 6,\n    X86_Dr7 = 7\n} x86_dr_t;"
   ]
  ],
  "e:x86_dr_t:X86_Dr0;X86_Dr1;X86_Dr2;X86_Dr3;X86_Dr6;X86_Dr7"
 ],
 "x86_ept_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_ept_interface {\n    physical_block_t (*guest_physical_to_physical)(conf_object_t *obj, generic_address_t address, x86_processor_mode_t cpu_mode, access_t access);\n    bool (*is_ept_active)(conf_object_t *obj);\n} x86_ept_interface_t;"
   ]
  ],
  "s:x86_ept_interface_t:guest_physical_to_physical;is_ept_active"
 ],
 "x86_exception_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_exception_interface {\n    void (*DE_fault)(conf_object_t *cpu);\n    void (*BR_fault)(conf_object_t *cpu);\n    void (*UD_fault)(conf_object_t *cpu);\n    void (*NM_fault)(conf_object_t *cpu);\n    void (*DF_abort)(conf_object_t *cpu, const char *desc);\n    void (*TS_fault)(conf_object_t *cpu, uint16 sel);\n    void (*NP_fault)(conf_object_t *cpu, uint16 sel_vec, bool is_vec);\n    void (*SS_fault)(conf_object_t *cpu, uint16 sel);\n    void (*GP_fault)(conf_object_t *cpu, uint16 sel_vec, bool is_vec, const char *desc);\n    void (*PF_fault)(conf_object_t *cpu, linear_address_t laddr, uint32 ecode);\n    void (*MF_fault)(conf_object_t *cpu);\n    void (*AC_fault)(conf_object_t *cpu);\n    void (*XM_fault)(conf_object_t *cpu);\n} x86_exception_interface_t;"
   ]
  ],
  "s:x86_exception_interface_t:DE_fault;BR_fault;UD_fault;NM_fault;DF_abort;TS_fault;NP_fault;SS_fault;GP_fault;PF_fault;MF_fault;AC_fault;XM_fault"
 ],
 "x86_exception_query_interface_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_exception_query_interface {\n    uint8 (*vector)(conf_object_t *cpu, exception_handle_t *handle);\n    x86_exception_source_t (*source)(conf_object_t *cpu, exception_handle_t *handle);\n    uint32 (*error_code)(conf_object_t *cpu, exception_handle_t *handle);\n} x86_exception_query_interface_t;"
   ]
  ],
  "s:x86_exception_query_interface_t:vector;source;error_code"
 ],
 "x86_exception_source_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Exc_Hardware,\n    X86_Exc_Software,\n    X86_Exc_External,\n    X86_Exc_Software_Debug,\n    X86_Exc_Software_Priv,\n    X86_Exc_Triple_Fault,\n    X86_Exc_NMI,\n    X86_Exc_Other_Event\n} x86_exception_source_t;"
   ]
  ],
  "e:x86_exception_source_t:X86_Exc_Hardware;X86_Exc_Software;X86_Exc_External;X86_Exc_Software_Debug;X86_Exc_Software_Priv;X86_Exc_Triple_Fault;X86_Exc_NMI;X86_Exc_Other_Event"
 ],
 "x86_exec_mode_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Exec_Mode_Real,\n    X86_Exec_Mode_V86,\n    X86_Exec_Mode_Prot,\n    X86_Exec_Mode_Compat,\n    X86_Exec_Mode_64\n} x86_exec_mode_t;"
   ]
  ],
  "e:x86_exec_mode_t:X86_Exec_Mode_Real;X86_Exec_Mode_V86;X86_Exec_Mode_Prot;X86_Exec_Mode_Compat;X86_Exec_Mode_64"
 ],
 "x86_fpu_env_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint16 cw;\n    uint16 sw;\n    uint16 tag;\n    uint16 opc;\n    uint64 last_instr_ptr;\n    uint64 last_operand_ptr;\n    uint16 last_instr_sel;\n    uint16 last_operand_sel;\n    uint32 pad;\n} x86_fpu_env_t;"
   ]
  ],
  "s:x86_fpu_env_t:cw;sw;tag;opc;last_instr_ptr;last_operand_ptr;last_instr_sel;last_operand_sel;pad"
 ],
 "x86_fpu_reg_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 low;\n    uint16 high;\n} x86_fpu_reg_t;"
   ]
  ],
  "s:x86_fpu_reg_t:low;high"
 ],
 "x86_instruction_query_interface_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_instruction_query_interface {\n    linear_address_t (*linear_address)(conf_object_t *cpu, instruction_handle_t *handle);\n} x86_instruction_query_interface_t;"
   ]
  ],
  "s:x86_instruction_query_interface_t:linear_address"
 ],
 "x86_instrumentation_subscribe_interface_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_instrumentation_subscribe_interface {\n    cpu_cb_handle_t *(*register_mode_switch_cb)(conf_object_t *cpu, conf_object_t *connection, x86_mode_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_illegal_instruction_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_instruction_decoder_cb_t cb, cpu_instruction_disassemble_cb_t disass_cb, lang_void *data);\n} x86_instrumentation_subscribe_interface_t;"
   ]
  ],
  "s:x86_instrumentation_subscribe_interface_t:register_mode_switch_cb;register_illegal_instruction_cb"
 ],
 "x86_instrumentation_subscribe_v2_interface_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_instrumentation_subscribe_v2_interface {\n    cpu_cb_handle_t *(*register_mode_enter_cb)(conf_object_t *cpu, conf_object_t *connection, x86_mode_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_mode_leave_cb)(conf_object_t *cpu, conf_object_t *connection, x86_mode_switch_cb_t cb, lang_void *user_data);\n    cpu_cb_handle_t *(*register_illegal_instruction_cb)(conf_object_t *NOTNULL cpu, conf_object_t *connection, cpu_instruction_decoder_cb_t cb, cpu_instruction_disassemble_cb_t disass_cb, lang_void *data);\n} x86_instrumentation_subscribe_v2_interface_t;"
   ]
  ],
  "s:x86_instrumentation_subscribe_v2_interface_t:register_mode_enter_cb;register_mode_leave_cb;register_illegal_instruction_cb"
 ],
 "x86_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_interface {\n    void (*set_pin_status)(conf_object_t *obj, x86_pin_t pin, int status);\n    void (*start_up)(conf_object_t *obj, uint32 start_address);\n    int (*interrupt)(conf_object_t *obj, int (*ack)(conf_object_t *obj), conf_object_t *data);\n    void (*uninterrupt)(conf_object_t *obj, int (*ack)(conf_object_t *obj));\n    int (*has_pending_interrupt)(conf_object_t *obj);\n    int (*has_waiting_interrupt)(conf_object_t *obj);\n    tagged_linear_address_t (*logical_to_linear)(conf_object_t *obj, int segment, logical_address_t addr);\n    physical_address_t (*linear_to_physical)(conf_object_t *obj, data_or_instr_t d_or_i, linear_address_t addr);\n    void (*enter_acpi_c2_state)(conf_object_t *obj);\n} x86_interface_t;"
   ]
  ],
  "s:x86_interface_t:set_pin_status;start_up;interrupt;uninterrupt;has_pending_interrupt;has_waiting_interrupt;logical_to_linear;linear_to_physical;enter_acpi_c2_state"
 ],
 "x86_intstate_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Intstate_Not_Blocking        = 0,\n    X86_Intstate_Blocking_INT_Sti    = 1,\n    X86_Intstate_Blocking_INT_Mov_Ss = 2,\n    X86_Intstate_Blocking_INIT       = 4,\n    X86_Intstate_Blocking_SMI        = 8,\n    X86_Intstate_Blocking_NMI        = 16\n} x86_intstate_t;"
   ]
  ],
  "e:x86_intstate_t:X86_Intstate_Not_Blocking;X86_Intstate_Blocking_INT_Sti;X86_Intstate_Blocking_INT_Mov_Ss;X86_Intstate_Blocking_INIT;X86_Intstate_Blocking_SMI;X86_Intstate_Blocking_NMI"
 ],
 "x86_memory_access_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_memory_access_interface {\n    uint64 (*read_logical)(conf_object_t *cpu, logical_address_t offs, x86_seg_t seg, unsigned len, x86_processor_mode_t mode, x86_access_type_t access_type);\n    void (*read_logical_buf)(conf_object_t *cpu, logical_address_t offs, x86_seg_t seg, unsigned len, void *p, x86_processor_mode_t mode, x86_access_type_t access_type, x86_alignment_t alignment);\n    void (*write_logical)(conf_object_t *cpu, logical_address_t offs, x86_seg_t seg, unsigned len, uint64 val, x86_processor_mode_t mode, x86_access_type_t access_type);\n    void (*write_logical_buf)(conf_object_t *cpu, logical_address_t offs, x86_seg_t seg, unsigned len, const void *p, x86_processor_mode_t mode, x86_access_type_t access_type, x86_alignment_t alignment);\n} x86_memory_access_interface_t;"
   ]
  ],
  "s:x86_memory_access_interface_t:read_logical;read_logical_buf;write_logical;write_logical_buf"
 ],
 "x86_memory_operation_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_memory_operation_interface {\n    uint64 (*read_logical)(conf_object_t *cpu, x86_seg_t seg, logical_address_t offs, unsigned size, x86_processor_mode_t mode, x86_access_type_t access_type);\n    void (*read_logical_buf)(conf_object_t *cpu, uint8 *dst, x86_seg_t seg, logical_address_t offs, unsigned size, x86_processor_mode_t mode, x86_access_type_t access_type);\n    void (*write_logical)(conf_object_t *cpu, uint64 val, x86_seg_t seg, logical_address_t offs, unsigned size, x86_processor_mode_t mode, x86_access_type_t access_type);\n    void (*write_logical_buf)(conf_object_t *cpu, const uint8 *src, x86_seg_t seg, logical_address_t offs, unsigned size, x86_processor_mode_t mode, x86_access_type_t access_type);\n    x86_read_physical_ret_t (*read_physical)(conf_object_t *cpu, physical_address_t address, unsigned size, x86_access_type_t access_type);\n    exception_type_t (*read_physical_buf)(conf_object_t *cpu, uint8 *dst, physical_address_t address, unsigned size, x86_access_type_t access_type);\n    exception_type_t (*write_physical)(conf_object_t *cpu, uint64 val, physical_address_t address, unsigned size, x86_access_type_t access_type);\n    exception_type_t (*write_physical_buf)(conf_object_t *cpu, const uint8 *src, physical_address_t address, unsigned size, x86_access_type_t access_type);\n} x86_memory_operation_interface_t;"
   ]
  ],
  "s:x86_memory_operation_interface_t:read_logical;read_logical_buf;write_logical;write_logical_buf;read_physical;read_physical_buf;write_physical;write_physical_buf"
 ],
 "x86_memory_or_io_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Memory,\n    X86_IO\n} x86_memory_or_io_t;"
   ]
  ],
  "e:x86_memory_or_io_t:X86_Memory;X86_IO"
 ],
 "x86_memory_query_interface_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_memory_query_interface {\n    linear_address_t (*linear_address)(conf_object_t *cpu, memory_handle_t *handle);\n    x86_seg_t (*segment)(conf_object_t *cpu, memory_handle_t *handle);\n    x86_access_type_t (*access_type)(conf_object_t *obj, memory_handle_t *handle);\n    x86_memory_type_t (*memory_type)(conf_object_t *obj, memory_handle_t *handle);\n} x86_memory_query_interface_t;"
   ]
  ],
  "s:x86_memory_query_interface_t:linear_address;segment;access_type;memory_type"
 ],
 "x86_memory_transaction_t": [
  "arch/x86-memop.h",
  "arch/x86-memop.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_memory_transaction {\n    generic_transaction_t s;\n    linear_address_t linear_address;\n    physical_address_t guest_physical_address;\n    uint16 segnum;\n    uint16 access_linear : 1;\n    uint16 io : 1;\n    uint16 fault_as_if_write : 1;\n    uint16 guest_phys_valid : 1;\n    processor_mode_t mode;\n    x86_access_type_t access_type;\n    x86_memory_type_t pat_type;\n    x86_memory_type_t mtrr_type;\n    x86_memory_type_t effective_type;\n    int sequence_number;\n} x86_memory_transaction_t;"
   ]
  ],
  "s:x86_memory_transaction_t:s;linear_address;guest_physical_address;segnum;access_linear;io;fault_as_if_write;guest_phys_valid;mode;access_type;pat_type;mtrr_type;effective_type;sequence_number"
 ],
 "x86_memory_type_t": [
  "arch/x86-memop.h",
  "arch/x86-memop.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_None,\n    X86_Strong_Uncacheable,\n    X86_Uncacheable,\n    X86_Write_Combining,\n    X86_Write_Through,\n    X86_Write_Back,\n    X86_Write_Protected\n} x86_memory_type_t;"
   ]
  ],
  "e:x86_memory_type_t:X86_None;X86_Strong_Uncacheable;X86_Uncacheable;X86_Write_Combining;X86_Write_Through;X86_Write_Back;X86_Write_Protected"
 ],
 "x86_mode_switch_cb_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef void (*x86_mode_switch_cb_t)(conf_object_t *obj, conf_object_t *cpu, x86_detailed_exec_mode_t mode, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "x86_monitor_info_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    bool armed;\n    uint64 address;\n    uint64 extensions;\n    uint64 hints;\n} x86_monitor_info_t;"
   ]
  ],
  "s:x86_monitor_info_t:armed;address;extensions;hints"
 ],
 "x86_msr_access_type_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_X86_Msr_Instruction_Access   = ...,\n    Sim_X86_Msr_Attribute_Access     = ...,\n    Sim_X86_Msr_Int_Register_Access  = ...,\n    Sim_X86_Msr_VMX_Access,\n    Sim_X86_Msr_Architectural_Access\n} x86_msr_access_type_t;"
   ]
  ],
  "e:x86_msr_access_type_t:Sim_X86_Msr_Instruction_Access;Sim_X86_Msr_Attribute_Access;Sim_X86_Msr_Int_Register_Access;Sim_X86_Msr_VMX_Access;Sim_X86_Msr_Architectural_Access"
 ],
 "x86_msr_getter_func_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef x86_msr_getter_ret_t (*x86_msr_getter_func_t)(conf_object_t *cpu, int64 number, x86_msr_access_type_t type, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "x86_msr_getter_ret_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    x86_msr_ret_t status;\n    uint64 value;\n} x86_msr_getter_ret_t;"
   ]
  ],
  "s:x86_msr_getter_ret_t:status;value"
 ],
 "x86_msr_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_msr_interface {\n    void (*register_handlers)(conf_object_t *cpu, int64 number, x86_msr_getter_func_t getter, lang_void *getter_data, x86_msr_setter_func_t setter, lang_void *setter_data, const char *name);\n    void (*unregister_handlers)(conf_object_t *cpu, int64 number);\n    x86_msr_getter_ret_t (*get)(conf_object_t *cpu, int64 number, x86_msr_access_type_t type);\n    x86_msr_ret_t (*set)(conf_object_t *cpu, int64 number, uint64 value, x86_msr_access_type_t type);\n    const char *(*get_name)(conf_object_t *cpu, int64 number);\n    int64 (*get_number)(conf_object_t *cpu, const char *name);\n    attr_value_t (*get_all_valid_numbers)(conf_object_t *cpu);\n} x86_msr_interface_t;"
   ]
  ],
  "s:x86_msr_interface_t:register_handlers;unregister_handlers;get;set;get_name;get_number;get_all_valid_numbers"
 ],
 "x86_msr_ret_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Sim_X86_Msr_Ok          = ...,\n    Sim_X86_Msr_GP_Fault,\n    Sim_X86_Msr_Not_Handled\n} x86_msr_ret_t;"
   ]
  ],
  "e:x86_msr_ret_t:Sim_X86_Msr_Ok;Sim_X86_Msr_GP_Fault;Sim_X86_Msr_Not_Handled"
 ],
 "x86_msr_setter_func_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef x86_msr_ret_t (*x86_msr_setter_func_t)(conf_object_t *cpu, int64 spr_number, uint64 value, x86_msr_access_type_t type, lang_void *user_data);"
   ]
  ],
  "t"
 ],
 "x86_mwait_info_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 extensions;\n    uint64 hints;\n} x86_mwait_info_t;"
   ]
  ],
  "s:x86_mwait_info_t:extensions;hints"
 ],
 "x86_pending_debug_exc_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    bool pending;\n    uint64 pending_dr6;\n} x86_pending_debug_exc_t;"
   ]
  ],
  "s:x86_pending_debug_exc_t:pending;pending_dr6"
 ],
 "x86_pin_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Pin_Init,\n    Pin_Smi,\n    Pin_Nmi,\n    Pin_Ignne,\n    Pin_Mcerr,\n    Pin_Cmci\n} x86_pin_t;"
   ]
  ],
  "e:x86_pin_t:Pin_Init;Pin_Smi;Pin_Nmi;Pin_Ignne;Pin_Mcerr;Pin_Cmci"
 ],
 "x86_pkg_cstate_interface_t": [
  "devs/x86-cstate-iface.h",
  "devs/x86-cstate-iface.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_pkg_cstate_interface {\n    x86_cstate_t (*get_pkg_cstate)(conf_object_t *cpu_obj);\n    void (*set_pkg_cstate)(conf_object_t *cpu_obj, uint32 state, uint32 sub_state);\n    void (*pkg_cstate_update)(conf_object_t *cpu_obj, bool notify);\n} x86_pkg_cstate_interface_t;"
   ]
  ],
  "s:x86_pkg_cstate_interface_t:get_pkg_cstate;set_pkg_cstate;pkg_cstate_update"
 ],
 "x86_processor_mode_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Processor_Mode_Privileged,\n    X86_Processor_Mode_User,\n    X86_Processor_Mode_Current\n} x86_processor_mode_t;"
   ]
  ],
  "e:x86_processor_mode_t:X86_Processor_Mode_Privileged;X86_Processor_Mode_User;X86_Processor_Mode_Current"
 ],
 "x86_read_physical_ret_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 value;\n    exception_type_t exception;\n} x86_read_physical_ret_t;"
   ]
  ],
  "s:x86_read_physical_ret_t:value;exception"
 ],
 "x86_reg_access_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_reg_access_interface {\n    uint64 (*get_gpr)(conf_object_t *cpu, unsigned index);\n    void (*set_gpr)(conf_object_t *cpu, unsigned index, uint64 val);\n    uint64 (*get_rip)(conf_object_t *cpu);\n    void (*set_rip)(conf_object_t *cpu, uint64 rip);\n    uint64 (*get_rflags)(conf_object_t *cpu);\n    void (*set_rflags)(conf_object_t *cpu, uint64 rflags);\n    void (*set_status_flags)(conf_object_t *cpu, uint16 flags);\n    x86_seg_reg_t (*get_seg)(conf_object_t *cpu, x86_seg_t n);\n    void (*set_seg)(conf_object_t *cpu, x86_seg_t n, x86_seg_reg_t seg);\n    x86_system_seg_reg_t (*get_system_seg)(conf_object_t *cpu, x86_system_seg_t n);\n    void (*set_system_seg)(conf_object_t *cpu, x86_system_seg_t n, x86_system_seg_reg_t seg);\n    uint64 (*get_cr)(conf_object_t *cpu, x86_cr_t n);\n    void (*set_cr)(conf_object_t *cpu, x86_cr_t n, uint64 val);\n    uint64 (*get_efer)(conf_object_t *cpu);\n    void (*set_efer)(conf_object_t *cpu, uint64 efer);\n    uint64 (*get_xcr)(conf_object_t *cpu, x86_xcr_t n);\n    void (*set_xcr)(conf_object_t *cpu, x86_xcr_t n, uint64 val);\n    x86_fpu_reg_t (*get_freg)(conf_object_t *cpu, unsigned index);\n    void (*set_freg)(conf_object_t *cpu, unsigned index, x86_fpu_reg_t freg);\n    x86_fpu_env_t (*get_fpu_env)(conf_object_t *cpu);\n    void (*set_fpu_env)(conf_object_t *cpu, x86_fpu_env_t state);\n    xmm_reg_t (*get_xmm)(conf_object_t *cpu, unsigned index);\n    void (*set_xmm)(conf_object_t *cpu, unsigned index, xmm_reg_t val);\n    ymm_reg_t (*get_ymm)(conf_object_t *cpu, unsigned index);\n    void (*set_ymm)(conf_object_t *cpu, unsigned index, ymm_reg_t val);\n    uint32 (*get_mxcsr)(conf_object_t *cpu);\n    void (*set_mxcsr)(conf_object_t *cpu, uint32 mxcsr);\n    uint64 (*get_dr)(conf_object_t *cpu, x86_dr_t n);\n    void (*set_dr)(conf_object_t *cpu, x86_dr_t n, uint64 val);\n    bool (*get_in_smm)(conf_object_t *cpu);\n    void (*set_in_smm)(conf_object_t *cpu, bool val);\n    uint64 (*get_smm_base)(conf_object_t *cpu);\n    void (*set_smm_base)(conf_object_t *cpu, uint64 val);\n    x86_monitor_info_t (*get_monitor_info)(conf_object_t *cpu);\n    void (*set_monitor_info)(conf_object_t *cpu, x86_monitor_info_t val);\n    x86_mwait_info_t (*get_mwait_info)(conf_object_t *cpu);\n    void (*set_mwait_info)(conf_object_t *cpu, x86_mwait_info_t val);\n    x86_activity_t (*get_activity_state)(conf_object_t *cpu);\n    void (*set_activity_state)(conf_object_t *cpu, x86_activity_t val);\n    x86_intstate_t (*get_interruptibility_state)(conf_object_t *cpu);\n    void (*set_interruptibility_state)(conf_object_t *cpu, x86_intstate_t val);\n    x86_pending_debug_exc_t (*get_pending_debug_exc)(conf_object_t *cpu);\n    void (*set_pending_debug_exc)(conf_object_t *cpu, x86_pending_debug_exc_t val);\n    x86_xmode_info_t (*get_xmode_info)(conf_object_t *cpu);\n    x86_exec_mode_t (*get_exec_mode)(conf_object_t *cpu);\n    uint32 (*get_mxcsr_mask)(conf_object_t *cpu);\n    uint64 (*get_ext_state_dirty_bits)(conf_object_t *cpu);\n    void (*or_ext_state_dirty_bits)(conf_object_t *cpu, uint64 dirty_bits);\n    void (*and_ext_state_dirty_bits)(conf_object_t *cpu, uint64 dirty_bits);\n    uint64 (*get_pdpte)(conf_object_t *cpu, int num);\n    void (*set_pdpte)(conf_object_t *cpu, int num, uint64 val);\n    uint32 (*get_vmx_mode)(conf_object_t *cpu);\n} x86_reg_access_interface_t;"
   ]
  ],
  "s:x86_reg_access_interface_t:get_gpr;set_gpr;get_rip;set_rip;get_rflags;set_rflags;set_status_flags;get_seg;set_seg;get_system_seg;set_system_seg;get_cr;set_cr;get_efer;set_efer;get_xcr;set_xcr;get_freg;set_freg;get_fpu_env;set_fpu_env;get_xmm;set_xmm;get_ymm;set_ymm;get_mxcsr;set_mxcsr;get_dr;set_dr;get_in_smm;set_in_smm;get_smm_base;set_smm_base;get_monitor_info;set_monitor_info;get_mwait_info;set_mwait_info;get_activity_state;set_activity_state;get_interruptibility_state;set_interruptibility_state;get_pending_debug_exc;set_pending_debug_exc;get_xmode_info;get_exec_mode;get_mxcsr_mask;get_ext_state_dirty_bits;or_ext_state_dirty_bits;and_ext_state_dirty_bits;get_pdpte;set_pdpte;get_vmx_mode"
 ],
 "x86_register_id_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Reg_Id_Rax       = 0,\n    X86_Reg_Id_Rcx       = 1,\n    X86_Reg_Id_Rdx       = 2,\n    X86_Reg_Id_Rbx       = 3,\n    X86_Reg_Id_Rsp       = 4,\n    X86_Reg_Id_Rbp       = 5,\n    X86_Reg_Id_Rsi       = 6,\n    X86_Reg_Id_Rdi       = 7,\n    X86_Reg_Id_R8        = 8,\n    X86_Reg_Id_R9        = 9,\n    X86_Reg_Id_R10       = 10,\n    X86_Reg_Id_R11       = 11,\n    X86_Reg_Id_R12       = 12,\n    X86_Reg_Id_R13       = 13,\n    X86_Reg_Id_R14       = 14,\n    X86_Reg_Id_R15       = 15,\n    X86_Reg_Id_Xmm0      = 16,\n    X86_Reg_Id_Xmm1      = 17,\n    X86_Reg_Id_Xmm2      = 18,\n    X86_Reg_Id_Xmm3      = 19,\n    X86_Reg_Id_Xmm4      = 20,\n    X86_Reg_Id_Xmm5      = 21,\n    X86_Reg_Id_Xmm6      = 22,\n    X86_Reg_Id_Xmm7      = 23,\n    X86_Reg_Id_Xmm8      = 24,\n    X86_Reg_Id_Xmm9      = 25,\n    X86_Reg_Id_Xmm10     = 26,\n    X86_Reg_Id_Xmm11     = 27,\n    X86_Reg_Id_Xmm12     = 28,\n    X86_Reg_Id_Xmm13     = 29,\n    X86_Reg_Id_Xmm14     = 30,\n    X86_Reg_Id_Xmm15     = 31,\n    X86_Reg_Id_Mm0       = 32,\n    X86_Reg_Id_Mm1       = 33,\n    X86_Reg_Id_Mm2       = 34,\n    X86_Reg_Id_Mm3       = 35,\n    X86_Reg_Id_Mm4       = 36,\n    X86_Reg_Id_Mm5       = 37,\n    X86_Reg_Id_Mm6       = 38,\n    X86_Reg_Id_Mm7       = 39,\n    X86_Reg_Id_PC        = 40,\n    X86_Reg_Id_CF        = 41,\n    X86_Reg_Id_DST       = 42,\n    X86_Reg_Id_AF        = 43,\n    X86_Reg_Id_ZF        = 44,\n    X86_Reg_Id_SF        = 45,\n    X86_Reg_Id_OF        = 46,\n    X86_Reg_Id_DF        = 47,\n    X86_Reg_Id_EFLAGS    = 48,\n    X86_Reg_Id_C0        = 49,\n    X86_Reg_Id_C1        = 50,\n    X86_Reg_Id_C2        = 51,\n    X86_Reg_Id_C3        = 52,\n    X86_Reg_Id_Top       = 53,\n    X86_Reg_Id_Not_Used,\n    X86_Reg_Id_Local_Max\n} x86_register_id_t;"
   ]
  ],
  "e:x86_register_id_t:X86_Reg_Id_Rax;X86_Reg_Id_Rcx;X86_Reg_Id_Rdx;X86_Reg_Id_Rbx;X86_Reg_Id_Rsp;X86_Reg_Id_Rbp;X86_Reg_Id_Rsi;X86_Reg_Id_Rdi;X86_Reg_Id_R8;X86_Reg_Id_R9;X86_Reg_Id_R10;X86_Reg_Id_R11;X86_Reg_Id_R12;X86_Reg_Id_R13;X86_Reg_Id_R14;X86_Reg_Id_R15;X86_Reg_Id_Xmm0;X86_Reg_Id_Xmm1;X86_Reg_Id_Xmm2;X86_Reg_Id_Xmm3;X86_Reg_Id_Xmm4;X86_Reg_Id_Xmm5;X86_Reg_Id_Xmm6;X86_Reg_Id_Xmm7;X86_Reg_Id_Xmm8;X86_Reg_Id_Xmm9;X86_Reg_Id_Xmm10;X86_Reg_Id_Xmm11;X86_Reg_Id_Xmm12;X86_Reg_Id_Xmm13;X86_Reg_Id_Xmm14;X86_Reg_Id_Xmm15;X86_Reg_Id_Mm0;X86_Reg_Id_Mm1;X86_Reg_Id_Mm2;X86_Reg_Id_Mm3;X86_Reg_Id_Mm4;X86_Reg_Id_Mm5;X86_Reg_Id_Mm6;X86_Reg_Id_Mm7;X86_Reg_Id_PC;X86_Reg_Id_CF;X86_Reg_Id_DST;X86_Reg_Id_AF;X86_Reg_Id_ZF;X86_Reg_Id_SF;X86_Reg_Id_OF;X86_Reg_Id_DF;X86_Reg_Id_EFLAGS;X86_Reg_Id_C0;X86_Reg_Id_C1;X86_Reg_Id_C2;X86_Reg_Id_C3;X86_Reg_Id_Top;X86_Reg_Id_Not_Used;X86_Reg_Id_Local_Max"
 ],
 "x86_seg_reg_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    bool valid;\n    uint16 sel;\n    uint64 base;\n    uint32 attr;\n    uint32 limit;\n} x86_seg_reg_t;"
   ]
  ],
  "s:x86_seg_reg_t:valid;sel;base;attr;limit"
 ],
 "x86_seg_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Seg_ES,\n    X86_Seg_CS,\n    X86_Seg_SS,\n    X86_Seg_DS,\n    X86_Seg_FS,\n    X86_Seg_GS,\n    X86_Seg_LDTR,\n    X86_Seg_TR,\n    X86_Seg_None\n} x86_seg_t;"
   ]
  ],
  "e:x86_seg_t:X86_Seg_ES;X86_Seg_CS;X86_Seg_SS;X86_Seg_DS;X86_Seg_FS;X86_Seg_GS;X86_Seg_LDTR;X86_Seg_TR;X86_Seg_None"
 ],
 "x86_smm_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_smm_interface {\n    void (*save_state)(conf_object_t *obj, conf_object_t *cpu);\n    void (*restore_state)(conf_object_t *obj, conf_object_t *cpu);\n} x86_smm_interface_t;"
   ]
  ],
  "s:x86_smm_interface_t:save_state;restore_state"
 ],
 "x86_smm_state_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_smm_state_interface {\n    void (*get_state)(conf_object_t *cpu, smm_reg_state_t *state);\n    void (*set_state)(conf_object_t *cpu, const smm_reg_state_t *state);\n    uint64 (*smram_read)(conf_object_t *obj, unsigned smram_offs, unsigned len);\n    void (*smram_write)(conf_object_t *obj, unsigned smram_offs, unsigned len, uint64 val);\n} x86_smm_state_interface_t;"
   ]
  ],
  "s:x86_smm_state_interface_t:get_state;set_state;smram_read;smram_write"
 ],
 "x86_stream_enum_t": [
  "arch/x86-instrumentation.h",
  "arch/x86-instrumentation.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Stream_Instruction_LA       = ...,\n    X86_Stream_Instruction_LA_After,\n    X86_Stream_Read_Memory,\n    X86_Stream_Write_Memory,\n    X86_Stream_Last\n} x86_stream_enum_t;"
   ]
  ],
  "e:x86_stream_enum_t:X86_Stream_Instruction_LA;X86_Stream_Instruction_LA_After;X86_Stream_Read_Memory;X86_Stream_Write_Memory;X86_Stream_Last"
 ],
 "x86_sync_instruction_type_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_SFence = 1,\n    X86_LFence = 2,\n    X86_MFence = 3\n} x86_sync_instruction_type_t;"
   ]
  ],
  "e:x86_sync_instruction_type_t:X86_SFence;X86_LFence;X86_MFence"
 ],
 "x86_system_seg_reg_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 base;\n    uint16 limit;\n} x86_system_seg_reg_t;"
   ]
  ],
  "s:x86_system_seg_reg_t:base;limit"
 ],
 "x86_system_seg_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Gdtr,\n    X86_Idtr\n} x86_system_seg_t;"
   ]
  ],
  "e:x86_system_seg_t:X86_Gdtr;X86_Idtr"
 ],
 "x86_tlb_attrs_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    access_t supervisor_access;\n    access_t user_access;\n    bool global_page;\n    x86_memory_type_t pat_type;\n    x86_memory_type_t mtrr_type;\n    unsigned page_size_k;\n} x86_tlb_attrs_t;"
   ]
  ],
  "s:x86_tlb_attrs_t:supervisor_access;user_access;global_page;pat_type;mtrr_type;page_size_k"
 ],
 "x86_tlb_attrs_v3_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 pte_attrs;\n    x86_memory_type_t pat_type;\n    x86_memory_type_t mtrr_type;\n    unsigned page_size_k;\n} x86_tlb_attrs_v3_t;"
   ]
  ],
  "s:x86_tlb_attrs_v3_t:pte_attrs;pat_type;mtrr_type;page_size_k"
 ],
 "x86_tlb_entry_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    linear_address_t linear_page_start;\n    physical_address_t physical_page_start;\n    x86_tlb_attrs_t attrs;\n} x86_tlb_entry_t;"
   ]
  ],
  "s:x86_tlb_entry_t:linear_page_start;physical_page_start;attrs"
 ],
 "x86_tlb_entry_v3_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    linear_address_t linear_page_start;\n    physical_address_t physical_page_start;\n    x86_tlb_attrs_v3_t attrs;\n} x86_tlb_entry_v3_t;"
   ]
  ],
  "s:x86_tlb_entry_v3_t:linear_page_start;physical_page_start;attrs"
 ],
 "x86_tlb_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_tlb_interface {\n    void (*flush_all)(conf_object_t *obj, int keep_global_entries);\n    void (*flush_page)(conf_object_t *obj, linear_address_t laddr);\n    int (*lookup)(conf_object_t *obj, x86_memory_transaction_t *mem_tr);\n    void (*add)(conf_object_t *obj, processor_mode_t mode, read_or_write_t read_or_write, data_or_instr_t data_or_instr, int global_page, x86_memory_type_t pat_type, x86_memory_type_t mtrr_type, linear_address_t laddr, physical_address_t paddr, int page_size);\n    tagged_physical_address_t (*itlb_lookup)(conf_object_t *obj, linear_address_t laddr, processor_mode_t mode);\n    void (*set_pae_mode)(conf_object_t *obj, bool pae_mode);\n} x86_tlb_interface_t;"
   ]
  ],
  "s:x86_tlb_interface_t:flush_all;flush_page;lookup;add;itlb_lookup;set_pae_mode"
 ],
 "x86_tlb_inv_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Tlb_Invalidate_Page                    = 0,\n    X86_Tlb_Invalidate_Address_Space           = 4,\n    X86_Tlb_Invalidate_Address_Space_NonGlobal = 1,\n    X86_Tlb_Invalidate_All                     = 2,\n    X86_Tlb_Invalidate_All_NonGlobal           = 3\n} x86_tlb_inv_t;"
   ]
  ],
  "e:x86_tlb_inv_t:X86_Tlb_Invalidate_Page;X86_Tlb_Invalidate_Address_Space;X86_Tlb_Invalidate_Address_Space_NonGlobal;X86_Tlb_Invalidate_All;X86_Tlb_Invalidate_All_NonGlobal"
 ],
 "x86_tlb_v2_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_tlb_v2_interface {\n    void (*flush_all)(conf_object_t *obj, int keep_global_entries);\n    void (*flush_page)(conf_object_t *obj, linear_address_t laddr);\n    const x86_tlb_entry_t *(*lookup)(conf_object_t *obj, x86_memory_transaction_t *mem_tr);\n    void (*add)(conf_object_t *obj, linear_address_t laddr, physical_address_t paddr, x86_tlb_attrs_t attrs);\n    tagged_physical_address_t (*itlb_lookup)(conf_object_t *obj, linear_address_t laddr, processor_mode_t mode);\n} x86_tlb_v2_interface_t;"
   ]
  ],
  "s:x86_tlb_v2_interface_t:flush_all;flush_page;lookup;add;itlb_lookup"
 ],
 "x86_tlb_v3_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_tlb_v3_interface {\n    void (*add)(conf_object_t *obj, uint64 hint, linear_address_t laddr, physical_address_t paddr, x86_tlb_attrs_v3_t attrs);\n    const x86_tlb_entry_v3_t *(*lookup)(conf_object_t *obj, uint64 hint, x86_memory_transaction_t *mem_tr);\n    tagged_physical_address_t (*itlb_lookup)(conf_object_t *obj, uint64 hint, linear_address_t laddr, processor_mode_t mode);\n    void (*invalidate_page)(conf_object_t *obj, uint64 hint, linear_address_t laddr);\n    void (*invalidate)(conf_object_t *obj, uint32 type, uint64 hint, linear_address_t la);\n} x86_tlb_v3_interface_t;"
   ]
  ],
  "s:x86_tlb_v3_interface_t:add;lookup;itlb_lookup;invalidate_page;invalidate"
 ],
 "x86_vmp_control_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct x86_vmp_control_interface {\n    unsigned (*get_block_count)(conf_object_t *cpu);\n    void (*set_block_count)(conf_object_t *cpu, unsigned cnt);\n} x86_vmp_control_interface_t;"
   ]
  ],
  "s:x86_vmp_control_interface_t:get_block_count;set_block_count"
 ],
 "x86_xcr_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    X86_Xcr0 = 0\n} x86_xcr_t;"
   ]
  ],
  "e:x86_xcr_t:X86_Xcr0"
 ],
 "x86_xmode_info_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    bool efer_lma;\n    bool cs_l;\n    bool cs_d;\n    bool ss_b;\n} x86_xmode_info_t;"
   ]
  ],
  "s:x86_xmode_info_t:efer_lma;cs_l;cs_d;ss_b"
 ],
 "xed_access_interface_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xed_access_interface {\n    int (*get_last)(conf_object_t *obj, xed_data_type_t type);\n    int (*decode)(conf_object_t *obj, xed_data_type_t type, bytes_t bytes);\n    const char *(*to_string)(conf_object_t *obj, xed_data_type_t type, int value);\n} xed_access_interface_t;"
   ]
  ],
  "s:xed_access_interface_t:get_last;decode;to_string"
 ],
 "xed_data_type_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Xed_Iform\n} xed_data_type_t;"
   ]
  ],
  "e:xed_data_type_t:Xed_Iform"
 ],
 "xmm_reg_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 lo64;\n    uint64 hi64;\n} xmm_reg_t;"
   ]
  ],
  "s:xmm_reg_t:lo64;hi64"
 ],
 "xtensa_export_state_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_export_state_interface {\n    void (*register_export_state)(conf_object_t *obj, lang_void *user_object, lang_void *export_state_func);\n} xtensa_export_state_interface_t;"
   ]
  ],
  "s:xtensa_export_state_interface_t:register_export_state"
 ],
 "xtensa_import_wire_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_import_wire_interface {\n    void (*register_import_wire)(conf_object_t *obj, lang_void *user_object, lang_void *import_wire_func);\n} xtensa_import_wire_interface_t;"
   ]
  ],
  "s:xtensa_import_wire_interface_t:register_import_wire"
 ],
 "xtensa_input_queue_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_input_queue_interface {\n    void (*register_input_queue)(conf_object_t *obj, lang_void *user_object, lang_void *empty_callback, lang_void *data_callback);\n} xtensa_input_queue_interface_t;"
   ]
  ],
  "s:xtensa_input_queue_interface_t:register_input_queue"
 ],
 "xtensa_internal_memories_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_internal_memories_interface {\n    attr_value_t (*iram_mappings)(conf_object_t *obj);\n    attr_value_t (*irom_mappings)(conf_object_t *obj);\n    attr_value_t (*dram_mappings)(conf_object_t *obj);\n    attr_value_t (*drom_mappings)(conf_object_t *obj);\n} xtensa_internal_memories_interface_t;"
   ]
  ],
  "s:xtensa_internal_memories_interface_t:iram_mappings;irom_mappings;dram_mappings;drom_mappings"
 ],
 "xtensa_lookup_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_lookup_interface {\n    void (*register_lookup)(conf_object_t *obj, lang_void *user_object, lang_void *lookup_func);\n} xtensa_lookup_interface_t;"
   ]
  ],
  "s:xtensa_lookup_interface_t:register_lookup"
 ],
 "xtensa_memory_transaction_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_memory_transaction {\n    generic_transaction_t s;\n} xtensa_memory_transaction_t;"
   ]
  ],
  "s:xtensa_memory_transaction_t:s"
 ],
 "xtensa_mpu_lookup_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_mpu_lookup_interface {\n    xtensa_mpu_lookup_t (*mpu_region)(conf_object_t *obj, uint32 address);\n} xtensa_mpu_lookup_interface_t;"
   ]
  ],
  "s:xtensa_mpu_lookup_interface_t:mpu_region"
 ],
 "xtensa_mpu_lookup_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_mpu_lookup {\n    bool background;\n    uint16 region;\n    uint32 start;\n    uint32 end;\n    bool sr;\n    bool sw;\n    bool sx;\n    bool ur;\n    bool uw;\n    bool ux;\n} xtensa_mpu_lookup_t;"
   ]
  ],
  "s:xtensa_mpu_lookup_t:background;region;start;end;sr;sw;sx;ur;uw;ux"
 ],
 "xtensa_output_queue_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_output_queue_interface {\n    void (*register_output_queue)(conf_object_t *obj, lang_void *user_object, lang_void *full_callback, lang_void *data_callback);\n} xtensa_output_queue_interface_t;"
   ]
  ],
  "s:xtensa_output_queue_interface_t:register_output_queue"
 ],
 "xtensa_tie_export_state_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_tie_export_state_interface {\n    void (*data)(conf_object_t *obj, uint32 bit_width, const uint32 *out_data);\n} xtensa_tie_export_state_interface_t;"
   ]
  ],
  "s:xtensa_tie_export_state_interface_t:data"
 ],
 "xtensa_tie_import_wire_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_tie_import_wire_interface {\n    void (*data)(conf_object_t *obj, uint32 bit_width, uint32 *in_data);\n} xtensa_tie_import_wire_interface_t;"
   ]
  ],
  "s:xtensa_tie_import_wire_interface_t:data"
 ],
 "xtensa_tie_input_queue_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_tie_input_queue_interface {\n    bool (*empty)(conf_object_t *obj);\n    void (*data)(conf_object_t *obj, uint32 bit_width, bool is_peek, uint32 *in_data);\n} xtensa_tie_input_queue_interface_t;"
   ]
  ],
  "s:xtensa_tie_input_queue_interface_t:empty;data"
 ],
 "xtensa_tie_lookup_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_tie_lookup_interface {\n    void (*data)(conf_object_t *obj, uint32 out_width, const uint32 *out_data, uint32 in_width, uint32 *in_data);\n} xtensa_tie_lookup_interface_t;"
   ]
  ],
  "s:xtensa_tie_lookup_interface_t:data"
 ],
 "xtensa_tie_output_queue_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_tie_output_queue_interface {\n    bool (*full)(conf_object_t *obj);\n    void (*data)(conf_object_t *obj, uint32 bit_width, bool reserve_only, const uint32 *out_data);\n} xtensa_tie_output_queue_interface_t;"
   ]
  ],
  "s:xtensa_tie_output_queue_interface_t:full;data"
 ],
 "xtensa_wwdt_config_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_wwdt_config_interface {\n    bool (*has_wwdt)(conf_object_t *obj);\n    uint32 (*reset_val)(conf_object_t *obj);\n    uint32 (*hb_reset_val)(conf_object_t *obj);\n    uint32 (*ikey)(conf_object_t *obj);\n    uint32 (*bkey)(conf_object_t *obj);\n    uint32 (*rkey)(conf_object_t *obj);\n    uint32 (*kkey)(conf_object_t *obj);\n    uint32 (*ekey)(conf_object_t *obj);\n    uint32 (*c1key)(conf_object_t *obj);\n    uint32 (*c2key)(conf_object_t *obj);\n    uint32 (*t1key)(conf_object_t *obj);\n    uint32 (*t2key)(conf_object_t *obj);\n} xtensa_wwdt_config_interface_t;"
   ]
  ],
  "s:xtensa_wwdt_config_interface_t:has_wwdt;reset_val;hb_reset_val;ikey;bkey;rkey;kkey;ekey;c1key;c2key;t1key;t2key"
 ],
 "xtensa_wwdt_faultinfo_interface_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct xtensa_wwdt_faultinfo_interface {\n    uint8 (*status)(conf_object_t *obj);\n} xtensa_wwdt_faultinfo_interface_t;"
   ]
  ],
  "s:xtensa_wwdt_faultinfo_interface_t:status"
 ],
 "xtensa_wwdt_faultinfo_t": [
  "arch/xtensa.h",
  "arch/xtensa.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef enum {\n    Wwdt_Info_Derr_Inj_Dis = ...,\n    Wwdt_Info_Tfv_Err      = ...,\n    Wwdt_Info_Err_Inj      = ...,\n    Wwdt_Info_Oor_Exp      = ...,\n    Wwdt_Info_Oor_Kick     = ...,\n    Wwdt_Info_Ill_Kick     = ...,\n    Wwdt_Info_Cnt_Exp      = ...,\n    Wwdt_Fault_Asserted    = ...\n} xtensa_wwdt_faultinfo_t;"
   ]
  ],
  "e:xtensa_wwdt_faultinfo_t:Wwdt_Info_Derr_Inj_Dis;Wwdt_Info_Tfv_Err;Wwdt_Info_Err_Inj;Wwdt_Info_Oor_Exp;Wwdt_Info_Oor_Kick;Wwdt_Info_Ill_Kick;Wwdt_Info_Cnt_Exp;Wwdt_Fault_Asserted"
 ],
 "ymm_reg_t": [
  "arch/x86.h",
  "arch/x86.h",
  [
   [
    [
     "6",
     "7"
    ],
    "typedef struct {\n    uint64 llo64;\n    uint64 lhi64;\n    uint64 hlo64;\n    uint64 hhi64;\n} ymm_reg_t;"
   ]
  ],
  "s:ymm_reg_t:llo64;lhi64;hlo64;hhi64"
 ]
}