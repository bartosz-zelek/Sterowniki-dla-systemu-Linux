[
  {
    "build_id": 7006,
    "version": "7.0.0",
    "notes": {
      "Breakpoint Manager": [
        [
          {
            "items": [
              [
                "Removed ",
                {
                  "code": "-reverse",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "-always",
                  "tag": "code"
                },
                " flags for ",
                {
                  "code": "wait-for",
                  "tag": "code"
                },
                " commands."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Common": [
        [
          {
            "items": [
              [
                "Simics, when launched on Linux, no longer sources the file ",
                {
                  "code": "$HOME/.simics-5.sh",
                  "tag": "code"
                },
                " (fixes SIMICS-21148)"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Error messages, e.g. from log errors or ",
                {
                  "code": "SIM_printf_error",
                  "tag": "code"
                },
                " no longer make Simics quit, but only stop the simulation."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added a warning in ",
                {
                  "code": "current-processor",
                  "tag": "code"
                },
                " since this command will be removed and should not be used. The object alias ",
                {
                  "code": "cpu",
                  "tag": "code"
                },
                " should be used instead (fixes SIMICS-20641)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Removed all commands from the ",
                {
                  "code": "Simics",
                  "tag": "code"
                },
                " service, this service should no longer be used. The actual service is still included as a provided service for compatibility reasons (fixes SIMICS-21515)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The internal ",
                {
                  "code": "SimicsCapabilities",
                  "tag": "code"
                },
                " property that was sent at connect time has been removed."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device API": [
        [
          {
            "items": [
              [
                "The interfaces ",
                {
                  "code": "i2c_device",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "i2c_link",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "i2c_bus",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "i2c_slave",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "i2c_master",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "i2c_bridge",
                  "tag": "code"
                },
                " have all been deprecated in Simics 7. Migration to interfaces ",
                {
                  "code": "i2c_master_v2",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "i2c_slave_v2",
                  "tag": "code"
                },
                " and to module ",
                {
                  "code": "i2c-link-v2",
                  "tag": "code"
                },
                " is strongly recommended (fixes SIMICS-21732)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "pci_express",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "pci_express_hotplug",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "pcie_adapter_compat_interface",
                  "tag": "code"
                },
                " interfaces have been deprecated in Simics 7. Migration to the new PCIe library is strongly recommended."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                "Improved the run-time performance of accesses to registers with many fields."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Partition Tracker": [
        [
          {
            "items": [
              [
                "Partition tracker can now handle ",
                {
                  "code": "notify_control_reg_read",
                  "tag": "code"
                },
                " in ",
                {
                  "code": "osa_machine_notification",
                  "tag": "code"
                },
                " interface."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Partition mapper will now clear state of guest instead of disabling it if it's already disabled."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7007,
    "version": "7.1.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Fixed issues reported by Coverity 2023.3.4."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Patched FMT library for various Coverity reported issues."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Updated the version of FMT library to 10.2.1."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "CAN Link": [
        [
          {
            "items": [
              [
                "Fixed a problem loading the device when using Simics as a Python module."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "CMake": [
        [
          {
            "items": [
              [
                {
                  "code": "--with-cmake",
                  "tag": "code"
                },
                " is now enabled by default when invoking ",
                {
                  "code": "project-setup",
                  "tag": "code"
                },
                " (fixes SIMICS-21810). Use ",
                {
                  "code": "--without-cmake",
                  "tag": "code"
                },
                " to skip the generation of CMake files in the project root."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added ",
                {
                  "code": "NAMESPACE",
                  "tag": "code"
                },
                " parameter to ",
                {
                  "code": "simics_add_test",
                  "tag": "code"
                },
                " function."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added project trampoline for ",
                {
                  "code": "gmake-to-cmake",
                  "tag": "code"
                },
                " converter (fixes SIMICS-21798)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Set ",
                {
                  "code": "CMAKE_OBJECT_PATH_MAX",
                  "tag": "code"
                },
                " to 1000 by default in the project top-level config. This suppresses the warning CMake emits on Windows if paths are too long."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "All messages printed during the configuration phase has been assigned different log-levels; as defined by CMake. Use the ",
                {
                  "code": "--log-level",
                  "tag": "code"
                },
                " argument to change default log-level."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Minimum CMake version bumped to 3.22"
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a bug where `SANDBOX` environment variable was overwritten by `USE_ASAN` option causing checkpoint tests to fail.."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Common": [
        [
          {
            "items": [
              [
                "Updated the batch (",
                {
                  "code": ".bat",
                  "tag": "code"
                },
                ") files in the ",
                {
                  "code": "bin",
                  "tag": "code"
                },
                " folder so that they do not leak environment variables to the current ",
                {
                  "code": "cmd.exe",
                  "tag": "code"
                },
                " command shell on Windows (fixes SIMICS-21906)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Removed frontend protocol, frontend-server, frontend-server-client and associated API functions, Python modules, interfaces and header files (fixes SIMICS-21853)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Ensure that the connector ",
                {
                  "code": "PciBusDownConnector",
                  "tag": "code"
                },
                " only sets the ",
                {
                  "code": "devices",
                  "tag": "code"
                },
                "/",
                {
                  "code": "pci_devices",
                  "tag": "code"
                },
                " attributes in the PCIe bus once."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "A bug that could lead to crashes in ",
                {
                  "code": "SIM_transaction_wait",
                  "tag": "code"
                },
                " was fixed."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Removed the arguments ",
                {
                  "children": [
                    "reverse"
                  ],
                  "tag": "em"
                },
                " and ",
                {
                  "children": [
                    "always"
                  ],
                  "tag": "em"
                },
                " from ",
                {
                  "code": "sb_wait_for_sloop_awaitable",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "sb_wait_for_snooper",
                  "tag": "code"
                },
                " (fixes SIMICS-21932)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Removed the arguments ",
                {
                  "children": [
                    "reverse"
                  ],
                  "tag": "em"
                },
                " and ",
                {
                  "children": [
                    "always"
                  ],
                  "tag": "em"
                },
                " from internal script branch functions, and added a warning when calling either ",
                {
                  "code": "check_script_branch_command",
                  "tag": "code"
                },
                " or ",
                {
                  "code": "sb_wait",
                  "tag": "code"
                },
                " with ",
                {
                  "children": [
                    "reverse"
                  ],
                  "tag": "em"
                },
                " or ",
                {
                  "children": [
                    "always"
                  ],
                  "tag": "em"
                },
                " set to a boolean value (fixes SIMICS-21932)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Image interface has change in parameters for the internal save_diff and save_to_file methods. An extra flag for image formatting is added (fixes SIMICS-21363)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added SIM_write_persistent_state (fixes SIMICS-21363)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added new command ",
                {
                  "code": "list-pcie-hierarchies",
                  "tag": "code"
                },
                " to list PCIe hierarchies in platforms."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The Windows release of Simics is now built using UCRT (previously MSVCRT). User modules originally built against MSVCRT may need to be rebuilt with a UCRT tool chain."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Deprecated the script-branch functions ",
                {
                  "code": "sb_wait_for_hap",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_notifier",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_log",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_breakpoint",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_step",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_cycle",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_time",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_global_time",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_global_sync",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_register_read",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_register_write",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_simulation_started",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_simulation_stopped",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sb_wait_for_exception",
                  "tag": "code"
                },
                ". For replacement functions, see ",
                {
                  "children": [
                    "Simics Migration Guide"
                  ],
                  "tag": "em"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a problem where Simics would quit on an error message instead of stopping the simulation."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "temporal_state",
                  "tag": "code"
                },
                " interface is deprecated. It was used to by reverse execution to support models with special needs with regards to state and reverse execution has been removed from version 7. There is still limited support for the interface from the new snapshots system, but that should not be relied upon in new code."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a memory corruption when deleting snapshots."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Datagram Link": [
        [
          {
            "items": [
              [
                "Fixed a problem loading the device when using Simics as a Python module."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Fixed handling of functions with varargs in ",
                {
                  "code": "sym-",
                  "tag": "code"
                },
                " commands and debugger API (fixes SIMINT-1608)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML)": [
        [
          {
            "items": [
              [
                "The DMLC behaviour of suppressing the warning ",
                {
                  "code": "WLOGMIXUP",
                  "tag": "code"
                },
                " by default below Simics API version 7 is now controlled by the compatibility feature ",
                {
                  "code": "suppress_WLOGMIXUP",
                  "tag": "code"
                },
                ". This is in order to increase visibility of the API-dependent behaviour, and to provide migration documentation about it. As a consequence, ",
                {
                  "code": "WLOGMIXUP",
                  "tag": "code"
                },
                " can be enabled below Simics API version 7 by passing either ",
                {
                  "code": "--warn=WLOGMIXUP",
                  "tag": "code"
                },
                " (as before) or ",
                {
                  "code": "--no-compat=suppress_WLOGMIXUP",
                  "tag": "code"
                },
                " to DMLC."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "GML Link": [
        [
          {
            "items": [
              [
                "Fixed a problem loading the device when using Simics as a Python module."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "I2C link v2": [
        [
          {
            "items": [
              [
                "Fixed a problem loading the device when using Simics as a Python module."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "I3C link": [
        [
          {
            "items": [
              [
                "Fixed a problem loading the device when using Simics as a Python module."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "IEEE 802.15.4 link": [
        [
          {
            "items": [
              [
                "Fixed a problem loading the device when using Simics as a Python module."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Added the templates ",
                {
                  "code": "pcie_link_training",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "pcie_phy",
                  "tag": "code"
                },
                " templates to the library. Endpoints and upstream ports instantiate ",
                {
                  "code": "pcie_phy",
                  "tag": "code"
                },
                ", while Downstream and Root Ports instantiate ",
                {
                  "code": "pcie_link_training",
                  "tag": "code"
                },
                ". ",
                {
                  "code": "pcie_link_training",
                  "tag": "code"
                },
                " provides the object with the capabilities to initiate link training. ",
                {
                  "code": "pcie_phy",
                  "tag": "code"
                },
                "Adds a port phy to a device which by default handles transactions with the atom ",
                {
                  "code": "pcie_link_negotiation",
                  "tag": "code"
                },
                ". The transaction handler can be expanded to handle custom atoms that are related to the physical layer."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed value of constant ",
                {
                  "code": "PCIE_DP_Type_RP",
                  "tag": "code"
                },
                " used for param ",
                {
                  "code": "dp_type",
                  "tag": "code"
                },
                " in the PCI Express capability template ",
                {
                  "code": "exp_capability",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fix bug where the value of some capability fields could not be overridden. Now the device model can override all default values of the capability registers (fixes HSD-22019242229)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Implemented native PCIe Hot-Plug"
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Split ",
                {
                  "code": "pcie_root_port",
                  "tag": "code"
                },
                " template into separate template for each PCIe Port type (",
                {
                  "code": "pcie_root_port",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "pcie_downstream_port",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "pcie_upstream_port",
                  "tag": "code"
                },
                "). The ",
                {
                  "code": "pcie_root_port",
                  "tag": "code"
                },
                " can still be used as before."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe Downstream Port": [
        [
          {
            "items": [
              [
                "Added a port phy which translates incoming transactions to the phy port in downstream devices."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Hot-Plug is now instead triggered when the devices attribute is set."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Notify upstream target of Presence Detect Changed Hot-Plug events if it is capable of handling them."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fix ",
                {
                  "code": "pcie-downstream-port-legacy",
                  "tag": "code"
                },
                " to correctly map in legacy bridges and switches into PCIe configuration space. previously only endpoints were correctly mapped into PCIe configuration space (fixes HSD-22019241133)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Signal Link": [
        [
          {
            "items": [
              [
                "Fixed a problem loading the device when using Simics as a Python module."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "SimicsFS Server": [
        [
          {
            "items": [
              [
                "On a Windows host, filter out any checks of the executable flag (0x1), because Windows does not have such a flag as far as the ",
                {
                  "code": "access",
                  "tag": "code"
                },
                " function is concerned (fixes SIMICS-21922)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Simple SCSI Disk": [
        [
          {
            "items": [
              [
                "The device will no longer assert when an inquiry command attempts to read vital product data information that is not set."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Target parameters": [
        [
          {
            "items": [
              [
                "Fixed a problem introduced in Simics-Base 6.0.162 where list type parameters could not be set explicitly as arguments to the ",
                {
                  "code": "load-target",
                  "tag": "code"
                },
                " or ",
                {
                  "code": "run-script",
                  "tag": "code"
                },
                " commands (fixes HSD-22019380014)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "load-target",
                  "tag": "code"
                },
                " command when given a invalid target and argument now reports a missing target error rather than invalid argument (fixes SIMICS-21333)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "When specifying ",
                {
                  "children": [
                    "substr"
                  ],
                  "tag": "em"
                },
                " in ",
                {
                  "code": "<script-params>.list",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "<script-params>.help",
                  "tag": "code"
                },
                ", the substring matching is performed on the flattened hierarchical parameter name (fixes SIMICS-21690)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fix problem when using ",
                {
                  "code": "params.save",
                  "tag": "code"
                },
                " and parameter references (fixes SIMICS-21733)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "VMP": [
        [
          {
            "items": [
              [
                "An issue with the compilation of VMXMON version 1.16.4 on Linux kernels 6.5 and newer was fixed (fixes SIMICS-21764)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "X2APIC (C++)": [
        [
          {
            "items": [
              [
                "Fixed a bug where ",
                {
                  "code": "sim->automatic_cell_partition=FALSE",
                  "tag": "code"
                },
                " would lead to an assertion on instantiation of an x2apic object (fixes HSD-18036198888)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "mtprof": [
        [
          {
            "items": [
              [
                "Removing output from 1 cell case in mtprof (fixes SIMINT-1607)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "standard-pcie-switch": [
        [
          {
            "items": [
              [
                "Added link attributes to the ports in the switch."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed MSI-X size bits being incorrectly set"
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Implemented Hot-Plug capability"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "standard-pcie-switch-comp": [
        [
          {
            "items": [
              [
                "Added command that presses the attention buttion of a Downstream Port Slot"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "test-runner": [
        [
          {
            "items": [
              [
                "Fixed a problem where deprecation errors did not lead to test failures."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "virtio": [
        [
          {
            "items": [
              [
                "Added link attributes to the virtio PCIe devices."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7008,
    "version": "7.2.0",
    "notes": {
      "Breakpoint Manager": [
        [
          {
            "items": [
              [
                "The breakpoint manager will not load the ",
                {
                  "code": "tcf-agent",
                  "tag": "code"
                },
                " module until it's actually used (fixes SIMICS-21609)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Fixed a bug in function ",
                {
                  "code": "overlap_range",
                  "tag": "code"
                },
                " which overflows with large offsets (fixes HSD-22019456414)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "CMake": [
        [
          {
            "items": [
              [
                "Generation of ",
                {
                  "code": "module_id.c",
                  "tag": "code"
                },
                " now depends on the ",
                {
                  "code": "CMakeLists.txt",
                  "tag": "code"
                },
                " so that any changes made to the configuration is reflected in the module metadata and forces an automatic rebuild."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Make sure only top-level .dml files are added to ",
                {
                  "code": "SOURCES",
                  "tag": "code"
                },
                " parameter of ",
                {
                  "code": "simics_add_module()",
                  "tag": "code"
                },
                ". This moves the DMLC error up from build phase into the configuration phase where it belongs and can be corrected."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                {
                  "children": [
                    "The ",
                    {
                      "code": "probes",
                      "tag": "code"
                    },
                    " feature is now officially supported. With this, some commands have been slightly changed, and the probe-related interfaces have been cleaned up."
                  ],
                  "tag": "p"
                },
                {
                  "items": [
                    [
                      "The ",
                      {
                        "code": "probe",
                        "tag": "code"
                      },
                      " definition has been improved, specifying the point in the target-system where a user can read out the value. What data is returned is defined by the ",
                      {
                        "children": [
                          {
                            "code": "probe-kind",
                            "tag": "code"
                          }
                        ],
                        "tag": "strong"
                      },
                      " which is just a string as before. For example \"cpu.cycles\" is the probe-kind found on processors, while \"cpu0:cpu.cycles\" defines the actual instance of the probe."
                    ],
                    [
                      "The concept of global probes have been removed, instead these probes are associated to some singleton objects such as ",
                      {
                        "code": "sim",
                        "tag": "code"
                      },
                      " or ",
                      {
                        "code": "host",
                        "tag": "code"
                      },
                      "."
                    ],
                    [
                      "Simics internal probes still exists, but now there is not any ",
                      {
                        "children": [
                          "-internal-probes"
                        ],
                        "tag": "em"
                      },
                      " command argument to show them. Instead internal probes automatically appear if the ",
                      {
                        "code": "\"internals\"",
                        "tag": "code"
                      },
                      " unsupported feature is enabled."
                    ],
                    [
                      "The ",
                      {
                        "code": "<probes>.list",
                        "tag": "code"
                      },
                      " command has been renamed to ",
                      {
                        "code": "<probes>.list-kinds",
                        "tag": "code"
                      },
                      " to make it more clear what is being shown. The command also takes more arguments to print more data or zoom in on certain objects or probe-kinds."
                    ],
                    [
                      "The ",
                      {
                        "code": "<probes>.list-details",
                        "tag": "code"
                      },
                      " command has been removed but the functionality has been merged with the ",
                      {
                        "code": "<probes>.read",
                        "tag": "code"
                      },
                      " command, which now supports reading out one probe or listing multiple probes."
                    ],
                    [
                      "The ",
                      {
                        "code": "<probes>.print-properties",
                        "tag": "code"
                      },
                      " command is now an internal command only."
                    ],
                    [
                      "The arguments for the ",
                      {
                        "code": "list-kinds",
                        "tag": "code"
                      },
                      ", ",
                      {
                        "code": "subscribe",
                        "tag": "code"
                      },
                      ", ",
                      {
                        "code": "unsubscribe",
                        "tag": "code"
                      },
                      " and ",
                      {
                        "code": "read",
                        "tag": "code"
                      },
                      " commands are now much more aligned, working more the same way."
                    ],
                    [
                      "Added ",
                      {
                        "code": "<probes>.info",
                        "tag": "code"
                      },
                      ", ",
                      {
                        "code": "<probes>.status",
                        "tag": "code"
                      },
                      " ",
                      {
                        "code": "<host>.info",
                        "tag": "code"
                      },
                      " and ",
                      {
                        "code": "<host>.status",
                        "tag": "code"
                      },
                      " commands."
                    ],
                    [
                      "The different probe-samplers from ",
                      {
                        "code": "probe_monitor",
                        "tag": "code"
                      },
                      ", ",
                      {
                        "code": "probe_streamer",
                        "tag": "code"
                      },
                      " and ",
                      {
                        "code": "probe_system_perfmeter",
                        "tag": "code"
                      },
                      " have been updated to reflect the changes in the definition. The ",
                      {
                        "children": [
                          "-objects"
                        ],
                        "tag": "em"
                      },
                      " switches, used when adding or removing probes, have been removed. Instead the commands take both a ",
                      {
                        "children": [
                          "probe"
                        ],
                        "tag": "em"
                      },
                      ", specifying a probe with its object, and ",
                      {
                        "children": [
                          "probe-kind"
                        ],
                        "tag": "em"
                      },
                      " specifying to add/remove probes from all objects, with the specified probe-kind."
                    ],
                    [
                      "The obsolete ",
                      {
                        "code": "probe-cache",
                        "tag": "code"
                      },
                      " was removed."
                    ],
                    [
                      "The user-guide has been updated for the related changes."
                    ]
                  ],
                  "tag": "list"
                },
                {
                  "children": [
                    "(fixes SIMICS-19232, SIMICS-19233, SIMICS-19234, SIMICS-19264, and SIMICS-19265)."
                  ],
                  "tag": "p"
                }
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "CLI command ",
                {
                  "code": "clear-io-stats",
                  "tag": "code"
                },
                " now have an alias as ",
                {
                  "code": "clear-device-access-stats",
                  "tag": "code"
                },
                " (fixes SIMICS-19222)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "CLI command ",
                {
                  "code": "list-pcie-hierarchies",
                  "tag": "code"
                },
                " now uses the global simics table border style."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Ensure that the connector ",
                {
                  "code": "PciBusDownConnector",
                  "tag": "code"
                },
                " only sets the ",
                {
                  "code": "devices",
                  "tag": "code"
                },
                "/",
                {
                  "code": "pci_devices",
                  "tag": "code"
                },
                " attributes in the PCIe bus once."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Snapshots now save and restore the ",
                {
                  "code": "files",
                  "tag": "code"
                },
                " attribute and image pages saved in snapshots are de-duplicated based on content. This removes the special casing of zero pages and the ",
                {
                  "code": "zero_pages",
                  "tag": "code"
                },
                " field in ",
                {
                  "code": "SIM_get_snapshot_info",
                  "tag": "code"
                },
                " is no longer there."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Removed ",
                {
                  "children": [
                    "name"
                  ],
                  "tag": "em"
                },
                " argument to ",
                {
                  "code": "new-tcf-agent",
                  "tag": "code"
                },
                " (fixes SIMICS-21610)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "force_stack_crawl",
                  "tag": "code"
                },
                " attribute will now enable stack crawling even when no symbol files have been added."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Stack trace caches will now be cleared when symbol files are added or removed (fixes SIMICS-21964)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "I3C link": [
        [
          {
            "items": [
              [
                "Fixed i3c-link to support IBI when more than one target device is connected to i3c controller. The controller's ",
                {
                  "code": "ibi_start",
                  "tag": "code"
                },
                " call shall only be propagated to targets that have issued ",
                {
                  "code": "ibi_request",
                  "tag": "code"
                },
                " to the controller over interface ",
                {
                  "code": "i3c_master",
                  "tag": "code"
                },
                " (fixes HSD-14021502240)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Hot-plug event now correctly requires field ",
                {
                  "code": "hpie",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "ccie",
                  "tag": "code"
                },
                " to be set as well to trigger an Hot-Plug event."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe Downstream Port": [
        [
          {
            "items": [
              [
                "Cold-Plug presence detect is now supported. Previously only hot-plug was supported i.e. the presence detect event was only forwarded for devices being hot-plugged. Now cold-plugged devices also trigger a presence detect event to upstream target at object instantiation."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Hot-Plug presence detect state is now sent to upstream target after object instantiation as well. Previously the hot-plug presence detect event was only forwarded when PCIe devices were attached after object instantiation."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed checkpointing bug after adding legacy multi function devices into ",
                {
                  "code": "pcie-downstream-port-legacy",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Service Node": [
        [
          {
            "items": [
              [
                "Added disconnect-real-network into help description of connect-real-network, also disconnect-real-network and disconnect-real-network-port-in into help description of connect-real-network-port-in along with disconnect-real-network and disconnect-real-network-port-out into help description of connect-real-network-port-out (fixes SIMICS-19377)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Target parameters": [
        [
          {
            "items": [
              [
                "Fixed a problem where parameters overridden in a preset exposed as a target were marked as user modified."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7009,
    "version": "7.3.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Removed the ",
                {
                  "code": "simics::nocopy",
                  "tag": "code"
                },
                " utility class. Please use the standard way of deleting the copy-CTOR instead."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "CMake": [
        [
          {
            "items": [
              [
                "Make sure ",
                {
                  "code": "Simics.cmake",
                  "tag": "code"
                },
                " is picked up from the Simics Base associated with the Simics project."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Moved checking of SIMICS_BUILD_ID namespace from build phase to configuration phase."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Improvements to the ",
                {
                  "code": "gmake-to-cmake",
                  "tag": "code"
                },
                " converter."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Updated and improved documentation."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Deprecated ",
                {
                  "code": "IFACE_FILES",
                  "tag": "code"
                },
                " argument to ",
                {
                  "code": "simics_add_module()",
                  "tag": "code"
                },
                " function. Use the ",
                {
                  "code": "SOURCES",
                  "tag": "code"
                },
                " argument or the new ",
                {
                  "code": "PYWRAP",
                  "tag": "code"
                },
                " argument instead."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Python expression entered interactively using ",
                {
                  "code": "@",
                  "tag": "code"
                },
                ", or while in ",
                {
                  "code": "python-mode",
                  "tag": "code"
                },
                ", are now printed using ",
                {
                  "code": "sys.displayhook",
                  "tag": "code"
                },
                ". This makes it possible to customize the print format of Python expressions by setting ",
                {
                  "code": "sys.displayhook",
                  "tag": "code"
                },
                " to a custom printing function (fixes HSD-14021583366)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "expect",
                  "tag": "code"
                },
                " command shows a stack trace on failures when possible (fixes SIMICS-22026)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                {
                  "code": "simics_7_api",
                  "tag": "code"
                },
                " was added for import in Python (fixes SIMICS-22037)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Decorators are now supported in python-mode and Python one liners in CLI (fixes SIMICS-21857)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added ",
                {
                  "code": "SIM_printf_warning_vararg",
                  "tag": "code"
                },
                " to the API. It can be called from variadic functions to print warnings."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                {
                  "code": "SIM_printf_warning",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "pr_warn",
                  "tag": "code"
                },
                " will now output proper warning prefix ",
                {
                  "code": "+++",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                {
                  "code": "Added SIM_printf_error_vararg",
                  "tag": "code"
                },
                " to the API. This is a variable argument version of ",
                {
                  "code": "SIM_printf_error",
                  "tag": "code"
                },
                " and replaces ",
                {
                  "code": "pr_err_vararg",
                  "tag": "code"
                },
                " which is now removed."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Removed checksum from module load (fixes SIMINT-1616)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Syntax and type errors that occur while parsing Python will now only be output once in the traceback (fixes SIMICS-21858)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Probes: compatibility fix for older packages and newer base. Set the default probe-owner to the ",
                {
                  "code": "sim",
                  "tag": "code"
                },
                " object if it was set to None earlier. This avoids a python stack-trace when enabling probes."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "In some cases, the output from the last command in a CLI foreach or while statement was only printed for the final iteration. This has now been corrected (fixes SIMICS-17603)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added an alias ",
                {
                  "code": "history",
                  "tag": "code"
                },
                " to ",
                {
                  "code": "command-history",
                  "tag": "code"
                },
                " and also ",
                {
                  "children": [
                    "substr"
                  ],
                  "tag": "em"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Updated how debugger commands are registered and handled internally. Much of the implementation was moved from core to this module (fixes SIMICS-21622)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added .PLREG child contexts to thread contexts (fixes HSD-18036833710)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Generic MMC and SD card": [
        [
          {
            "items": [
              [
                "Fixed CMD6 handling in the SD card model (fixes HSD-22019399957)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Added missing documentation of PCIe templates defined in the library."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Sample C++ device": [
        [
          {
            "items": [
              [
                "Renamed the port class to ",
                {
                  "code": "sample_device_cpp.sample",
                  "tag": "code"
                },
                " to avoid confusion with ",
                {
                  "code": "port",
                  "tag": "code"
                },
                " namespace."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Simics Migration Guide": [
        [
          {
            "items": [
              [
                "Added chapter to ",
                {
                  "children": [
                    "Simics Migration Guide"
                  ],
                  "tag": "em"
                },
                " describing how to incrementally port ",
                {
                  "code": "io_memory",
                  "tag": "code"
                },
                " devices to ",
                {
                  "code": "transaction",
                  "tag": "code"
                },
                ". The chapter includes DML code examples."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "VMP": [
        [
          {
            "items": [
              [
                "VMXMON's installation script for Linux that installs VMXMON with Dynamic Kernel Module Support (DKMS) framework was updated to work with DKMS version 2.8.6 and later (fixes SIMICS-21905)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The new 1.16.5 version of VMXMON is compatible with Indirect Branch Tracking (IBT) used in Linux. Previously, VMXMON could not be used on hosts supporting Intel® Control-flow Enforcement Technology and running Linux with enabled IBT (fixes HSD-14018128636)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7010,
    "version": "7.4.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Various changes in Simics C++ API modelling extensions (SME):",
                {
                  "items": [
                    [
                      "Removed unused rd/wr/i_rd/i_wr methods."
                    ],
                    [
                      "Added bank_element to support aggregate operations."
                    ],
                    [
                      "Enhanced internal read/write functionality and introduced two new methods internal_read/internal_write."
                    ],
                    [
                      "Added User Defined Rule type for notifications."
                    ],
                    [
                      "Updated documentation."
                    ],
                    [
                      "Cleanup of debug messages and more consistent usage of SIM_LOG."
                    ],
                    [
                      "Test coverage and infrastructure updates."
                    ]
                  ],
                  "tag": "list"
                }
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "list-pcie-hierarchies",
                  "tag": "code"
                },
                " now supports listing entire hierarchies based on the legacy Simics PCIe library. Such hierarchies are based on the ",
                {
                  "code": "pcie-bus",
                  "tag": "code"
                },
                " class to build the topology (fixes SIMICS-22030)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Add flag ",
                {
                  "code": "-include-bus",
                  "tag": "code"
                },
                " to command ",
                {
                  "code": "list-pcie-hierarchies",
                  "tag": "code"
                },
                ". It will add another table column showing which PCIe bus object the PCIe device is mapped to."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Add flag ",
                {
                  "code": "-indicate-legacy-pcie",
                  "tag": "code"
                },
                " to command ",
                {
                  "code": "list-pcie-hierarchies",
                  "tag": "code"
                },
                ". It will add another table column indicating if PCIe device is modelled with the legacy or the new Simics PCIe library (fixes SIMICS-22031)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "list-pcie-hierarchies",
                  "tag": "code"
                },
                " now prints out device type for classic PCI bridges and endpoints (fixes SIMICS-22032)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "MII management bus": [
        [
          {
            "items": [
              [
                "Device is now deletable using function ",
                {
                  "code": "SIM_delete_object",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Ensure the dllla field in the link status register of the PCI Express Capability Structure template is unset when a device is removed from a port."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added missing register in DVSEC capability"
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added documentation for modelling HwInit behavior for PCIe config registers and fields."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Python Module: stest": [
        [
          {
            "items": [
              [
                "Added a ",
                {
                  "code": "deprecation level",
                  "tag": "code"
                },
                " context manager named ",
                {
                  "code": "deprecation_level",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7011,
    "version": "7.5.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Supported the macro ",
                {
                  "code": "ATTR_GETTER",
                  "tag": "code"
                },
                " on the C-style array."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Definitions for the ",
                {
                  "code": "riscv_device_id",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "riscv_process_id",
                  "tag": "code"
                },
                " atoms have been added. See the header file ",
                {
                  "code": "simics/arch/riscv.h",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML)": [
        [
          {
            "items": [
              [
                "Fixed an issue where leveraging ",
                {
                  "code": "typeof",
                  "tag": "code"
                },
                " within a method signature would lead to incorrect compile-time errors when the method is overridden."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Documentation Tool (Tech-Preview)": [
        [
          {
            "items": [
              [
                "Add a new documentation include command ",
                {
                  "code": "{{include-md}}",
                  "tag": "code"
                },
                ". This lets you include one markdown file in another."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Look for files to include in documents both relative to the file you include from and in the documents source and resource directories (fixes SIMICS-21799)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7012,
    "version": "7.6.0",
    "notes": {
      "Core": [
        [
          {
            "items": [
              [
                "The probe-monitor's ",
                {
                  "code": "<probe-monitor>.html-report",
                  "tag": "code"
                },
                " command has been fixed so it works again after the recent probe-changes."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Deprecation errors will now only occur when the ",
                {
                  "code": "sim->deprecations_as_errors",
                  "tag": "code"
                },
                " attribute is set."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Improved error handling when ",
                {
                  "code": "sim->stop_on_error",
                  "tag": "code"
                },
                " attribute is set. Previously some errors would not cause Simics to return an error code when running in batch mode. There would also be unexpected messages and stack traces for errors output by Python wrapped functions (fixes SIMICS-21945)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                "Fixed a bug where overlapping registers would not be rejected if they were part of a bank within a group or subdevice."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Python Module: testparams": [
        [
          {
            "items": [
              [
                "Simics subtests will now be started with the ",
                {
                  "code": "--deprecations-as-errors",
                  "tag": "code"
                },
                " flag."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "On Windows, ",
                {
                  "code": "mini-python.bat",
                  "tag": "code"
                },
                " is now used by the test system, so characters in command line arguments are restricted to what is CMD compatible."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7013,
    "version": "7.7.0",
    "notes": {
      "CMake": [
        [
          {
            "items": [
              [
                "Added ",
                {
                  "code": "simics_add_documentation",
                  "tag": "code"
                },
                " function as a wrapper around the Simics ",
                {
                  "code": "dodoc",
                  "tag": "code"
                },
                " documentation builder (fixes SIMICS-21501)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Added a ",
                {
                  "code": "-non-blocking",
                  "tag": "code"
                },
                " flag to the ",
                {
                  "code": "run",
                  "tag": "code"
                },
                " command. This allows starting the simulation from the end of a script and getting an interactive prompt (fixes SIMICS-22051)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Any pending work will now be processed before exiting when running in batch mode."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device API": [
        [
          {
            "items": [
              [
                "Added message type ",
                {
                  "code": "PCIE_ATS_Invalidate_Completion",
                  "tag": "code"
                },
                " to ",
                {
                  "code": "pcie_message_type_t",
                  "tag": "code"
                },
                " (fixes HSD-18037411929)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Backported the ",
                {
                  "code": "warning",
                  "tag": "code"
                },
                " log type, together with the ",
                {
                  "code": "SIM_LOG_WARNING",
                  "tag": "code"
                },
                " macro, from Simics 7"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Added support for FLR (Function Level Reset)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Sticky registers are no longer affected by a Hot Reset (fixes SIMICS-22104)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                {
                  "code": "Root ports",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "upstream ports",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "downstream port",
                  "tag": "code"
                },
                " now propagate received ",
                {
                  "code": "Hot Reset",
                  "tag": "code"
                },
                " downstream by default."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Python module: snoop": [
        [
          {
            "items": [
              [
                "Fixed a reference counting bug in the ",
                {
                  "code": "Hap",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "Log",
                  "tag": "code"
                },
                " snoopers. The bug could sometimes trigger a segmentation fault (fixes HSD-18036787623 and HSD-18036861798."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "VMP": [
        [
          {
            "items": [
              [
                "Fixed a bug in the ",
                {
                  "code": "bin/vmp-kernel-load",
                  "tag": "code"
                },
                " script preventing the driver from loading."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7016,
    "version": "7.8.0",
    "notes": {
      "82077": [
        [
          {
            "items": [
              [
                "Fixed a problem where the ",
                {
                  "code": "insert-floppy",
                  "tag": "code"
                },
                " command would crash when the image had an incorrect size."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Accel VGA": [
        [
          {
            "items": [
              [
                "Class ",
                {
                  "code": "accel-vga",
                  "tag": "code"
                },
                " now supports inquiry reads for no side effect inspection (fixes HSD-14021984472)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Added a static function ",
                {
                  "code": "offset",
                  "tag": "code"
                },
                " in ",
                {
                  "code": "Register",
                  "tag": "code"
                },
                " class which returns the offset of the register passed as input."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added a class trait ",
                {
                  "code": "AddOffsetTrait",
                  "tag": "code"
                },
                " which adds ",
                {
                  "code": "offset",
                  "tag": "code"
                },
                " function to a register class."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "CMake": [
        [
          {
            "items": [
              [
                "Provided a CPU module has been ported to CMake and one has access to a clone of the Simics Base repository (without submodules and no need to locally build Simics), CPU modules can now be built in Simics projects."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "In Python, it is now allowed to pass arguments of the ",
                {
                  "code": "conf_object_t",
                  "tag": "code"
                },
                " type, i.e. Simics objects, to Simics API functions taking parameters of the ",
                {
                  "code": "map_target_t",
                  "tag": "code"
                },
                " type. The conversion of the ",
                {
                  "code": "conf_object_t",
                  "tag": "code"
                },
                " arguments to the ",
                {
                  "code": "map_target_t",
                  "tag": "code"
                },
                " values is done automatically."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "list-pcie-hierarchies",
                  "tag": "code"
                },
                " now produce output to simics console when executed from script (fixes SIMICS-22136)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "stdout",
                  "tag": "code"
                },
                " wrapper in Python now implements all relevant methods (fixes HSD-14021907263)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed memory leak of data atom in the Python wrapping of ",
                {
                  "code": "transaction_t",
                  "tag": "code"
                },
                " (fixes HSD-14020916214)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added a ",
                {
                  "children": [
                    "format"
                  ],
                  "tag": "em"
                },
                " argument to ",
                {
                  "code": "log-setup",
                  "tag": "code"
                },
                " which makes it possible to specify a custom log format (fixes SIMICS-21966)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "print-target-info",
                  "tag": "code"
                },
                " now also lists the simics namespace for each machine in the system (fixes SIMICS-18474)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Snapshots of images backed by linear memory, such as ",
                {
                  "code": "accel-vga",
                  "tag": "code"
                },
                " framebuffers, should now get restored correctly (fixes SIMICS-21961)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "probe-address",
                  "tag": "code"
                },
                " now supports setting simple atoms in CLI. Simple atoms are the ones that can be expressed as integers. Atoms defined as boolean will use the integer values 0 and 1 when set on command-line (fixes SIMICS-22114)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed atoms column content for command ",
                {
                  "code": "probe-address",
                  "tag": "code"
                },
                " (fixes SIMICS-20700)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed bug in ",
                {
                  "code": "command-history",
                  "tag": "code"
                },
                ", which could give invalid results when using the ",
                {
                  "children": [
                    "substr"
                  ],
                  "tag": "em"
                },
                " argument (fixes SIMICS-22058)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "DEC21xxx": [
        [
          {
            "items": [
              [
                "Fixed a problem that could lead to memory corruption."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                "Fixed a bug where executed callbacks posted via immediate after statements would not trigger the device state change notifier."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Documentation Tool (Tech-Preview)": [
        [
          {
            "items": [
              [
                "Added support for a ",
                {
                  "code": "{{var}}",
                  "tag": "code"
                },
                " variable replacement command in the documentation tool. With it you can declare variables on the command line or in a JSON-file and use them in your documentation text (fixes SIMICS-21818)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The tool now accepts the ",
                {
                  "code": ".cxx",
                  "tag": "code"
                },
                " file extension when including snippets with the ",
                {
                  "code": "include",
                  "tag": "code"
                },
                " command."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Fixed the ",
                {
                  "code": "doe_capability",
                  "tag": "code"
                },
                " ensuring that the response of consecutive data objects is handled properly. This breaks the current API for implementing the ",
                {
                  "code": "handle_request",
                  "tag": "code"
                },
                " method of a ",
                {
                  "code": "doe_protocol",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Telnet Frontend": [
        [
          {
            "items": [
              [
                "The log levels were adjusted to reduce the amount of log output."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "X2APIC (C++)": [
        [
          {
            "items": [
              [
                "Adding support for local vector table, index 0x2e."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7017,
    "version": "7.9.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Added improved support for array/vector of ",
                {
                  "code": "Connect",
                  "tag": "code"
                },
                " objects (fixes SIMICS-22156)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "CMake": [
        [
          {
            "items": [
              [
                "It is now possible to change the location of the DML compiler using the ",
                {
                  "code": "SIMICS_DMLC_DIR",
                  "tag": "code"
                },
                " variable. It is also possible to change the Python interpreter using the ",
                {
                  "code": "SIMICS_DMLC_PYTHON",
                  "tag": "code"
                },
                " variable (fixes SIMICS-22272)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Fixed crash in TAB completion of command ",
                {
                  "code": "probe-address",
                  "tag": "code"
                },
                " where non-pywrapped ATOMs are registered (fixes SIMICS-22260)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Trying to access non-existent members of Python wrapped structs now throws ",
                {
                  "code": "AttributeError",
                  "tag": "code"
                },
                " instead of ",
                {
                  "code": "SystemError",
                  "tag": "code"
                },
                ". This fixes a previous regression (fixes SIMICS-22259)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "enable-writable-persistent-state",
                  "tag": "code"
                },
                " command will now fail nicely when attempting to enable writable state for a configuration that contains an image that lacks backing files (fixes SIMICS-17144)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The examples in the ",
                {
                  "children": [
                    "Getting Started"
                  ],
                  "tag": "em"
                },
                " document have been updated to use the new target system and the ",
                {
                  "code": "qsp-x86/firststeps",
                  "tag": "code"
                },
                " target (fixes SIMICS-20852)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "probe-address",
                  "tag": "code"
                },
                " now outputs information about ",
                {
                  "code": "atom",
                  "tag": "code"
                },
                " accesses when the transaction passes through a ",
                {
                  "code": "transaction_translator",
                  "tag": "code"
                },
                " object."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "memory-map",
                  "tag": "code"
                },
                " now sees a translation with size set to zero as a translation that spans the entire 64-bit address range (fixes HSD-22019889874)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "memory-map",
                  "tag": "code"
                },
                " now by default does an inquiry look up to not affect the state of the system (fixes SIMICS-22171)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Added another way of parsing PCI devices based on PCIe hierarchies to support more target systems in Intel® System Debugger PCI devices view (fixes HSD-18033845467)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "context-query-for-object",
                  "tag": "code"
                },
                " command can now be used with debug context objects."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device API": [
        [
          {
            "items": [
              [
                "Added PCIe atoms for Page Request Service: ",
                {
                  "code": "pcie_prs_page_request",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "pcie_prs_page_response",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "pcie_prs_stop_marker",
                  "tag": "code"
                },
                ". Page request and page response atoms contains the new data types: ",
                {
                  "code": "pcie_prs_page_request_t",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "pcie_prs_page_response_t",
                  "tag": "code"
                },
                " (fixes HSD-18037764161) and (fixes HSD-18037764159)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added data type ",
                {
                  "code": "pcie_pasid_info_t",
                  "tag": "code"
                },
                " to model PCIe PASID information."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                {
                  "code": "SIM_issue_read_transaction",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "SIM_issue_write_transaction",
                  "tag": "code"
                },
                " API functions were added. The functions can be used instead of the ",
                {
                  "code": "SIM_issue_transaction",
                  "tag": "code"
                },
                " function when a model doesn't need to provide any additional atoms in ",
                {
                  "code": "transaction_t",
                  "tag": "code"
                },
                " transactions (fixes HSD-14021652621)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "SIM_add_notifier",
                  "tag": "code"
                },
                " function, when called from Python, no longer leaks references to the callback function or its auxiliary data."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                {
                  "children": [
                    "Added PCIe ATS Atoms ",
                    {
                      "code": "pcie_ats_invalidate_completion_count",
                      "tag": "code"
                    },
                    " and ",
                    {
                      "code": "pcie_ats_invalidate_completion_itag_vector",
                      "tag": "code"
                    }
                  ],
                  "tag": "p"
                },
                {
                  "children": [
                    "to modell PCIe ATS Invalidation Completion Messages (fixes HSD-18037764165)."
                  ],
                  "tag": "p"
                }
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added PCIe ATS data type ",
                {
                  "code": "pcie_ats_invalidate_request_payload_t",
                  "tag": "code"
                },
                " and atom ",
                {
                  "code": "pcie_ats_invalidate_request_itag",
                  "tag": "code"
                },
                " to model PCIe ATS Invalidation Request Messages (fixes HSD-18037764162)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added data type ",
                {
                  "code": "pcie_ats_translation_completion_entry_t",
                  "tag": "code"
                },
                " for modelling PCIe ATS Translation Completion Responses (fixes HSD-18037764155)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added atoms ",
                {
                  "code": "pcie_ats_translation_request_cxl_src",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "pcie_ats_translation_request_no_write",
                  "tag": "code"
                },
                " for PCIe Address Translation Request (fixes HSD-18037764158)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a bug where the callback provided in ",
                {
                  "code": "SIM_register_tracked_notifier",
                  "tag": "code"
                },
                " was not called correctly when the deletion of a subscriber object triggers an implicit notifier deletion."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML)": [
        [
          {
            "items": [
              [
                "Created a compatibility feature ",
                {
                  "code": "function_in_extern_struct",
                  "tag": "code"
                },
                ". The syntax ",
                {
                  "code": "void     m(conf_object_t)",
                  "tag": "code"
                },
                " for function pointers is only permitted when this feature is enabled. The feature will be disabled in Simics API versions > 7."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "DMLC will now report errors for some uses of function types that are illegal in C. These would previously yield broken C code."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added support for the ",
                {
                  "code": "log warning",
                  "tag": "code"
                },
                " statement."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "miss_pattern_bank",
                  "tag": "code"
                },
                " template now allows for its implementations of ",
                {
                  "code": "unmapped_read",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "unmapped_write",
                  "tag": "code"
                },
                ", and ",
                {
                  "code": "unmapped_get",
                  "tag": "code"
                },
                " to be overridden."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added support for ",
                {
                  "code": "uint64_t",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "int64_t",
                  "tag": "code"
                },
                " types from C. These types are needed for C interoperability, e.g., calling a function that takes an argument of type ",
                {
                  "code": "uint64_t *",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Documentation Tool (Tech-Preview)": [
        [
          {
            "items": [
              [
                "Documents are now built in a way that lets the documentation indexer apply styling instead of each document bundling its own styling. With this the styling files are shared between documents."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Linux Tracker": [
        [
          {
            "items": [
              [
                "Fixed a bug where the ",
                {
                  "code": "status",
                  "tag": "code"
                },
                " command would crash when a VM guest node was present (fixes SIMICS-22296)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added kernel module tracking support for kernel versions 6.4 and more recent (fixes SIMICS-22162)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added support x86-64 kernel versions 6.2 and more recent (fixes SIMICS-22155)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "MSI-X Table bank template ",
                {
                  "code": "msix_table",
                  "tag": "code"
                },
                " now sets param ",
                {
                  "code": "use_io_memory",
                  "tag": "code"
                },
                " to false making it use the ",
                {
                  "code": "transaction",
                  "tag": "code"
                },
                " interface instead of ",
                {
                  "code": "io_memory",
                  "tag": "code"
                },
                ". It also now accepts transactions greater than 8 bytes and allows unaligned accessing (fixes SIMICS-22293)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Reworked the ",
                {
                  "code": "PASID",
                  "tag": "code"
                },
                " capability. Now the library verifies the ",
                {
                  "code": "PASID",
                  "tag": "code"
                },
                " capability configuration against the outgoing ",
                {
                  "code": "pcie_pasid",
                  "tag": "code"
                },
                " atom to check for invalid usage. Methods ",
                {
                  "code": "translation_request",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "memory_read_buf",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "memory_write_bytes",
                  "tag": "code"
                },
                " in the ",
                {
                  "code": "ats_capability",
                  "tag": "code"
                },
                " template now includes a ",
                {
                  "code": "pcie_pasid_info_t *pasid",
                  "tag": "code"
                },
                " argument. Method ",
                {
                  "code": "ats_invalidate",
                  "tag": "code"
                },
                " in template ",
                {
                  "code": "ats_upstream_translator",
                  "tag": "code"
                },
                " requires the ",
                {
                  "code": "pasid",
                  "tag": "code"
                },
                " argument to be of type ",
                {
                  "code": "pcie_pasid_info_t *",
                  "tag": "code"
                },
                " instead of type ",
                {
                  "code": "uint32",
                  "tag": "code"
                },
                ". The library now correctly treats a ",
                {
                  "code": "PASID",
                  "tag": "code"
                },
                " of value 0 as a valid ",
                {
                  "code": "PASID",
                  "tag": "code"
                },
                " entry (fixes SIMICS-22269)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added chapter explaining the Address Translation Service support. The documentation also provides a sample ",
                {
                  "code": "ATS",
                  "tag": "code"
                },
                " capable endpoint and a sample ",
                {
                  "code": "Translation Agent",
                  "tag": "code"
                },
                " root complex (fixes HSD-18037764155)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "ATS",
                  "tag": "code"
                },
                " capability template now provide methods: ",
                {
                  "code": "translation_request",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "translation_size_to_entries",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "decode_translation",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "decode_invalidate",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "invalidate_complete",
                  "tag": "code"
                },
                " to enhance the ATS support in the library (fixes HSD-18037764155)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Changed the default value of field ",
                {
                  "code": "Page Aligned Request",
                  "tag": "code"
                },
                " to 1 in ATS capability structure since the PCIe specification strongly recommends this bit to be set."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Method ",
                {
                  "code": "pasid_permitted()",
                  "tag": "code"
                },
                " now allows PASID for all messages routed by address as is the case in FLIT mode."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Method ",
                {
                  "code": "pasid_permitted()",
                  "tag": "code"
                },
                " now correctly allows PASID for all ATS memory requests."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ATS translator implemented by template ",
                {
                  "code": "ats_upstream_translator",
                  "tag": "code"
                },
                " now enforces ATS requests to be of type read transactions."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "In cases where the processed data object request does not require a response, the DOE Busy bit was not cleared when the data object processing was completed. This is now fixed."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Python module: snoop": [
        [
          {
            "items": [
              [
                "Added two new snoopers `Map` and `Accumulate`, which compose snoopers the way Python's `builtins.map` and `itertools.accumulate` compose iterables."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a bug in ",
                {
                  "code": "DeviceAttribute",
                  "tag": "code"
                },
                " that caused errors when monitoring an attribute of data (",
                {
                  "code": "\"d\"",
                  "tag": "code"
                },
                ") type."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Sample PCIe SR-IOV device": [
        [
          {
            "items": [
              [
                "Fixed info/status commands (fixes SIMICS-22299)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Simple Cache Tool": [
        [
          {
            "items": [
              [
                "Added check to ensure that the tool only connects to processors that provide the necessary interfaces. Currently, this means that it will only connect to Intel Architecture processor models (fixes SIMICS-22276)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Target parameters": [
        [
          {
            "items": [
              [
                "Fixed an issue when the \"description\" field of Yaml files contained multiple lines, which was badly rendered. Developers should use the ",
                {
                  "code": ">-",
                  "tag": "code"
                },
                " block scalars, and not ",
                {
                  "code": "|",
                  "tag": "code"
                },
                " (fixes SIMICS-21587)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "virtio": [
        [
          {
            "items": [
              [
                "Fixed initial seed of class ",
                {
                  "code": "virtio-mmio-entropy",
                  "tag": "code"
                },
                ". It now uses the configuration attribute ",
                {
                  "code": "seed",
                  "tag": "code"
                },
                " (fixes SIMICS-22306)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7019,
    "version": "7.10.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Minor bug fixes in register and field classes in the Simics C++ API modelling extensions (SME)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Commands ",
                {
                  "code": "memory-map",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "probe-address",
                  "tag": "code"
                },
                " now require flag ",
                {
                  "code": "-add-atoms",
                  "tag": "code"
                },
                " in order to set atoms for platform inspection (fixes SIMICS-22314)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "memory-map",
                  "tag": "code"
                },
                " now supports setting simple integer atoms from CLI. One use case for atoms is routing and access restrictions, with this change the ",
                {
                  "code": "memory-map",
                  "tag": "code"
                },
                " can be used to verify how atoms affect the memory view (fixes SIMICS-22313)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added check that the log type passed to ",
                {
                  "code": "SIM_log_message",
                  "tag": "code"
                },
                " is a valid type."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Now the command ",
                {
                  "code": "list-attributes",
                  "tag": "code"
                },
                " returns a list of attribute-name/value pairs when run in expressions (fixes SIMICS-19252)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The recently introduced custom output format for log entries, as specified using ",
                {
                  "code": "log-setup",
                  "tag": "code"
                },
                ", is now used without any additional separation characters. The performance of the log system has been improved (fixes SIMICS-22161)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Added a ",
                {
                  "code": "context-query-for-object-list",
                  "tag": "code"
                },
                " command that allows getting a context query that matches a list of simulation objects. The listed objects must have a backing debug context."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device API": [
        [
          {
            "items": [
              [
                "New API functions ",
                {
                  "code": "SIM_object_iterator_for_class",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "SIM_object_iterator_for_interface",
                  "tag": "code"
                },
                " have been added."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added PCIe atoms ",
                {
                  "code": "pcie_ide_secured",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "pcie_segment_requester_id",
                  "tag": "code"
                },
                " to support secure IDE streams (fixes HSD-18037764154)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Return types of these (internal) functions have changed from signed to unsigned or vice versa: ",
                {
                  "code": "str_vec_len",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "get_interval_vector",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "get_interval_vector_and_range",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "prof_data_granularity_log2",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "_vcontainsp",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Field ",
                {
                  "code": "Role-Based Error Reporting",
                  "tag": "code"
                },
                " in the PCIe Device Capability register now by default is set. The field must be set for functions conforming to PCIe 1.1 or later revisions (fixes SIMICS-22344)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Project Setup Script": [
        [
          {
            "items": [
              [
                "Fixed a problem where project-setup failed to run on Windows machines with restrictive execution policies."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Python Module: dev_util": [
        [
          {
            "items": [
              [
                "In ",
                {
                  "code": "Layout.write",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "Layout.read",
                  "tag": "code"
                },
                ", avoid implicit use of deprecated functions like ",
                {
                  "code": "value_to_tuple_be",
                  "tag": "code"
                },
                ". This avoids deprecation warnings (fixes SIMICS-22319)"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "standard-pcie-switch": [
        [
          {
            "items": [
              [
                "Fixed extended capabilities to start at offset 0x100 in config bank (fixes SIMICS-22347)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7021,
    "version": "7.11.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Added a class ",
                {
                  "code": "ConnectToDescendant",
                  "tag": "code"
                },
                " (fixes HSD-22019020374)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "CMake": [
        [
          {
            "items": [
              [
                "The function ",
                {
                  "code": "simics_add_test",
                  "tag": "code"
                },
                " now accepts an argument ",
                {
                  "code": "LABELS",
                  "tag": "code"
                },
                " to assign labels to Simics tests."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "Core_Disable_Breakpoints",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "Core_Time_Transition",
                  "tag": "code"
                },
                " haps were removed as they would never trigger."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Updated the ",
                {
                  "children": [
                    "Getting Started"
                  ],
                  "tag": "em"
                },
                " manual by restructuring tutorials, simplifying GRML installation, and adding a section about scripting."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed an issue when restoring snapshots after increasing the minimum latency. This no longer hits an assert. Instead the latency saved in the snapshot is propagated from ",
                {
                  "code": "sync_domain",
                  "tag": "code"
                },
                "s to their ",
                {
                  "code": "cell",
                  "tag": "code"
                },
                "s (fixes SIMICS-22049)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a bug in the ",
                {
                  "code": "simics_session",
                  "tag": "code"
                },
                " module that caused a Python exception when closing a socket (fixes HSD-14022420341)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "When command ",
                {
                  "code": "probe-address",
                  "tag": "code"
                },
                " does an unmapped access into a ",
                {
                  "code": "memory-space",
                  "tag": "code"
                },
                " where either attribute ",
                {
                  "code": "ignore_unmapped_writes",
                  "tag": "code"
                },
                " or ",
                {
                  "code": "unmapped_read_value",
                  "tag": "code"
                },
                " is set is considered a hit. The CLI output now marks these scenarios to make it more understandable for the user (fixes SIMICS-22300)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "A bug in handling of the calls to ",
                {
                  "code": "SIM_add_notifier",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "SIM_delete_notifier",
                  "tag": "code"
                },
                " done from notification callbacks was fixed (fixes SIMICS-21502)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                "Template ",
                {
                  "code": "function_io_memory",
                  "tag": "code"
                },
                " now searches for the bank in the same ",
                {
                  "code": "subdevice",
                  "tag": "code"
                },
                "/",
                {
                  "code": "device",
                  "tag": "code"
                },
                " scope as the ",
                {
                  "code": "implement",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added the ",
                {
                  "code": "templates",
                  "tag": "code"
                },
                " member for all objects and values of template types, which allows for making calls to any particular implementation of a method as provided by a specified template (fixes SIMICS-22264). Example syntax:",
                {
                  "code": "      // Call the `write_register()` implementation as provided by the\n      // `register` template on the `r` register of the bank `b`.\n      b.r.templates.register.write_register(...);\n      \n",
                  "language": "",
                  "tag": "pre"
                },
                "Calls of this form are called ",
                {
                  "children": [
                    "Template-Qualified Method Implementation Calls"
                  ],
                  "tag": "em"
                },
                ", and are primarily meant to make it easier to resolve conflicts in multiple inheritance: it allows any method that overrides multiple implementations from unrelated templates to individually reference and call the implementations it overrides."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "It's now allowed to instantiate multiple unrelated templates that offer different ",
                {
                  "code": "shared",
                  "tag": "code"
                },
                " implementations of the same method, as long as that method is declared in a common ancestor template, and the conflict is resolved through an implementation that overrides all the unrelated implementations (fixes SIMICS-20431). This mirrors the pre-existing semantics for non-",
                {
                  "code": "shared",
                  "tag": "code"
                },
                " methods."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "GDB Remote": [
        [
          {
            "items": [
              [
                "Changed the main thread ID to be one instead of zero. Zero has a special meaning and will not work with LLDB (fixes HSD-18038467781)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "MMC Card Component": [
        [
          {
            "items": [
              [
                "Added a Micron eMMC with adjustable partitions (fixes SIMINT-1625)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Project Makefiles": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "NDEBUG",
                  "tag": "code"
                },
                " preprocessor directive is now set in non-debug builds."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7023,
    "version": "7.12.0",
    "notes": {
      "AM79C960": [
        [
          {
            "items": [
              [
                "The device has been moved to the transaction interface."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Simics C++ API modelling extensions (SME) updates: Fixed a bug with pattern rule argument ordering and corrected a typo in a code example within the documentation."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Common": [
        [
          {
            "items": [
              [
                "The signing certificate on Simics packages has been updated."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Correct the time measurement of the ",
                {
                  "code": "sim.time.schedule",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "cpu.time.schedule",
                  "tag": "code"
                },
                ", and ",
                {
                  "code": "cpu.schedule_percent",
                  "tag": "code"
                },
                " probes. Previously, when using defered transaction the measurements were incorrect."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "memory-map",
                  "tag": "code"
                },
                " now has the additional argument ",
                {
                  "code": "exclude",
                  "tag": "code"
                },
                ". The argument is a list containing classes or objects or a mix. It allows the user to filter out classes and/or objects that are not of interest. An example would be to filter out interleaved ",
                {
                  "code": "ram",
                  "tag": "code"
                },
                " objects that would otherwise occupy most of the output (fixes SIMICS-22369)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "memory-map",
                  "tag": "code"
                },
                " now has the additional argument ",
                {
                  "code": "max-regions",
                  "tag": "code"
                },
                ". Argument ",
                {
                  "code": "max-regions",
                  "tag": "code"
                },
                " is used to increase the maximum number of rows outputted."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added a link from the ",
                {
                  "code": "generic_transaction_t",
                  "tag": "code"
                },
                " documentation to the documentation for its accessor functions (fixes SIMICS-20340)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Definitions for ",
                {
                  "code": "arm_device_id",
                  "tag": "code"
                },
                " atom have been added. See the header file ",
                {
                  "code": "simics/arch/arm.h",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed how nested lists are printed in the CLI help formatter (fixes SIMICS-20087)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Updated reset handling to work with x86S cpu models."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML)": [
        [
          {
            "items": [
              [
                "Fixed a bug in the ",
                {
                  "code": "dead_dml_methods",
                  "tag": "code"
                },
                " library, which caused it to never detect methods as dead if they occur directly after a ",
                {
                  "code": "footer",
                  "tag": "code"
                },
                " block."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                "Any immediate after callbacks of a device that are still pending at the start of the device's deletion will be canceled and give rise to a warning (fixes SIMICS-22268). This can be resolved by leveraging ",
                {
                  "code": "SIM_process_pending_work()",
                  "tag": "code"
                },
                ". Immediate after callbacks posted ",
                {
                  "children": [
                    "during"
                  ],
                  "tag": "em"
                },
                " deletion (e.g. by ",
                {
                  "code": "destroy()",
                  "tag": "code"
                },
                ") will still be executed at the end of device deletion, as before."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Any immediate after callbacks posted during object initialization and configuration are now guaranteed to be executed as part of ",
                {
                  "code": "objects_finalized",
                  "tag": "code"
                },
                " of the device."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "When two conflicting definitions of the same parameter are declared within the same scope, then this will now be reported as an error also if they are overridden by a third declaration. In the following example, this gives a new compile error on the ",
                {
                  "code": "p",
                  "tag": "code"
                },
                " declarations within the ",
                {
                  "code": "t",
                  "tag": "code"
                },
                " template:",
                {
                  "code": "        template t {\n          param p default 1;\n          param p default 1;\n        }\n        group g is t {\n          param p = 2;\n        }\n      \n",
                  "language": "",
                  "tag": "pre"
                },
                "Previously, DMLC would only report an error on ",
                {
                  "code": "t",
                  "tag": "code"
                },
                " if the parameter was not overridden. If this is the desired behaviour, then the idiomatic construct is:",
                {
                  "code": "        template t {\n          param p;\n        }\n      \n",
                  "language": "",
                  "tag": "pre"
                }
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Addressed a bug where DMLC did not report errors when a non-existing template is instantiated within an ",
                {
                  "code": "#if",
                  "tag": "code"
                },
                " block. E.g., the following does not give an error:",
                {
                  "code": "      #if (true) { group g { is nonexisting_template; }}\n      \n",
                  "language": "",
                  "tag": "pre"
                },
                "The bugfix is opt-in, because an immediate bugfix would risk breaking existing builds; the error will only be reported when the flag ",
                {
                  "code": "--no-compat=broken_conditional_is",
                  "tag": "code"
                },
                " is passed to DMLC. This flag will be automatically enabled in Simics 8 (fixes SIMICS-22403)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added a provisional feature ",
                {
                  "code": "explicit_param_decls",
                  "tag": "code"
                },
                ", which can be enabled per file by a statement ",
                {
                  "code": "provisional explicit_param_decls;",
                  "tag": "code"
                },
                ". This feature adds a syntax ",
                {
                  "code": "param NAME := VALUE;",
                  "tag": "code"
                },
                ", which signifies that the parameter is ",
                {
                  "children": [
                    "not"
                  ],
                  "tag": "em"
                },
                " intended as an override. The existing syntax ",
                {
                  "code": "param NAME = VALUE;",
                  "tag": "code"
                },
                " is re-purposed to signify that the parameter ",
                {
                  "children": [
                    "is"
                  ],
                  "tag": "em"
                },
                " intended as an override. Inconsistent usage will trigger compile errors. This is useful to catch misspelled overrides (fixes SIMICS-21451)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added a system for ",
                {
                  "children": [
                    "provisional language features"
                  ],
                  "tag": "em"
                },
                ": language features that are disabled by default but can be explicitly enabled per DML file. Each provisional feature is named and documented in an appendix of the reference manual; to enable a feature named ",
                {
                  "code": "foo_bar",
                  "tag": "code"
                },
                " in a DML file, write ",
                {
                  "code": "provisional     foo_bar;",
                  "tag": "code"
                },
                " in the top of the file, right after ",
                {
                  "code": "dml     1.4;",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Documentation Indexer": [
        [
          {
            "items": [
              [
                "When the documentation indexer styles documents it now also adds a single page variant of the document. This is linked from the first page of the document and is not indexed (fixes SIMICS-16953)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Project Makefiles": [
        [
          {
            "items": [
              [
                "When linking on Windows, the ",
                {
                  "code": "libsimics-common",
                  "tag": "code"
                },
                " import library must now be used."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Recorder": [
        [
          {
            "items": [
              [
                "Changed how ",
                {
                  "code": "recorder",
                  "tag": "code"
                },
                " stops the simulation at the end of the recording so events it replays are handled first (fixes SIMICS-21893)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "Ui_Record_State_Changed",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "REC_State_Changed",
                  "tag": "code"
                },
                " haps were removed."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Sample C++ device": [
        [
          {
            "items": [
              [
                "Merged ",
                {
                  "code": "c++-api-doc-code",
                  "tag": "code"
                },
                " module into ",
                {
                  "code": "sample-device-c++",
                  "tag": "code"
                },
                " module"
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Split the ",
                {
                  "code": "sample-device.cc",
                  "tag": "code"
                },
                " file into several smaller files. This makes the code easiser to read (fixes SIMICS-22418)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Simics Migration Guide": [
        [
          {
            "items": [
              [
                "Added old-style interface ports to legacy section for 7."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added section in chapter ",
                {
                  "children": [
                    "Migrating from IO Memory to Transactions"
                  ],
                  "tag": "em"
                },
                " describing how to migrate from ",
                {
                  "code": "SIM_set_mem_op_user_data()",
                  "tag": "code"
                },
                "/",
                {
                  "code": "SIM_get_mem_op_user_data()",
                  "tag": "code"
                },
                " into using transaction ",
                {
                  "code": "atoms",
                  "tag": "code"
                },
                " (fixes SIMICS-22359)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Target parameters": [
        [
          {
            "items": [
              [
                "Fixed a problem validating parameters given on the Simics command line."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "VMP": [
        [
          {
            "items": [
              [
                "An issue with the compilation of VMXMON version 1.16.5 on Linux kernels 6.9 and newer was fixed (fixes HSD-14022400536)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7024,
    "version": "7.13.0",
    "notes": {
      "CMake": [
        [
          {
            "items": [
              [
                "Added clean-up of the python module, i.e. the simmod folder (fixes SIMICS-22452)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Added the command ",
                {
                  "code": "set-table-border-style",
                  "tag": "code"
                },
                " which is the same as ",
                {
                  "code": "table-border-style",
                  "tag": "code"
                },
                " but fits better with the set/get naming scheme used for other commands (fixes SIMICS-21735)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML)": [
        [
          {
            "items": [
              [
                "Typechecking has been reworked to be more strict, and more accurately reject type mismatch that would result in invalid C or GCC warnings (fixes SIMICS-9504). To avoid breakage from novel type errors from the stricter typechecking, which particularly affects pointer types, the legacy lenient typechecking is still used by default with Simics API version 7 or below. The strict typechecking can be enabled by passing ",
                {
                  "code": "--no-compat=lenient_typechecking",
                  "tag": "code"
                },
                " to DMLC."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "DMLC's use of the legacy Simics API for attribute registration is now controlled by the compatibility feature ",
                {
                  "code": "legacy_attributes",
                  "tag": "code"
                },
                ". This feature can be disabled by passing ",
                {
                  "code": "--no-compat=legacy_attributes",
                  "tag": "code"
                },
                " to DMLC, in which case the modern API will be used instead, which does not support the use of dictionary attribute values (fixes SIMICS-22406). ",
                {
                  "code": "legacy_attributes",
                  "tag": "code"
                },
                " will always be disabled with Simics API version 8 or above."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Added additional log messages for the Hot-Plug functionality."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Refactored the library to better integrate with existing access templates in platforms (fixes SIMICS-22337)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7027,
    "version": "7.14.0",
    "notes": {
      "Addon Manager": [
        [
          {
            "items": [
              [
                "Fixed a problem on Windows when running ",
                {
                  "code": "addon-manager",
                  "tag": "code"
                },
                " directly from a Simics-Base installation (fixes SIMINT-1634)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Breakpoint Manager": [
        [
          {
            "items": [
              [
                "The source_line type breakpoints no longer require a filename. If left out the filename of the current stack frame will be used."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Common target scripts": [
        [
          {
            "items": [
              [
                "Fixed a problem with ",
                {
                  "code": "rw-state.yml",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Console components": [
        [
          {
            "items": [
              [
                "Fixed a problem using the ",
                {
                  "code": "telnet_port",
                  "tag": "code"
                },
                " attribute on the ",
                {
                  "code": "txt_console_comp",
                  "tag": "code"
                },
                " component (fixes HSD-14022755342)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Fixed a bug in ",
                {
                  "code": "DBG_mm_get_sites",
                  "tag": "code"
                },
                ", which sometimes would return multiple entries for the same allocation site (fixes SIMICS-22536)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fix a bug in the ",
                {
                  "code": "x",
                  "tag": "code"
                },
                " command when auto repeating by simply pressing return, (fixes SIMICS-22391)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "A new hap type, Core_Log_Message_Always, was added. This one triggers always when a log message is generated regardless of the current log level. It is up to the callback to do proper filtering. Since all log levels are considered, this hap can have more performance impact than other log message haps. For this to work, the module must be compiled with ",
                {
                  "code": "SIMICS_API_USE_LOG_ALWAYS_HAP",
                  "tag": "code"
                },
                " defined before including the ",
                {
                  "code": "simics/base/log.h",
                  "tag": "code"
                },
                ". This will be default in future versions of Simics."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Simics could hang if disassembling was added in the ",
                {
                  "code": "log-setup",
                  "tag": "code"
                },
                " command. This is now fixed, (fixes SIMICS-22326)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Bumped the C++ library shipped with Simics to libstdc++.so.6.0.33."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "New flag ",
                {
                  "code": "-block-only",
                  "tag": "code"
                },
                " was added to the ram tracer tool, which switches off tracing, but blocks caching of ram/rom pages by the ",
                {
                  "code": "direct_memory_lookup",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "list-processors",
                  "tag": "code"
                },
                " command now accepts any object as parent, not only components."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The categories listed by running the ",
                {
                  "code": "help",
                  "tag": "code"
                },
                " command have been updated and class-related entries have been removed or relocated (fixes SIMICS-14765)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Changed from ",
                {
                  "code": "trace-io",
                  "tag": "code"
                },
                " to ",
                {
                  "code": "trace",
                  "tag": "code"
                },
                " in the output from the ",
                {
                  "code": "trace-io",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "break-io",
                  "tag": "code"
                },
                " commands."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The flag to control human-readable output from the unsupported ",
                {
                  "code": "mm-list-",
                  "tag": "code"
                },
                " commands for memory debugging has been renamed to ",
                {
                  "code": "-human-readable",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Updated TCF with the latest changes from the TCF open source project."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML)": [
        [
          {
            "items": [
              [
                "Multiple ",
                {
                  "code": "extern",
                  "tag": "code"
                },
                " declarations for the same identifier are now allowed as long as they all declare the same type for the identifier (fixes SIMICS-22472)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                "The warning message for comparing a value of unsigned type to a negative constant has been improved to also warn for unsigned types shorter than 64 bits."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Calls to methods defined within object arrays now assert that the specified indices for the object arrays are in bounds (fixes SIMICS-22491). For backwards compatibility, these asserts are not performed with Simics API version 7 or below unless ",
                {
                  "code": "--no-compat=no_method_index_asserts",
                  "tag": "code"
                },
                " is passed to DMLC."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "The prefetchable bit are now by default set for 64-bit BARs. For PCIe Type 1 devices the prefetchable memory base is now by default 64-bit (fixes SIMICS-22285)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Probe Monitors": [
        [
          {
            "items": [
              [
                "Added new ",
                {
                  "code": "clear-history",
                  "tag": "code"
                },
                " command to the probe-monitors (",
                {
                  "code": "new-probe-monitor",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "new-system-perfmeter",
                  "tag": "code"
                },
                " objects)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added new ",
                {
                  "code": "force-sample",
                  "tag": "code"
                },
                " command to the probe-monitors (",
                {
                  "code": "new-probe-monitor",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "new-probe-streamer",
                  "tag": "code"
                },
                " and and ",
                {
                  "code": "new-system-perfmeter",
                  "tag": "code"
                },
                " objects)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added new ",
                {
                  "code": "reset-session",
                  "tag": "code"
                },
                " command to the probe-monitors (",
                {
                  "code": "new-probe-monitor",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "new-probe-streamer",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "new-system-perfmeter",
                  "tag": "code"
                },
                " objects)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Project Makefiles": [
        [
          {
            "items": [
              [
                "On Windows, modules built with this Simics-Base version will only work with Simics-Base 7.14.0 or newer."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Python module: sloop": [
        [
          {
            "items": [
              [
                "Fixed a bug in ",
                {
                  "code": "sloop.TaskGroup",
                  "tag": "code"
                },
                ": If one of the tasks in a task group raised an exception, then the task group would in some cases not cancel its remaining tasks (fixes SIMICS-22449)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Tracer Tool": [
        [
          {
            "items": [
              [
                "Added new ",
                {
                  "code": "<tracer_tool>.add-log-message",
                  "tag": "code"
                },
                " ",
                {
                  "code": "<tracer_tool>.remove-log-message",
                  "tag": "code"
                },
                " commands. This requires that the module has been compiled with ",
                {
                  "code": "SIMICS_API_USE_LOG_ALWAYS_HAP",
                  "tag": "code"
                },
                " defined, this will be default in future versions of Simics."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "standard-pcie-switch": [
        [
          {
            "items": [
              [
                "The prefetchable memory is now 64-bit and the BAR for MSI-X is now 64-bit (fixes SIMICS-22285)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "virtio": [
        [
          {
            "items": [
              [
                "Virtio PCIe devices now support 64-bit prefetchable BAR mappings (fixes SIMICS-22285)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7028,
    "version": "7.15.0",
    "notes": {
      "Debugger": [
        [
          {
            "items": [
              [
                "Fixed a problem that could cause a crash when a platform had a large number of registers (fixes SIMICS-22535)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Python module: sloop": [
        [
          {
            "items": [
              [
                "Fixed a bug in ",
                {
                  "code": "sloop.TaskGroup",
                  "tag": "code"
                },
                ": When awaiting multiple subtasks upon fall-through, after one of the tasks finished, the task group would sometimes cancel remaining tasks."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "VMP": [
        [
          {
            "items": [
              [
                "VMXMON version 1.16.5 was updated to work on Red Hat Enterprise Linux (RHEL), particularly, on RHEL 9. It is expected that VMXMON 1.16.5 should now work also on third-party RHEL-based derivatives, e.g., on Rocky Linux."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7029,
    "version": "7.16.0",
    "notes": {
      "DML support in GDB": [
        [
          {
            "items": [
              [
                "Fixed a bug that caused a GDB crash when encountering a subdevice object (fixes SIMICS-22593)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Sample Device with External Library": [
        [
          {
            "items": [
              [
                "Use explicit ",
                {
                  "code": "--soname",
                  "tag": "code"
                },
                " argument to make \"external\" library better relocatable on disk."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7031,
    "version": "7.17.0",
    "notes": {
      "Core": [
        [
          {
            "items": [
              [
                "A bug where Simics crashed when ",
                {
                  "code": "SIM_picosecond_clock",
                  "tag": "code"
                },
                " function was used inside the ",
                {
                  "code": "class_info_t",
                  "tag": "code"
                },
                "'s ",
                {
                  "code": "objects_finalized",
                  "tag": "code"
                },
                " function was fixed (fixes SIMICS-21927)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Graphics console": [
        [
          {
            "items": [
              [
                "On Windows host, fixed a problem introduced in Simics-Base 6.0.193, where the Visual Studio 2017 run-time was needed (fixes HSD-16024356805, SIMINT-1636)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Sample C++ device": [
        [
          {
            "items": [
              [
                "Show how to specialize converters for user defined types."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Text console": [
        [
          {
            "items": [
              [
                "On Windows host, fixed a problem introduced in Simics-Base 6.0.193, where the Visual Studio 2017 run-time was needed (fixes HSD-16024356805, SIMINT-1636)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7033,
    "version": "7.18.0",
    "notes": {
      "Blueprint framework": [
        [
          {
            "items": [
              [
                "The standard state classes in ",
                {
                  "code": "comps.std.state",
                  "tag": "code"
                },
                " have been renamed to not use the word \"connector\"."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "comps.std.connectors",
                  "tag": "code"
                },
                " Python module has been renamed to ",
                {
                  "code": "comps.std.state",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Enumeration types in C are now Python wrapped as Python enumerations (fixes HSD-14020729880)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The type ",
                {
                  "code": "cpuid_value_t",
                  "tag": "code"
                },
                " can now be instantiated from Python (fixes HSD-14023038935)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "IO-apic": [
        [
          {
            "items": [
              [
                "Added MSI support to the IOAPIC."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Target parameters": [
        [
          {
            "items": [
              [
                "Fixed a problem where parameter references were evaluated too early when overriding a parameter to be a reference on the command line, and the script imported another script in the root node."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Text console": [
        [
          {
            "items": [
              [
                "Fixed a memory leak when decreasing the value of the attribute ",
                {
                  "code": "max_scrollback_size",
                  "tag": "code"
                },
                " (fixes HSD-14022995461)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7035,
    "version": "7.19.0",
    "notes": {
      "Blueprint framework": [
        [
          {
            "items": [
              [
                "Added a new CLI command ",
                {
                  "code": "list-blueprints",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "CMake": [
        [
          {
            "items": [
              [
                "Added depfile support to ",
                {
                  "code": "simics_add_documentation",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "CMake configuration is now much faster when running with the ",
                {
                  "code": "CMAKE_EXPORT_COMPILE_COMMANDS",
                  "tag": "code"
                },
                " cache variable set."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "A crash in the ",
                {
                  "code": "restart-simics",
                  "tag": "code"
                },
                " command has been fixed. On Windows, the command now opens a new console window for the Simics command line."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Don't show empty class description in ",
                {
                  "code": "list-objects",
                  "tag": "code"
                },
                " unless ",
                {
                  "code": "-class-desc",
                  "tag": "code"
                },
                " was specified (fixes SIMICS-22173)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a problem where Simics could crash in the clock code."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Documentation Indexer": [
        [
          {
            "items": [
              [
                "It is now possible to explicitly pass package locations to the documentation indexer through the ",
                {
                  "code": "--package",
                  "tag": "code"
                },
                " argument."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe Downstream Port": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "pcie-downstream-port",
                  "tag": "code"
                },
                " now correctly broadcasts the downstream messages to all devices mapped through the ",
                {
                  "code": "pcie_map.add_map(..., PCIE_Type_Msg)",
                  "tag": "code"
                },
                " interface. Previously the attributes ",
                {
                  "code": "devices",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "functions",
                  "tag": "code"
                },
                " were used which did not necessarily represent the targets mapped into PCIe message space (fixes SIMICS-22337)"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Packaging Scripts": [
        [
          {
            "items": [
              [
                "The script ",
                {
                  "code": "bin/aescrypt",
                  "tag": "code"
                },
                " is no longer distributed in the Simics-Base package."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Generation of device ",
                {
                  "code": ".eml",
                  "tag": "code"
                },
                " files has been removed."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Real Network": [
        [
          {
            "items": [
              [
                "TAP connection information is no longer checkpointed (fixes HSD-22019220945)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Target parameters": [
        [
          {
            "items": [
              [
                "File paths in outputs of all commands are now always absolute paths."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Parameters can now have the flag ",
                {
                  "code": "allow_empty",
                  "tag": "code"
                },
                ", which defaults to ",
                {
                  "code": "false",
                  "tag": "code"
                },
                ". If set to ",
                {
                  "code": "true",
                  "tag": "code"
                },
                ", the value ",
                {
                  "code": "NIL",
                  "tag": "code"
                },
                "/",
                {
                  "code": "None",
                  "tag": "code"
                },
                "/",
                {
                  "code": "null",
                  "tag": "code"
                },
                " is a valid value of the parameter."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7037,
    "version": "7.20.0",
    "notes": {
      "Addon Manager": [
        [
          {
            "items": [
              [
                "When adding packages to project local package list, the Python package, number 1033, will now be added automatically if it is found."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "The attribute macro, for example ",
                {
                  "code": "ATTR_CLS_VAR",
                  "tag": "code"
                },
                ", can be used on a C++ tuple now."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Code coverage": [
        [
          {
            "items": [
              [
                "Added branch instruction coverage support for RISC-V."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Added the command ",
                {
                  "code": "list-target-info",
                  "tag": "code"
                },
                " which provides the same information as ",
                {
                  "code": "print-target-info",
                  "tag": "code"
                },
                " but also returns a value (fixes SIMICS-22653)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added ",
                {
                  "code": "cli.register_command_category",
                  "tag": "code"
                },
                " function to be used for non-standard category names (fixes SIMICS-14765). It is optional to add a custom category and adding commands. Loading modules that add CLI commands will emit a warning message on log-level 2 and the developer should remove the ",
                {
                  "code": "type",
                  "tag": "code"
                },
                " argument from those commands, or register a custom category."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Fixed an issue where symbols could get rejected for symbol files opened with ",
                {
                  "code": "open_symbol_file",
                  "tag": "code"
                },
                " in the ",
                {
                  "code": "debug_symbol_file",
                  "tag": "code"
                },
                " interface, but not when added with ",
                {
                  "code": "add-symbol-file",
                  "tag": "code"
                },
                " (fixes HSD-16025356102)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                {
                  "code": "continue",
                  "tag": "code"
                },
                " can now be used within ",
                {
                  "code": "foreach",
                  "tag": "code"
                },
                " loops (use within ",
                {
                  "code": "#foreach",
                  "tag": "code"
                },
                " loops remains unsupported)"
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed an issue where the validity of referenced types in the signatures of unused ",
                {
                  "code": "shared",
                  "tag": "code"
                },
                " methods were not properly checked, leading to invalid generated C."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed an issue where overriding a ",
                {
                  "code": "shared",
                  "tag": "code"
                },
                " method with another could cause an internal compiler error if the method signature involves a template type."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                {
                  "code": "after",
                  "tag": "code"
                },
                " statements now support picoseconds (",
                {
                  "code": "ps",
                  "tag": "code"
                },
                ") as a unit of time (fixes SIMICS-16019)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "explicit_param_decls",
                  "tag": "code"
                },
                " provisional feature is now considered stable. Its use will be kept supported in the same way as any standard DML feature."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Documentation Tool (Tech-Preview)": [
        [
          {
            "items": [
              [
                "Fix how ",
                {
                  "code": "dodoc",
                  "tag": "code"
                },
                " handles ",
                {
                  "code": "<cmd class=...>",
                  "tag": "code"
                },
                " markup in documentation strings it gets from Simics. It now correctly includes the class name in the output."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Graphics console": [
        [
          {
            "items": [
              [
                "The console was updated to facilitate delayed initialization."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Updated the SR-IOV capability registers to include the new PCIe 6 field ",
                {
                  "code": "vf14btrs",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Simics Migration Guide": [
        [
          {
            "items": [
              [
                "The SystemC Library has been moved out of the Simics Base package to a separate package 1013 (",
                {
                  "children": [
                    "SystemC-Library"
                  ],
                  "tag": "em"
                },
                ")."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Text console": [
        [
          {
            "items": [
              [
                "The console was updated to facilitate delayed initialization."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Tracer Tool": [
        [
          {
            "items": [
              [
                "Previously, the tracing tools created with the ",
                {
                  "code": "new-tracer-tool",
                  "tag": "code"
                },
                " command could in certain cases produce no output at all when none of ",
                {
                  "code": "-trace-*",
                  "tag": "code"
                },
                " flags were provided. This behavior was changed. The tools will now always trace all events - as if all ",
                {
                  "code": "-trace-*",
                  "tag": "code"
                },
                " flags were provided - when no ",
                {
                  "code": "-trace-*",
                  "tag": "code"
                },
                " flags are provided to the ",
                {
                  "code": "new-tracer-tool",
                  "tag": "code"
                },
                " command. As before, to limit output from the tool one can trace only selected events by passing individual ",
                {
                  "code": "-trace-*",
                  "tag": "code"
                },
                " options or a combination of them. The change fixes SIMICS-21724 bug report."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "X2APIC (C++)": [
        [
          {
            "items": [
              [
                "Corrected ",
                {
                  "code": "Version",
                  "tag": "code"
                },
                " register ",
                {
                  "code": "MaxLvtField",
                  "tag": "code"
                },
                " value when type is ",
                {
                  "code": "apic_x2",
                  "tag": "code"
                },
                " to return 6 instead of 5."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7042,
    "version": "7.21.0",
    "notes": {
      "Core": [
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "memory-map",
                  "tag": "code"
                },
                " now has the additional arguments ",
                {
                  "code": "start",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "end",
                  "tag": "code"
                },
                ". These can be used to inspect a subrange of the address space [start, end). For platforms with large regions of interleaved RAM memory the ",
                {
                  "code": "memory-map",
                  "tag": "code"
                },
                " command will take a very long time to execute even if one has excluded the ",
                {
                  "code": "ram",
                  "tag": "code"
                },
                " objects from the output through the ",
                {
                  "code": "exclude",
                  "tag": "code"
                },
                " argument. In such scenarios it is better to execute the ",
                {
                  "code": "memory-map",
                  "tag": "code"
                },
                " command twice. The first time with ",
                {
                  "code": "end",
                  "tag": "code"
                },
                " set at the beginning of the address range of interleaved RAM region and the second time with the ",
                {
                  "code": "start",
                  "tag": "code"
                },
                " argument set right after the interleaved RAM region."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Updated Winsome (win-control) to handle the new format returned by ",
                {
                  "code": "target_info",
                  "tag": "code"
                },
                " (fixes SIMICS-22699)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "An update in version 6.0.206 revealed that some add-on packages registered CLI commands in an incorrect way, leading to a Python TypeError backtrace. For backwards compatibility, Simics will now accept this incorrect command registration with only a warning."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                {
                  "code": "SIM_current_processor",
                  "tag": "code"
                },
                " could previously return wrong value when executed after the call to ",
                {
                  "code": "SIM_transaction_wait",
                  "tag": "code"
                },
                ". This issue was fixed (fixes SIMICS-21676)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "CLI documentation can now reference a command that is bound to an interface, by using a tag in style with ",
                {
                  "code": "<cmd iface=\"the_iface\">",
                  "tag": "code"
                },
                " (fixes SIMICS-22684)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Updates which step commands are aliases and which are base commands."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                "Added the ",
                {
                  "code": "destroy",
                  "tag": "code"
                },
                " template, the device deletion equivalent of the ",
                {
                  "code": "init",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "post_init",
                  "tag": "code"
                },
                " templates. When the device is being deleted, ",
                {
                  "code": "destroy()",
                  "tag": "code"
                },
                " will be called of every object that instantiates the ",
                {
                  "code": "destroy",
                  "tag": "code"
                },
                " template. The device object always instantiates this template."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Project Setup Script": [
        [
          {
            "items": [
              [
                "On Windows, the ",
                {
                  "code": ".bat",
                  "tag": "code"
                },
                " files generated in the project no longer leaks environment variables to the calling shell."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Simics Agent": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "run",
                  "tag": "code"
                },
                " command of the UEFI Simics Agent now supports passing arguments and redirections."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7050,
    "version": "7.22.0",
    "notes": {
      "Blueprint framework": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "expand()",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "instantiate()",
                  "tag": "code"
                },
                " functions no require a top level namespace name."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Registering objects without name is no longer allowed."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Added support for ",
                {
                  "code": "after",
                  "tag": "code"
                },
                " which is a lightweight event mechanism that schedules a specified method call (the callback) to be executed at a future point."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "CMake": [
        [
          {
            "items": [
              [
                "Fetch project paths from JSON instead of raw file. Fixes a problem with normalizing paths with symlinks."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Code coverage": [
        [
          {
            "items": [
              [
                "Fixed an issue with broken source links when using the ",
                {
                  "code": "-tree-summary",
                  "tag": "code"
                },
                " flag with ",
                {
                  "code": "<code_coverage>.html-report",
                  "tag": "code"
                },
                " (fixes HSD-13012302936)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added branch instruction coverage support for Xtensa (fixes HSD-15011760644)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Now the ",
                {
                  "code": "list-processors",
                  "tag": "code"
                },
                " command sorts processors in numeric order (fixes SIMICS-22695)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The included ",
                {
                  "code": "libexpat",
                  "tag": "code"
                },
                " library has been upgraded to version 2.6.3."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed an issue where Simics sometimes took several seconds to start on Windows (fixes SIMICS-22513)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a problem where Simics could crash during object creation if invalid ",
                {
                  "code": "index-map",
                  "tag": "code"
                },
                " child objects were encountered (fixes SIMICS-22694)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The information about the Python version used at run time is now reported by the ",
                {
                  "code": "version",
                  "tag": "code"
                },
                " command, the ",
                {
                  "code": "sim.info",
                  "tag": "code"
                },
                " command and when getting version information by running the simulator with the \"--version\" command line option (fixes SIMICS-22554)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Removed the ",
                {
                  "code": "Simics Model Development Checklist",
                  "tag": "code"
                },
                " app-note since this information is already available in the ",
                {
                  "code": "Model Builder User's Guide",
                  "tag": "code"
                },
                " (fixes SIMICS-19509)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Fixed a bug in handling of breakpoint conditions when debugging with Intel® System Debugger (fixes HSD-14022961505)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "TCF will now close it's socket when the simulator exits."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML)": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "ATOM_LIST_END",
                  "tag": "code"
                },
                " macro has been made referencable in DML (equivalent to ",
                {
                  "code": "ATOM_list_end(0)",
                  "tag": "code"
                },
                ") (fixes SIMICS-22363)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Relaxed the rule which conditionally forbade naming a ",
                {
                  "code": "group",
                  "tag": "code"
                },
                " \"port\" or \"bank\". Any ",
                {
                  "code": "group",
                  "tag": "code"
                },
                " may now be named \"port\" or \"bank\" regardless of context, but ",
                {
                  "code": "port",
                  "tag": "code"
                },
                "s, ",
                {
                  "code": "bank",
                  "tag": "code"
                },
                "s, or ",
                {
                  "code": "subdevice",
                  "tag": "code"
                },
                "s may not be declared underneath any ",
                {
                  "code": "group",
                  "tag": "code"
                },
                " named \"port\" or \"bank\". (For DML 1.2 devices, this change only applies to naming a group \"port\", as naming any object \"bank\" in 1.2 devices is impossible due to every object of a 1.2 device having the ",
                {
                  "code": "bank",
                  "tag": "code"
                },
                " parameter.)"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Register Viewer": [
        [
          {
            "items": [
              [
                "When accessing a single field through the ",
                {
                  "code": "read-device-reg",
                  "tag": "code"
                },
                " or ",
                {
                  "code": "write-device-reg",
                  "tag": "code"
                },
                " commands, and byte swapping is requested, then Simics will now report an error if the field is not aligned to byte boundaries."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a bug that caused ",
                {
                  "code": "read-device-reg",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "write-device-reg",
                  "tag": "code"
                },
                " to read or write values in little-endian byte order also on banks using big-endian byte order (fixes SIMICS-22697)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Documentation Indexer": [
        [
          {
            "items": [
              [
                "The documentation indexer can now generate a site with a custom title. Use the ",
                {
                  "code": "--title",
                  "tag": "code"
                },
                " flag to set a custom title. This fixes SIMICS-22765."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Documentation Tool (Tech-Preview)": [
        [
          {
            "items": [
              [
                "Fixed ",
                {
                  "code": ".d",
                  "tag": "code"
                },
                "-file generation to only list each dependency once."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Goldfish RTC": [
        [
          {
            "items": [
              [
                "Initial release of Google Goldfish Real Time Clock"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Matic extension": [
        [
          {
            "items": [
              [
                "Replace invalid utf-8 characters in the command output with place-holders (fixes HSD-22020471221)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Project Makefiles": [
        [
          {
            "items": [
              [
                "Moved some GNU Make definitions from Base into SystemC add-on package. SystemC users using Simics Base 6.0.209 or newer must upgrade 1013 add-on package to version 6.0.13."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Python Module: testparams": [
        [
          {
            "items": [
              [
                "Tests can now be run with a host Python by setting the ",
                {
                  "code": "SIMICS_PYTHON",
                  "tag": "code"
                },
                " environment variable."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Target parameters": [
        [
          {
            "items": [
              [
                "Fixed a problem where Simics could sometimes crash when started with any of the ",
                {
                  "code": "--list-targets",
                  "tag": "code"
                },
                " or ",
                {
                  "code": "--list-presets",
                  "tag": "code"
                },
                " command line arguments."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "test-runner": [
        [
          {
            "items": [
              [
                "Tests can now be run with a host Python by setting the ",
                {
                  "code": "SIMICS_PYTHON",
                  "tag": "code"
                },
                " environment variable."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7053,
    "version": "7.23.0",
    "notes": {
      "Accel VGA V2": [
        [
          {
            "items": [
              [
                "Initial release of the DML 1.4 rewrite of the Accel VGA device using the new PCIe library."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Breakpoint Manager": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "wait-for",
                  "tag": "code"
                },
                " commands now respect breakpoint enable and ignore count status (fixes SIMICS-22838)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a problem where ",
                {
                  "code": "bp.cycle_event",
                  "tag": "code"
                },
                " one-shot breakpoints could lead to a crash (fixes SIMICS-22648)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "bp.wait-for-breakpoint",
                  "tag": "code"
                },
                " now works correctly when used multiple times on the same breakpoint (fixes SIMICS-22828)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "The attribute macro, for example ",
                {
                  "code": "ATTR_CLS_VAR",
                  "tag": "code"
                },
                ", can be used on a C++ set now."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Explicitly disallow pointer types from being translated into Simics attributes. Doing so will break the checkpointing capability."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Code coverage": [
        [
          {
            "items": [
              [
                "Disassembly output for Xtensa now makes use of the ",
                {
                  "code": ".xt.prop",
                  "tag": "code"
                },
                " section to determine what is instructions and what is data (fixes SIMICS-21954). Removed data that is intermixed with instructions is also presented in a better way in the html report."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Multiple functions at same address are now handled better. Functions with zero size will be ignored. Multiple functions at the same address that have different size will be reported as errors. For functions with same address and size the one with least amount of initial underscores will be kept."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "SIM_make_attr_data",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "SIM_make_attr_data_adopt",
                  "tag": "code"
                },
                " functions now report an error if the value of the ",
                {
                  "code": "size",
                  "tag": "code"
                },
                " parameter is too large (i.e. larger than ",
                {
                  "code": "UINT_MAX",
                  "tag": "code"
                },
                "). Previously, large values of the ",
                {
                  "code": "size",
                  "tag": "code"
                },
                " parameter were handled incorrectly and no error was reported (fixes SIMICS-22766)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Adding the arguments ",
                {
                  "code": "read_only",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "write_only",
                  "tag": "code"
                },
                " to attribute creation in confclass.py (fixes SIMICS-22853)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "api-help",
                  "tag": "code"
                },
                " command now shows which c++ header includes the input interface."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Removed the Simics 5 warning in the ",
                {
                  "code": "read-device-reg",
                  "tag": "code"
                },
                " command (fixes SIMICS-22783)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added ",
                {
                  "code": "-only-outbound",
                  "tag": "code"
                },
                " flag to ",
                {
                  "code": "list-object-references",
                  "tag": "code"
                },
                " command. With that option then only outbound references is shown (fixes SIMICS-21358)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added ",
                {
                  "code": "-hide-queue",
                  "tag": "code"
                },
                " flag to ",
                {
                  "code": "list-object-references",
                  "tag": "code"
                },
                " command, so that references through queue attributes can be omitted (fixes SIMICS-22673)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Error logs will no longer cause Simics to send SIGTRAP signals (fixes HSD-22020398500). The earlier behavior, where signals were sent out on error logs, can optionally be turned on using the ",
                {
                  "code": "sim->sigtrap_on_error_log",
                  "tag": "code"
                },
                " attribute."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "io-stats",
                  "tag": "code"
                },
                " command and ",
                {
                  "code": "dev.io_access_count",
                  "tag": "code"
                },
                " probe should now report correct values for devices that use the ",
                {
                  "code": "transaction",
                  "tag": "code"
                },
                " interface. Previously, only objects implementing the ",
                {
                  "code": "io_memory",
                  "tag": "code"
                },
                " interface was supported. The internal ",
                {
                  "code": "access_count",
                  "tag": "code"
                },
                " attribute has been removed for all objects that does not implement the ",
                {
                  "code": "io_memory",
                  "tag": "code"
                },
                " or ",
                {
                  "code": "transaction",
                  "tag": "code"
                },
                " interfaces. Adding objects that implements the ",
                {
                  "code": "transaction",
                  "tag": "code"
                },
                " interface may also count accesses passing through memory spaces (previously only unmapped accesses were counted for memory spaces). In Simics 7, ",
                {
                  "code": "DMLC",
                  "tag": "code"
                },
                " generates ",
                {
                  "code": "transaction",
                  "tag": "code"
                },
                " endpoints instead of ",
                {
                  "code": "io_memory",
                  "tag": "code"
                },
                ", consequently, this fix impacts Simics 7 more (fixes SIMICS-19493)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML)": [
        [
          {
            "items": [
              [
                "Added the new ",
                {
                  "code": "register_view_catalog",
                  "tag": "code"
                },
                " interface to all banks. This speeds up various operations that rely on the ",
                {
                  "code": "register_view",
                  "tag": "code"
                },
                " interface, such as the ",
                {
                  "code": "dev_util.bank_regs",
                  "tag": "code"
                },
                " function and the ",
                {
                  "code": "write-device-reg",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "probe-address",
                  "tag": "code"
                },
                " CLI commands."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Ethernet Links": [
        [
          {
            "items": [
              [
                {
                  "code": "<link>.start-link-monitor",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "<link>.view-link-monitor",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "<link>.stop-link-monitor",
                  "tag": "code"
                },
                " are new commands to monitor and view ethernet traffic over a link."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Model Builder": [
        [
          {
            "items": [
              [
                "Added example devices implemented in Python using ",
                {
                  "code": "confclass",
                  "tag": "code"
                },
                ". To create an empty Python device, use ",
                {
                  "code": "project-setup",
                  "tag": "code"
                },
                " with the ",
                {
                  "code": "--py-device-confclass",
                  "tag": "code"
                },
                " argument, or ",
                {
                  "code": "--copy-module sample-device-python-confclass",
                  "tag": "code"
                },
                " to copy the module ",
                {
                  "code": "sample-device-python-confclass",
                  "tag": "code"
                },
                " to the project."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Fixed Expansion ROM BARs not being updated when the ",
                {
                  "code": "mem",
                  "tag": "code"
                },
                " field in the ",
                {
                  "code": "command",
                  "tag": "code"
                },
                " register is set to a new value"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Python Module: dev_util": [
        [
          {
            "items": [
              [
                "Improved the performance of the ",
                {
                  "code": "bank_regs",
                  "tag": "code"
                },
                " function, by creating the register structure lazily to some extent (fixes HSD-22016635716)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Real Network": [
        [
          {
            "items": [
              [
                "Fixed a race condition with packet thread and delete real-network (fixed SIMINT-1633)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "X2APIC (C++)": [
        [
          {
            "items": [
              [
                "Attribute ",
                {
                  "code": "fwd_apic_bus",
                  "tag": "code"
                },
                " added to the ",
                {
                  "code": "apic_bus_v2",
                  "tag": "code"
                },
                " class. Intended to be used for systems where there are separate local apic bus instances and routing between them is needed."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7055,
    "version": "7.24.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Added ",
                {
                  "code": "MapTargetConnect",
                  "tag": "code"
                },
                " class to help connect an object as a map target."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Code coverage": [
        [
          {
            "items": [
              [
                "The HTML report will now show function coverage, both in the summary and under a new tab named ",
                {
                  "code": "Functions",
                  "tag": "code"
                },
                " (fixes HSD-18039603755). Function coverage output in a HTML report can be turned off using the ",
                {
                  "code": "-no-function-coverage",
                  "tag": "code"
                },
                " flag of the ",
                {
                  "code": "<code-coverage>.html-report",
                  "tag": "code"
                },
                " command."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Commands ",
                {
                  "code": "wait-for-read",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "wait-for-write",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "wait-for-get",
                  "tag": "code"
                },
                ", and ",
                {
                  "code": "wait-for-set",
                  "tag": "code"
                },
                " were updated. Previously, the commands raised an exception when the transactions issued by the commands were deferred and ",
                {
                  "code": "SIM_transaction_wait",
                  "tag": "code"
                },
                " was used by device models to wait for their completion (fixes HSD-22014315925)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added ",
                {
                  "code": "-show-description",
                  "tag": "code"
                },
                " flag to ",
                {
                  "code": "list-attributes",
                  "tag": "code"
                },
                " command (fixes SIMICS-22095)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed incorrect BDFs for virtual functions when using the ",
                {
                  "code": "list-pcie-hierarchies",
                  "tag": "code"
                },
                " command."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Updated setting and getting thread name on Windows to support Windows Server 16 (fixes HSD-15017059209)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Python wrappers for ",
                {
                  "code": "transaction_t",
                  "tag": "code"
                },
                " were fixed not to crash when 'del' is used: an exception is thrown instead (fixes SIMICS-22278)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML)": [
        [
          {
            "items": [
              [
                "Line directives in generated C files will now always use absolute file paths. This is to resolve an issue where debugging or coverage tools may be unable to locate the referenced file in certain contexts (fixes SIMICS-22848)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Documentation Indexer": [
        [
          {
            "items": [
              [
                "The documentation indexer no longer generates a table of contents with multiple entries for the same document if you ask it to index multiple documents with the same name. Instead it only picks one of them. It also prints a message about the duplicated documents to make the user aware, but this is not considered an error."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Documentation Tool (Tech-Preview)": [
        [
          {
            "items": [
              [
                "Added a ",
                {
                  "code": "collect",
                  "tag": "code"
                },
                " marker to tests embedded in documentation that will set a ",
                {
                  "code": "collect",
                  "tag": "code"
                },
                " flag for the given session in the generated json file. This is meant be used to control if a test framework shall run the test in a \"stop at first failure\" mode or in a \"run and collect all failures\" mode."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Graphics console": [
        [
          {
            "items": [
              [
                "Adding description to capture-start for when it's viable (fixes SIMINT-1649)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Sample C++ device": [
        [
          {
            "items": [
              [
                "Replaced ",
                {
                  "code": "dev_util.Dev",
                  "tag": "code"
                },
                " with ",
                {
                  "code": "confclass",
                  "tag": "code"
                },
                " in tests."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "X2APIC (C++)": [
        [
          {
            "items": [
              [
                "Interface ",
                {
                  "code": "io_memory",
                  "tag": "code"
                },
                " removed from the ",
                {
                  "code": "apic_bus_v2",
                  "tag": "code"
                },
                " class as this is no longer used for MSI."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7056,
    "version": "7.25.0",
    "notes": {
      "Blueprint framework": [
        [
          {
            "items": [
              [
                "Fixed a problem with extraneous output from ",
                {
                  "code": "expand()",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Breakpoint Manager": [
        [
          {
            "items": [
              [
                "Fixed a problem where a breakpoint was not deleted if it was waited on using ",
                {
                  "code": "bp.wait-for-breakpoint",
                  "tag": "code"
                },
                " (fixes SIMICS-22869)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Added ",
                {
                  "code": "RegisterClassWithSimics",
                  "tag": "code"
                },
                " class to help register a class with Simics."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Common target scripts": [
        [
          {
            "items": [
              [
                "Moved user-provided-linux helper scripts from QSP into common targets to facilitate easier reuse by other platforms."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Handle errors in ",
                {
                  "code": "confclass",
                  "tag": "code"
                },
                " attribute getters and setters the same way as classes created with ",
                {
                  "code": "pyobj",
                  "tag": "code"
                },
                " (fixes SIMICS-22081)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Raise exception when a custom setter is defined for a read-only attribute or a custom getter is defined for a write-only attribute when using confclass (fixes SIMICS-22856)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Set correct language type for code examples in Simics User's Guide (fixes SIMICS-22867)"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Probe Monitors": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "html-report",
                  "tag": "code"
                },
                " command now takes an optional graph specification file, in json format. This new specification file describes what graphs that should be generated in the report, if the required probe data is available. If the json file is not specified, a default json file will be used, producing graphs suitable for internal Simics performance analyses. The json key/value parameters defining the graphs, are described in the help text of the ",
                {
                  "code": "html-report",
                  "tag": "code"
                },
                " command. These are preliminary and might change in future versions of Simics."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Simics Migration Guide": [
        [
          {
            "items": [
              [
                "Moved the ",
                {
                  "children": [
                    "Migrating from IO Memory to Transactions"
                  ],
                  "tag": "em"
                },
                " section next to the major version migration guides, since it is not related to a major version. One can migrate from IO Memory to Transactions within Simics 7 itself. Also added a section on align-size based transaction splitting when migrating away from IO memory."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7057,
    "version": "7.26.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Added support for the ",
                {
                  "code": "RegisterViewCatalog",
                  "tag": "code"
                },
                " interface in the C++ ",
                {
                  "code": "BankPort",
                  "tag": "code"
                },
                " class."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "sim->cell_list",
                  "tag": "code"
                },
                " attribute has been converted to a pseudo attribute (fixes SIMICS-21638). With this change the value is always the list of active cells. The attribute is now read-only."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "IO-apic": [
        [
          {
            "items": [
              [
                "MSI are now sent via a ",
                {
                  "code": "transaction",
                  "tag": "code"
                },
                " interface."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Linux Tracker": [
        [
          {
            "items": [
              [
                "Fixed kernel module detection to work with kernel address randomization and a System.map type symbol file (fixes SIMICS-22895)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Model Builder": [
        [
          {
            "items": [
              [
                "The Python bindings for a user-defined interface module will no longer appear in a Python module named ",
                {
                  "code": "<module>",
                  "tag": "code"
                },
                ", only in a Python module named ",
                {
                  "code": "simmod.<module>",
                  "tag": "code"
                },
                ". The latter is the official and documented name since Simics 5."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7058,
    "version": "7.27.0",
    "notes": {
      "Blueprint framework": [
        [
          {
            "items": [
              [
                "Fixed a problem where iteration over namespace objects led to an infinite loop."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Fixed a bug that led to error when disconnecting an ethernet link without a probe instance as attribute. Also the bug was really disconnecting an ETG (fixes SIMICS-22892)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "list-thread-domains",
                  "tag": "code"
                },
                " command now always reports cell thread domains. Previously, cell thread domains could be omitted if there were no CPU or clock objects in them. This could be confusing (fixes SIMICS-22384)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Documentation Tool (Tech-Preview)": [
        [
          {
            "items": [
              [
                "Removed special handling of parenthesis in simics code blocks. This was undocumented functionality which caused confusion and confusing errors."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Simics Migration Guide": [
        [
          {
            "items": [
              [
                "Added the ",
                {
                  "children": [
                    "Migrating from IO Memory to Transactions"
                  ],
                  "tag": "em"
                },
                " section from the Simics 7 migration guide into the Simics 6 migration guide and moved it next to the major version migration guides, since it is not related to a major version. One can migrate from IO Memory to Transactions within Simics 6 itself. Also added a section on align-size based transaction splitting when migrating away from IO memory."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "VMP": [
        [
          {
            "items": [
              [
                "Version 1.16.6 adds preliminary support of using host's 5-level paging to represent target's 5-level paging (classic and EPT) is added. It requires a host that supports both LA57 and EPT5."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7061,
    "version": "7.28.0",
    "notes": {
      "Blueprint framework": [
        [
          {
            "items": [
              [
                "The Blueprint framework is now no longer a technology preview but a supported product feature."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Added support for registering class attribute (fixes SIMICS-22826)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Removed the semicolon at the end of the definition of the ",
                {
                  "code": "SIM_LOG_XXX_STR",
                  "tag": "code"
                },
                " macros. User should add the semicolon to complete the statement."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added support for the ",
                {
                  "code": "SIM_LOG_WARNING_STR",
                  "tag": "code"
                },
                " macro."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Moved the equality and inequality check for ",
                {
                  "code": "ConfObjectRef",
                  "tag": "code"
                },
                " to non-member functions to maintain the symmetry of the operators."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a bug where a ",
                {
                  "code": "ConfObjectRef",
                  "tag": "code"
                },
                " object returned an incorrect name after being moved. Due to the change in the function signature of the ",
                {
                  "code": "name",
                  "tag": "code"
                },
                " method inside the ",
                {
                  "code": "ConfObjectRef",
                  "tag": "code"
                },
                " class, all dependent code needs to be rebuilt."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Moved the ",
                {
                  "code": "array_index",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "expand_names",
                  "tag": "code"
                },
                " functions to ",
                {
                  "code": "utility.h",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a bug in the inequality check for ",
                {
                  "code": "ConfObjectRef",
                  "tag": "code"
                },
                " objects."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Code coverage": [
        [
          {
            "items": [
              [
                "Fixed a bug in function coverage handling where the HTML reporter could assert if there where overlapping mappings in the raw report."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "When using instruction level branch coverage and a conditional branch instruction that does not belong to any mapping executes, the branch information will now be stored under ",
                {
                  "code": "unknown_branches",
                  "tag": "code"
                },
                " in the raw report."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "sim.status",
                  "tag": "code"
                },
                " command now reports the total wall-clock time when the simulation was running."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed clearing previous checkpoint paths when doing ",
                {
                  "code": "write-configuration -independent-checkpoint",
                  "tag": "code"
                },
                " (fixes SIMICS-22928)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "check-cell-partitioning",
                  "tag": "code"
                },
                " now ignores the ",
                {
                  "code": "sim.transactions",
                  "tag": "code"
                },
                " object. With this change deferred transactions from different cells will no longer tie the cells together (fixes HSD-18040888679)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added support for info and status commands to ",
                {
                  "code": "confclass",
                  "tag": "code"
                },
                " (fixes SIMICS-22924). Example of usage is in the ",
                {
                  "code": "Model Builder User's Guide",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed so that early deletion of a cell will not crash."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "check-cell-partitioning",
                  "tag": "code"
                },
                " changed to also check that ports are in the same cell as their parent (fixes SIMICS-10221)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added a section that describes how to migrate ",
                {
                  "code": "pyobj",
                  "tag": "code"
                },
                " classes to ",
                {
                  "code": "confclass",
                  "tag": "code"
                },
                " in the ",
                {
                  "code": "Model Builder User's Guide",
                  "tag": "code"
                },
                " manual (fixes SIMICS-20255)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The bundled Python distribution has now been removed from package 1000 and is only distributed in package 1033. It is typically necessary to install both these packages for a functioning setup."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Improved crash handling when a fatal error occurs while simulation is running, user can now exit Simics properly (fixes HSD-22016266435)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "DML support in GDB": [
        [
          {
            "items": [
              [
                "Using GDB now requires package 1033 to be installed and linked in the Simics project."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Fixed an issue where a memory corruption could occur if the TCF channel was closed in the middle of a step."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The triggering context ID in ",
                {
                  "code": "containerSuspended",
                  "tag": "code"
                },
                " events was better selected under some circumstances when stepping."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed an issue where simulation could not be stopped through TCF protocol, if the TCF object was created while simulation was already runnining."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added support for 16-bit access in VMCS memory contexts 16-bit access (fixes 18040970189)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a bug where PDB-handling could crash when host Python was used."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML)": [
        [
          {
            "items": [
              [
                "Added the ",
                {
                  "code": "COVERITY",
                  "tag": "code"
                },
                " pragma, which allows for the manual suppression of defects reported by Synopsys® Coverity® for particular DML lines, as long as Coverity support is enabled by passing ",
                {
                  "code": "--coverity",
                  "tag": "code"
                },
                " to DMLC."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added a system and syntax for DMLC pragmas. Every supported pragma is named and documented within the ",
                {
                  "children": [
                    "Pragmas"
                  ],
                  "tag": "em"
                },
                " subsection of the DML 1.4 Reference Manual."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added checks that cause DMLC to reject the use of any log level but ",
                {
                  "code": "1",
                  "tag": "code"
                },
                " for log statements of kind ",
                {
                  "code": "warning",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "error",
                  "tag": "code"
                },
                ", or ",
                {
                  "code": "critical",
                  "tag": "code"
                },
                "; and reject the use of any subsequent log level for these logging kinds but ",
                {
                  "code": "1",
                  "tag": "code"
                },
                " or ",
                {
                  "code": "5",
                  "tag": "code"
                },
                " (fixes SIMICS-22401). For compatibility reasons, these checks are not performed with Simics API version 7 or below unless ",
                {
                  "code": "--no-compat=meaningless_log_levels",
                  "tag": "code"
                },
                " is passed to DMLC."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Log statements of kind ",
                {
                  "code": "warning",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "error",
                  "tag": "code"
                },
                ", or ",
                {
                  "code": "criticial",
                  "tag": "code"
                },
                " now support the use of ",
                {
                  "code": "5",
                  "tag": "code"
                },
                " as a subsequent log level, meaning the log will only happen once. Any other value of the subsequent log level but ",
                {
                  "code": "1",
                  "tag": "code"
                },
                " will be treated as ",
                {
                  "code": "5",
                  "tag": "code"
                },
                " for these logging kinds."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The DML files wrapping the Simics API now expose every type and (for ",
                {
                  "code": "enum",
                  "tag": "code"
                },
                "s) associated symbols by default, addressing the issue where several useful types provided by the Simics API were not made available (fixes SIMICS-19133)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                "Fixed an issue where initializing a ",
                {
                  "code": "local",
                  "tag": "code"
                },
                " variable via a method call was not properly type-checked, which could result in invalid code being accepted, as well as incorrect semantics, invalid generated C, or undefined behaviour (fixes SIMICS-22874)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "GDB Remote": [
        [
          {
            "items": [
              [
                "Fixed an issue with debugging Xtensa models with registers larger than 8 bytes, which would crash Simics when accessing the register. Such large registers will now be ignored (fixes HSD-22020761198)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Graphics console": [
        [
          {
            "items": [
              [
                "Fixed handling of early dealloc to prevent device from crashing."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Link Library": [
        [
          {
            "items": [
              [
                "Fixed so that early deletion of a link will not crash."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "OS Awareness": [
        [
          {
            "items": [
              [
                "Failure to read physical memory will now be logged as a warning instead of an error."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed handling of early dealloc to prevent device from crashing."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Functions will not be able to issue PCIe Memory Requests if the Bus Master Enable bit is not set. Ports are further more not able to forward upstream Memory or I/O Requests if the Bus Master Enable bit is not set."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Probe Monitors": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "html-report",
                  "tag": "code"
                },
                " command output has been slightly optimized, to reduce the size of the generated HTML code. For very big reports with many samples and graphs, the browser can still become sluggish."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Service Node": [
        [
          {
            "items": [
              [
                "Added virtual time mode with simulation time as option for NTP (fixes SIMICS-22778)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Updated ",
                {
                  "code": "list-port-forward-setup",
                  "tag": "code"
                },
                " command to silently return a list that contain incoming port forwarding data (fixes SIMICS-22913)"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Text console": [
        [
          {
            "items": [
              [
                "Fixed handling of early dealloc to prevent device from crashing."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "VGA": [
        [
          {
            "items": [
              [
                "Fixed handling of early dealloc to prevent device from crashing."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "X2APIC (C++)": [
        [
          {
            "items": [
              [
                "Stop timer when mode changes from TSC-deadline."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7063,
    "version": "7.29.0",
    "notes": {
      "AT24Cxx": [
        [
          {
            "items": [
              [
                "Fixed out of bounds address read (SIMICS-22864)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Breakpoint Manager": [
        [
          {
            "items": [
              [
                "Added breakpoint type for Model-Specific Registers (MSRs). All x86 processor models, starting from Pentium®, use MSRs"
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Fixed a bug about pointer casting in the ",
                {
                  "code": "from_obj",
                  "tag": "code"
                },
                " function. In the ",
                {
                  "code": "from_obj",
                  "tag": "code"
                },
                " utility function, the direct cast from ",
                {
                  "code": "void*",
                  "tag": "code"
                },
                " to ",
                {
                  "code": "T*",
                  "tag": "code"
                },
                " could lead to incorrect behavior when T is derived from ",
                {
                  "code": "ConfObject",
                  "tag": "code"
                },
                " but ",
                {
                  "code": "ConfObject",
                  "tag": "code"
                },
                " is not the first base class. This could result in incorrect pointer arithmetic and potentially undefined behavior."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Deprecated method ",
                {
                  "code": "group_id",
                  "tag": "code"
                },
                " of the ",
                {
                  "code": "ConfObjectRef",
                  "tag": "code"
                },
                " class. If there is a need to get the id of a log group, use the macro ",
                {
                  "code": "GROUP_ID(NAME)",
                  "tag": "code"
                },
                " or ",
                {
                  "code": "ConfClass::getGroupId",
                  "tag": "code"
                },
                " instead."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Allow nesting ",
                {
                  "code": "SIM_process_work",
                  "tag": "code"
                },
                " calls that have ",
                {
                  "code": "done",
                  "tag": "code"
                },
                " callbacks (fixes SIMICS-16444)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a problem with Python wrapping of negative enumeration values (fixes SIMICS-22917)"
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Simics will now issue a warning if two modules with the same name are detected in the same directory. It is undefined which module will take precedence over the other."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                {
                  "children": [
                    "The search order for Simics modules has been changed: If multiple modules with the same name are available on the search path, then Simics will select one based only on which directory it resides in. Most properties of the module search order remain the same as before; in particular, modules built in the project or added with ",
                    {
                      "code": "add-module-directory",
                      "tag": "code"
                    },
                    " still have higher priority than modules from any package, and modules from prioritized packages still have higher priority than modules from non-prioritized packages. However, when choosing among conflicting modules e.g. among non-prioritized packages, Simics previously preferred the module with the newest build date; this property is no longer significant."
                  ],
                  "tag": "p"
                },
                {
                  "children": [
                    "Technically, the new search order is based on Python's ",
                    {
                      "code": "sys.path",
                      "tag": "code"
                    },
                    ": Simics adds entries in ",
                    {
                      "code": "sys.path",
                      "tag": "code"
                    },
                    " for all module directories, and then searches for modules based on the order they appear there. If the Simics-managed ",
                    {
                      "code": "sys.path",
                      "tag": "code"
                    },
                    " entries are tampered with, some commands (",
                    {
                      "code": "set-prioritized-package",
                      "tag": "code"
                    },
                    ", ",
                    {
                      "code": "add-module-directory",
                      "tag": "code"
                    },
                    ") will report an error and refuse to work. A new CLI command ",
                    {
                      "code": "reset-sys-path",
                      "tag": "code"
                    },
                    " has also been added to restore these ",
                    {
                      "code": "sys.path",
                      "tag": "code"
                    },
                    " entries to a consistent state."
                  ],
                  "tag": "p"
                }
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "The number of proxy suspend and resume events have been reduced and will no longer be sent when evaluating symbols as part of stepping (fixes HSD-18040837875)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Updated internal lock handling after fixes to SIM_process_work."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added support for PTTT breakpoint handling (fixes HSD-18040154494)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "A planted breakpoint will now be reported as Software type unless explicitly requested to be of Hardware type."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                "Addressed a bug where DMLC did not report errors when an ",
                {
                  "code": "extern typedef",
                  "tag": "code"
                },
                " referenced a non-existing type. E.g., the following would not give an error if ",
                {
                  "code": "never_used_t",
                  "tag": "code"
                },
                " was never used:",
                {
                  "code": "extern typedef struct {\n    undefined_type_t member;\n} never_used_t;\n",
                  "language": "",
                  "tag": "pre"
                },
                "The bugfix is opt-in, because an immediate bugfix would risk breaking existing builds; the error will only be reported when the flag ",
                {
                  "code": "--no-compat=broken_unused_types",
                  "tag": "code"
                },
                " is passed to DMLC. This flag will be automatically enabled in Simics 8."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Model Builder": [
        [
          {
            "items": [
              [
                "Fixed a problem with the Python bindings of ",
                {
                  "code": "generic_transaction_t",
                  "tag": "code"
                },
                " in the case where it is included as a value in another struct in a Simics module."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Python Module: dev_util": [
        [
          {
            "items": [
              [
                "Added ",
                {
                  "code": ".name",
                  "tag": "code"
                },
                " members to the hierarchy of registers and fields returned by ",
                {
                  "code": "dev_util.bank_regs",
                  "tag": "code"
                },
                " (fixes HSD-13012531007)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7064,
    "version": "7.30.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Moved the implementation of ",
                {
                  "code": "Event",
                  "tag": "code"
                },
                " methods to ",
                {
                  "code": "event.cc",
                  "tag": "code"
                },
                " to adhere to the Simics C++ Style Guide."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Deprecated the ",
                {
                  "code": "simics::get_interface",
                  "tag": "code"
                },
                " template function in favor of ",
                {
                  "code": "simics::detail::get_interface",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "To avoid name collisions, the C++ API code has been moved from the ",
                {
                  "code": "simics::iface",
                  "tag": "code"
                },
                " namespace to the ",
                {
                  "code": "simics",
                  "tag": "code"
                },
                " namespace. For backward compatibility, the files in ",
                {
                  "code": "simics/iface/",
                  "tag": "code"
                },
                " still include the corresponding headers in ",
                {
                  "code": "simics/",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added rvalue assignment operator to ",
                {
                  "code": "simics::AttrValue",
                  "tag": "code"
                },
                " for automatic memory management of ",
                {
                  "code": "attr_value_t",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "DML library": [
        [
          {
            "items": [
              [
                "Added ",
                {
                  "code": "crc.dml",
                  "tag": "code"
                },
                " for DML 1.4 to Simics-Base. The file existed previously but was not packaged (fixes HSD-16023042081)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML)": [
        [
          {
            "items": [
              [
                "Elements of compile-time list expressions are now allowed to be non-constant expressions (fixes SIMICS-13113)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Added chapter ",
                {
                  "code": "Connecting External Simulators, Emulators and Hardware",
                  "tag": "code"
                },
                " and corresponding sample code."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Probe Monitors": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "json-merge",
                  "tag": "code"
                },
                " command now gives an error if the number of samples for the probes differ.  The new ",
                {
                  "code": "-truncate-samples",
                  "tag": "code"
                },
                " flag can circumvent the error and truncate the sample lists to the lowest number. Previously, an inconsistent number of samples caused Python errors when later generating a html-report on the merged run."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "etg": [
        [
          {
            "items": [
              [
                "Added support of deletion of etg object (fixes SIMICS-22958)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7069,
    "version": "7.31.0",
    "notes": {
      "Blueprint framework": [
        [
          {
            "items": [
              [
                "The RISC-V blueprints have been moved to a separate ",
                {
                  "code": "risc-v-simple-bp",
                  "tag": "code"
                },
                " module."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The QSP-x86 blueprints have been moved to a separate ",
                {
                  "code": "qsp-x86-bp",
                  "tag": "code"
                },
                " module."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The standard blueprints have been moved to a separate ",
                {
                  "code": "std-bp",
                  "tag": "code"
                },
                " module."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Breakpoint Manager": [
        [
          {
            "items": [
              [
                "Added network breakpoints type (fixes SIMICS-22782)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Reintroduced deprecated functions, variables and classes to maintain ABI compatibility with Simics Base version 6.0.215."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Updates in Simics C++ API modelling extensions (SME):",
                {
                  "items": [
                    [
                      "Additional checkpoint testing."
                    ],
                    [
                      "Minor documentation update."
                    ],
                    [
                      "Allow specialization of functions ",
                      {
                        "code": "get",
                        "tag": "code"
                      },
                      " and ",
                      {
                        "code": "set",
                        "tag": "code"
                      },
                      " in ",
                      {
                        "code": "sme::field",
                        "tag": "code"
                      },
                      "."
                    ]
                  ],
                  "tag": "list"
                }
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The implementation of methods for the following classes has been moved to their respective .cc files: ",
                {
                  "code": "Bank",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "Field",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "HierarchicalObject",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "Register",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "Fixed a regression on Windows, where Simics would crash on startup on systems with 8.3 filenames enabled (fixes HSD-14024450791)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed the ",
                {
                  "code": "release-notes",
                  "tag": "code"
                },
                " command to print the right version for each package release it lists."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The simulator now reports an error if a snapshot of the simulation state is taken while there are uncompleted calls to the ",
                {
                  "code": "SIM_transaction_wait",
                  "tag": "code"
                },
                " function. Previously, no errors were reported and an invalid snapshot was created. Unfortunately, the simulator cannot save simulation state in such cases so an error is now reported."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "New ",
                {
                  "code": "transaction-wait-all-completed",
                  "tag": "code"
                },
                " notifier was added to Simics. It helps with saving simulation state when ",
                {
                  "code": "SIM_transaction_wait",
                  "tag": "code"
                },
                " is used. One can advance simulation - e.g., with the ",
                {
                  "code": "bp.notifier run-until name = transaction-wait-all-completed",
                  "tag": "code"
                },
                " command - to the point where it is allowed to save simulation state with the ",
                {
                  "code": "write-configuration",
                  "tag": "code"
                },
                " command."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "list-transactions",
                  "tag": "code"
                },
                " command now accepts new flag ",
                {
                  "code": "-show-only-waited",
                  "tag": "code"
                },
                ". See ",
                {
                  "code": "list-transactions",
                  "tag": "code"
                },
                "'s documentation for the description of the new flag."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "When using Simics as a Python module, the default of ",
                {
                  "code": "sim->batch_mode",
                  "tag": "code"
                },
                " is now ",
                {
                  "code": "TRUE",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Ethernet Links": [
        [
          {
            "items": [
              [
                "Added network breakpoints using new network breakpoints interface (fixes SIMICS-22782)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "GDB Remote": [
        [
          {
            "items": [
              [
                "x86-64 register layout will now be sent as XML to the gdb client. To fall back to earlier behavior without register layout as XML, set the ",
                {
                  "code": "no_xml_registers",
                  "tag": "code"
                },
                " attribute to ",
                {
                  "code": "TRUE",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "x86-64 targets are now accessed using describe_registers interface, this allows accessing registers larger than 8 bytes, such as floating-point registers (fixes SIMICS-22966)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Registers larger than 8 bytes can now be properly accessed for Xtensa models."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Updated error handling. Some error logs and asserts that depended on the gdb client were replaced by warnings."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "I3C link": [
        [
          {
            "items": [
              [
                "Fixed an issue with ",
                {
                  "code": "i3c_link_endpoint",
                  "tag": "code"
                },
                " where checkpointing would fail if done while the delivery of any I3C message is still pending (fixes SIMICS-23031)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Linux Tracker": [
        [
          {
            "items": [
              [
                "The Linux tracker now properly handles threads for kernel versions 6.7 and more recent. Earlier there used to be a lot of error logs output for such kernels and process threads were not found (fixes SIMICS-22771)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Project Setup Script": [
        [
          {
            "items": [
              [
                "If ",
                {
                  "code": "project-setup",
                  "tag": "code"
                },
                " detects a location of Simics package 1033, it will now automatically create a package list file in the new project with the path to that package."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Python Module: target_info": [
        [
          {
            "items": [
              [
                "The memory size calculation now by default returns the sum of ",
                {
                  "code": "ram",
                  "tag": "code"
                },
                " image sizes, unless the target hierarchy top object has ",
                {
                  "code": "memory_megs",
                  "tag": "code"
                },
                " or ",
                {
                  "code": "memory_size",
                  "tag": "code"
                },
                " attributes."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "VMP": [
        [
          {
            "items": [
              [
                "Version 1.16.7 removes deprecated and unused driver feature of Intel® AVX. The more generalized driver functionality for all XSAVE-enabled ISA extensions has been available for the last 8 years."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "generic-flash-memory": [
        [
          {
            "items": [
              [
                "Added WP pin functionality to ",
                {
                  "code": "generic-flash-memory",
                  "tag": "code"
                },
                " (fixes SIMINT-1644)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "simics-nvme-comp": [
        [
          {
            "items": [
              [
                "Added an attribute ",
                {
                  "code": "dynamic_size",
                  "tag": "code"
                },
                " that allows the disk to grow with every added namespace."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7071,
    "version": "7.32.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Added a new member function ",
                {
                  "code": "dev",
                  "tag": "code"
                },
                " in the ",
                {
                  "code": "Connect",
                  "tag": "code"
                },
                " class. This function returns the Simics device object that contains the ",
                {
                  "code": "Connect",
                  "tag": "code"
                },
                " class instance (fixes HSD-14024355119)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added support for a two-argument version of the GROUP_ID macro, allowing users to specify both an object and a name (GROUP_ID(OBJ, NAME))(fixes SIMICS-23056)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "The default way to install the Simics Python module no longer uses editable mode."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The Simics Python module location in the Simics-Base package has been moved from ",
                {
                  "code": "<host>/bin/py3",
                  "tag": "code"
                },
                " to ",
                {
                  "code": "<host>",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "A bug where the simulator could crash after threading mode was changed was fixed. The respective commands, e.g. ",
                {
                  "code": "set-threading-mode",
                  "tag": "code"
                },
                ", now print an error message and do no changes if they are called while there are uncompleted calls to the ",
                {
                  "code": "SIM_transaction_wait",
                  "tag": "code"
                },
                " function. Unfortunately, the simulator cannot update threading mode while there are ongoing calls to ",
                {
                  "code": "SIM_transaction_wait",
                  "tag": "code"
                },
                " function (fixes HSD-18040613289)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Command ",
                {
                  "code": "list-pcie-hierarchies",
                  "tag": "code"
                },
                " now shows if a PCIe function has been disabled which makes it inaccessible."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "api-help",
                  "tag": "code"
                },
                " command now pulls in reference documentation from add-on packages that include such documentation."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "print-image-memory-stats",
                  "tag": "code"
                },
                " command no longer truncates output after 40 rows."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The memory-map command now accepts ",
                {
                  "code": "substr = <substring>",
                  "tag": "code"
                },
                " that can be used to filter the output from the command (fixes HSD-22020823986)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "Added support for platform breakpoint type ",
                {
                  "code": "VMClear",
                  "tag": "code"
                },
                " (fixes HSD-13012732428)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Updated aarch64 register handling to support updated register names in cpu models."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device API": [
        [
          {
            "items": [
              [
                "Added two new ",
                {
                  "code": "I3C",
                  "tag": "code"
                },
                " interfaces: ",
                {
                  "code": "i3c_hdr_master",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "i3c_hdr_slave",
                  "tag": "code"
                },
                ". This is to support modelling of the ",
                {
                  "code": "HDR",
                  "tag": "code"
                },
                " transfers modes in I3C (fixes HSD-22020865351)."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Python bindings for the the following interfaces have been added: ",
                {
                  "code": "alg",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "arm_cpu_group_event",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "arm_cpu_group_exclusive",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "arm_cpu_group_tlb",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "bank_after_read",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "bank_after_write",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "bank_before_read",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "bank_before_write",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "class_disassembly",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "dist_control_node",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "dummy_memory_page",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "gbic_transceiver",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "icode",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "instrum_registration",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "mips_exception_query",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "nios_cache",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "nios_custom",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "pcie_link_training",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "pool_protect",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "sparc_v8",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "tcp_connection_info",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "vga_update",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "x86_exception",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "x86_memory_access",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "x86_pkg_cstate",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "x86_smm",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "x86_tlb_v2",
                  "tag": "code"
                }
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Register Viewer": [
        [
          {
            "items": [
              [
                "The commands ",
                {
                  "code": "print-device-reg-info",
                  "tag": "code"
                },
                " will no longer truncate output after 40 lines (fixes HSD-22020938608)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "GDB Remote": [
        [
          {
            "items": [
              [
                "Updated ARM register handling to support updated register names in ",
                {
                  "code": "arm-v8",
                  "tag": "code"
                },
                " cpu models."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe DML library": [
        [
          {
            "items": [
              [
                "Added common functions ",
                {
                  "code": "disable_function",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "enable_function",
                  "tag": "code"
                },
                " to template ",
                {
                  "code": "config_bank",
                  "tag": "code"
                },
                " to temporarily make a function and its resources inaccessible over PCIe (fixes HSD-22020936945)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "PCIe Downstream Port": [
        [
          {
            "items": [
              [
                "A PCIe message that cannot be delivered to legacy endpoints because they are missing interface ",
                {
                  "code": "pci_express",
                  "tag": "code"
                },
                " is now treated as a warning instead of an error. It is allowed in Simics to directly connect PCI endpoints to PCIe hierarchies, so these scenarios will happen by design."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Probe Monitors": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "html-report",
                  "tag": "code"
                },
                " command has been slightly improved. Values are not truncated as much (which we do to reduce the size of the html). Generated class probes are now displayed in its own section."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Text console": [
        [
          {
            "items": [
              [
                "Improved escaping of non-ASCII characters when echoing console output to the Simics command line: Bytes >= 0x80 are now escaped as ",
                {
                  "code": "\\xNN",
                  "tag": "code"
                },
                ", unless they are part of well-formed UTF-8 characters."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "etg": [
        [
          {
            "items": [
              [
                "Added support for customizing TX bandwidth when using ETG (fixes SIMICS-23028)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7072,
    "version": "7.33.0",
    "notes": {
      "Core": [
        [
          {
            "items": [
              [
                "A dangling memory reference when demapping an object inside an ongoing transaction has been fixed, 18041575398."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7073,
    "version": "7.34.0",
    "notes": {
      "Core": [
        [
          {
            "items": [
              [
                "Fixed a bug in ",
                {
                  "code": "set-prioritized-packages",
                  "tag": "code"
                },
                ", which caused the command to not affect the Simics module load order."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Calling ",
                {
                  "code": "SIM_process_work",
                  "tag": "code"
                },
                " without a callback is no longer allowed."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Simics Python module": [
        [
          {
            "items": [
              [
                "When using ",
                {
                  "code": "pip install",
                  "tag": "code"
                },
                " to install the Simics Python distribution package, e.g. in a Python virtual environment, intermediate build directories are now created in a temporary directory, given by Python's ",
                {
                  "code": "tempfile.gettempdir()",
                  "tag": "code"
                },
                ", instead of in the directory where the Simics-Base package was installed."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7075,
    "version": "7.35.0",
    "notes": {
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Fixed a bug in the ",
                {
                  "code": "RegisterField",
                  "tag": "code"
                },
                " class that prevented fields from being registered in an array with names like ",
                {
                  "code": "f[0]",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Resolved an issue with ",
                {
                  "code": "RegisterClassWithSimics",
                  "tag": "code"
                },
                " class where an unspecified dependency existed between its static constructor and the static variable ",
                {
                  "code": "cached_group_id",
                  "tag": "code"
                },
                ". This dependency could lead to initialization order problems."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "When running Simics with ",
                {
                  "code": "--verbose",
                  "tag": "code"
                },
                ", the message about reading module capabilities is now printed on both Linux and Windows host."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Ethernet Networking Technology Guide": [
        [
          {
            "items": [
              [
                "Removed obsolete tutorials."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7078,
    "version": "7.36.0",
    "notes": {
      "Breakpoint Manager": [
        [
          {
            "items": [
              [
                "Fixed a problem in clock breakpoints when floating point numbers were used."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The clock breakpoint description now respects the settings done using the ",
                {
                  "code": "output-radix",
                  "tag": "code"
                },
                " command."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "Updates in Simics C++ API modelling extensions (SME):",
                {
                  "items": [
                    [
                      "Cleanup of build dirs"
                    ],
                    [
                      "Added force flag for deletion"
                    ],
                    [
                      "Added include for std::sort in unittest"
                    ]
                  ],
                  "tag": "list"
                }
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Added the ",
                {
                  "code": "SimpleBankPort",
                  "tag": "code"
                },
                " class to make it easier to register a bank port."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "sync-info",
                  "tag": "code"
                },
                " command has been renamed to ",
                {
                  "code": "print-sync-info",
                  "tag": "code"
                },
                "."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "When the ",
                {
                  "code": "set-time-quantum",
                  "tag": "code"
                },
                " command is used for inspection, i.e. without any arguments, it will now print its output also when run from a script."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Make ",
                {
                  "code": "list-modules",
                  "tag": "code"
                },
                " handle paths with embedded ",
                {
                  "code": "..",
                  "tag": "code"
                },
                " better."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "help",
                  "tag": "code"
                },
                " command can now show information about interfaces defined on loaded classes."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "module",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "-show-port-classes",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "substr",
                  "tag": "code"
                },
                " arguments of the ",
                {
                  "code": "list-classes",
                  "tag": "code"
                },
                " command now work correctly when used together."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "When running Simics and providing multiple scripts on the command line, if there is an error from one script then the following scripts are now ignored."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Fixed a problem in ",
                {
                  "code": "list-failed-modules",
                  "tag": "code"
                },
                " where some failed modules were not included."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Debugger": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "tcf",
                  "tag": "code"
                },
                " object is now marked as permanent and cannot be deleted once it has been created (fixes SIMICS-23082)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Register Viewer": [
        [
          {
            "items": [
              [
                "Fixed a problem in substring matching in the ",
                {
                  "code": "print-device-regs",
                  "tag": "code"
                },
                " command, where certain strings were not matched correctly."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Probe Monitors": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "html-report",
                  "tag": "code"
                },
                " now emits tooltips that appear when hovering over graphs with a defined ",
                {
                  "code": "description",
                  "tag": "code"
                },
                " property, describing what the graph(s) show."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "new-system-perfmeter",
                  "tag": "code"
                },
                " ",
                {
                  "code": "explore",
                  "tag": "code"
                },
                " probe-collection now includes the new ",
                {
                  "code": "cpu.vmp.disabled_reason",
                  "tag": "code"
                },
                " probe, along with a graph in the ",
                {
                  "code": "html-report",
                  "tag": "code"
                },
                " command."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The probe-monitors' ",
                {
                  "code": ".status",
                  "tag": "code"
                },
                " now includes more information on how each probe has been added."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "Reduced output when ",
                {
                  "code": "new-system-perfmeter",
                  "tag": "code"
                },
                " is run; added probes are no longer printed."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Process Histogram": [
        [
          {
            "items": [
              [
                "Fixed a problem where a process-histogram could be created without a software tracker (fixes SIMICS-21872)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Project Setup Script": [
        [
          {
            "items": [
              [
                "Fixed a problem where the host Python setting was not reflected to the Simics launch."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Sample Device for package priorities": [
        [
          {
            "items": [
              [
                "Make package detection work regardless of use of \"..\" in package and module paths."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Simics Python module": [
        [
          {
            "items": [
              [
                "Added support for launching simics through ",
                {
                  "code": "python -m runsimics ...",
                  "tag": "code"
                },
                ". This only works in a Python virtual environment set up with the Simics-Base distribution package and its dependencies."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Tracer Tool": [
        [
          {
            "items": [
              [
                {
                  "code": "new-tracer-tool",
                  "tag": "code"
                },
                " flags ",
                {
                  "code": "-print-opcode",
                  "tag": "code"
                },
                ", ",
                {
                  "code": "-print-memory-type",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "-print-access-type",
                  "tag": "code"
                },
                " will now work properly after being mixed up."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7079,
    "version": "7.37.0",
    "notes": {
      "Blueprint framework": [
        [
          {
            "items": [
              [
                "Add port object handling to blueprint component wrappers (SIMICS-23038)."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "C++ Device API v2": [
        [
          {
            "items": [
              [
                "The attribute setter now provides an informative message to the user, rather than logging an error message on the device object."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The class method ",
                {
                  "code": "set_bank_as_initialized",
                  "tag": "code"
                },
                " in ",
                {
                  "code": "MappableConfObject",
                  "tag": "code"
                },
                " has been renamed and its functionality updated to ",
                {
                  "code": "write_protect_iface_maps",
                  "tag": "code"
                },
                ". This change is designed to offer a clearer and more intuitive approach to managing the write protection status of iface_maps."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Core": [
        [
          {
            "items": [
              [
                "A bug was fixed where the ",
                {
                  "code": "cli.sb_create",
                  "tag": "code"
                },
                " Python function sometimes failed to start a script branch."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "set-min-latency",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "set-time-quantum",
                  "tag": "code"
                },
                " commands now have the same ",
                {
                  "code": "count",
                  "tag": "code"
                },
                " and ",
                {
                  "code": "unit",
                  "tag": "code"
                },
                " arguments as the ",
                {
                  "code": "run",
                  "tag": "code"
                },
                " command."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Project Setup Script": [
        [
          {
            "items": [
              [
                "The generated project trampolines now use the value of the ",
                {
                  "code": "SIMICS_PYTHON",
                  "tag": "code"
                },
                " environment variable that was set when ",
                {
                  "code": "project-setup",
                  "tag": "code"
                },
                " was run."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  },
  {
    "build_id": 7080,
    "version": "7.38.0",
    "notes": {
      "Core": [
        [
          {
            "items": [
              [
                "New API function, ",
                {
                  "code": "SIM_event_class_flags",
                  "tag": "code"
                },
                " to get the registered event flags for an event class."
              ]
            ],
            "tag": "list"
          }
        ],
        [
          {
            "items": [
              [
                "New API function, ",
                {
                  "code": "SIM_get_event_class",
                  "tag": "code"
                },
                " to get hold of the event class registered on a configuration class."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Device Modeling Language (DML) 1.4": [
        [
          {
            "items": [
              [
                "Improved the log messages that are output by default for partial register accesses (fixes ",
                {
                  "children": [
                    "#356"
                  ],
                  "href": "https://github.com/intel/device-modeling-language/issues/356",
                  "tag": "a"
                },
                ")."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Probe Monitors": [
        [
          {
            "items": [
              [
                "The ",
                {
                  "code": "summary",
                  "tag": "code"
                },
                " command has a new argument, ",
                {
                  "code": "histogram_max_lines",
                  "tag": "code"
                },
                ", where the maximum lines in a histogram can be set, otherwise the max number of lines are taken from the table settings as given by the ",
                {
                  "code": "table-setting",
                  "tag": "code"
                },
                " command in the monitor."
              ]
            ],
            "tag": "list"
          }
        ]
      ],
      "Simics Migration Guide": [
        [
          {
            "items": [
              [
                "Adding import clarification to documentation (fixes SIMINT-1673)."
              ]
            ],
            "tag": "list"
          }
        ]
      ]
    }
  }
]