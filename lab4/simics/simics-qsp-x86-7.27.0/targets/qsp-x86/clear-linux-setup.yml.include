run-script "%script%/hardware.yml" namespace = hardware

local $system = (params.get hardware:output:system)
instantiate-components $system

## Name system
$system->system_info = (params.get system_info)

## Set a time quantum that provides reasonable performance
set-time-quantum cell = ((($system->cpu_list)[0])->cell) seconds = 0.0001

if (params.get software:osa:create) {
    ### process tracker
    load-module os-awareness
    create-os-awareness name = $system + ".software"
}

if ((params.get software:osa:create)
    and (params.get software:osa:create_tracker)) {
    local $lx_tracker = ($system.software.insert-tracker
                         tracker = "linux_tracker_comp")
    if (params.get software:osa:tracker_params) != NIL {
        $lx_tracker.load-parameters (params.get software:osa:tracker_params)
    }
}

if ((params.get  software:linux:auto_login) or (params.get software:linux:auto_login_root)) {
    local $enable_real_time_mode = (params.get simulation:enable_real_time_mode)
    script-branch "autologin" {
        local $login_con = $system.serconsole
        local $auto_login_user = "simics"
        local $prompt_string = "$ "
        if (params.get software:linux:auto_login_root) {
            # $auto_login_root wins over $auto_login
            $auto_login_user = "root"
            $prompt_string = "# "
        }
        bp.console_string.wait-then-write $login_con.con "cl-qsp login: " ("%s\n" % $auto_login_user)
        bp.console_string.wait-for $login_con.con $prompt_string
        local $msg = "Autologin as \"%s\"" % $auto_login_user
        $msg += " was done on \"%s\"." % $login_con->title
        echo $msg
        add-session-comment $msg
        if ($enable_real_time_mode) {
                enable-real-time-mode 200
        }
    }
}


log-type -disable unimpl
log-type -disable spec-viol
